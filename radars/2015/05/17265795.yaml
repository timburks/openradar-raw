apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17265795"
    labels:
        datastore_id: "6142689271611392"
data:
    classification: ""
    created: "2015-05-21T14:38:04.91411Z"
    description: "Summary:\r\nPredicate with format [NSPredicate predicateWithFormat:@\"number = %d AND name IN %@\", (long long)1, [NSSet setWithObjects:@\"A\", @\"B\", nil]], evaluates supplied NSSet as nil.\r\n\r\nThis happens only when buildint with 32Bit architecture.\r\n\r\nSteps to Reproduce:\r\n1. Create NSPRedicate with format.\r\n2. First part needs to compare to number that is (long long) or int64_t.\r\n3. Second part needs to check if soemthing is contained in supplied set. \r\n\r\nExpected Results:\r\nExpected predicate format: \"number == 1 AND name IN {\"A\", \"B\"}\"\r\n\r\nActual Results:\r\nActual predicate format: \"number == 1 AND name IN nil\"\r\n\r\nVersion:\r\niOS 7.1 (11D167)\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\niOS SDK 7.1, Device or simulator with 32bit architecture.\r\n\r\nAttachments:\r\n'NSPredicateInt64_BugTest.zip' was successfully uploaded."
    email: k.misiura@gmail.com
    modified: "2015-05-21T14:38:04.91446Z"
    number: "17265795"
    number_intvalue: 17265795
    originated: 11/06/2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: ""
    reproducible: YES
    resolved: ""
    status: Open
    title: NSPredicate evaluetes NSSet as nil.
