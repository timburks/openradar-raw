apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21108886"
    labels:
        datastore_id: "5101072997679104"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-05-26T19:45:43.33059Z"
    description: "Summary:\r\nSeveral crashes occur in a Swift based SpriteKit project when touching the screen or pausing the SKScene. They only occur when compiling with \"Fastest (-O)\" optimization. As documented:-\r\n\r\nSimulator (iPhone 5/5s), Debug, Swift Optimization Level None (-Onone) = No crash.\r\nDevice (iPhone 5), Debug, Swift Optimization Level None (-Onone) = No crash.\r\nSimulator (iPhone 5), Debug, Swift Optimization Level Fastest (-O) = Crash.\r\nSimulator (iPhone 5s), Debug, Swift Optimization Level Fastest (-O) = Crash.\r\nDevice (iPhone 5), Debug, Swift Optimization Level Fastest (-O). = Crash when not connected to the debugger.\r\nDevice (iPad Air), Debug, Swift Optimization Level Fastest (-O). No crashes occur regardless of whether or not the debugger is connected.\r\n\r\nThe stack trace includes internal SpriteKit method calls that indicate the crash occurs when traversing the node hierarchy (such as SKNode nodesAtPoint: and children).\r\n\r\nSteps to Reproduce:\r\n1) Download the example project at https://github.com/NxSoftware/Swift-SpriteKit-Crash\r\n2) Run the project in the simulator with -O Swift optimization.\r\n3) Tap anywhere on the screen or attempt to pause the game.\r\n\r\nExpected Results:\r\nThe game should be paused if that was the desired action, or a touch even should be registered in the SKScene.\r\n\r\nActual Results:\r\nThe app crashes."
    email: steve_w101@gmx.com
    modified: "2015-05-26T19:48:11.03373Z"
    number: "21108886"
    number_intvalue: 21108886
    originated: 26-May-2015 08:45 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 8.3 (12F70)
    reproducible: Always
    resolved: ""
    status: Open
    title: Crash in Swift based SpriteKit project with -O optimisation
