apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21103000"
    labels:
        datastore_id: "6062070319546368"
data:
    classification: Enhancement
    created: "2015-05-26T13:54:58.13712Z"
    description: "For both security and interoperability reasons, I'd like to have some control on the SSL/TLS handshake process when connecting to select hosts over https. In particular, I'd like to:\r\n\r\n\t1. Prohibit use of older protocol versions (say, any version prior to TLS v1.2);\r\n\t\r\n\t2. Prohibit use of weak ciphersuites like those marked \"EXPORT\" or using the venerable but vulnerable RC4 stream cipher;\r\n\r\n\t3. Control the priority (order) of enabled ciphersuites;\r\n\r\n\t4. (For debugging purposes) Figure out which ciphersuite was selected at the end of the negotiation;\r\n\r\nI think I can do all of the above if I use CFNetwork in conjunction with Secure Transport, but not if I use a high-level API like NSURLConnection.  Which is a pity, because NSURLConnection gives me so much more than CFNetwork, for free.\r\n\r\nSTEPS TO REPRODUCE:\r\n\r\nCreate a NSURLConnection object from an NSURLRequest for https://www.howsmyssl.com/a/check; observe the returned JSON; notice how some of the ciphersuites offered for negotiation are weak and the client is given a \"Bad\" rating."
    email: marco.piovanelli@gmail.com
    modified: "2015-05-26T13:54:58.13748Z"
    number: "21103000"
    number_intvalue: 21103000
    originated: "2015-05-26"
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "8.3"
    reproducible: n/a
    resolved: ""
    status: ""
    title: NSURLConnection should offer ability to fine-tune SSL/TLS settings
