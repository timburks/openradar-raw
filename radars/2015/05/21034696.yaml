apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21034696"
    labels:
        datastore_id: "4989937497669632"
data:
    classification: Security
    created: "2015-05-20T08:25:47.99637Z"
    description: "Summary:\nI have a .swift file with a public function `encode` that takes a few parameters. I also have an XCTest file to test the `encode` function.\nThe XCTest file imports my code fine â€“ I'm able to call public functions from it and even the function that is causing me trouble, encode, is autocompleting just fine when I start writing it out. However, when I try to compile it, I can see that it fails (with \"Extra argument in call\") because the compiler thinks I'm calling Foundation.encode rather than my own.\n\nChanging the name of it makes it work fine, but that is beside the point which is this; Swift is supposed to prioritise your module over the system's\n\nSteps to Reproduce:\nAdd a public function named encode(a: Int, b: Int). \nIn the XCTestCase file for the project import your module and in the class' test function call your encode function.\n\nExpected Results:\nThat the encode function defined in my imported module is called.\n\nActual Results:\nFails compilation with the error \"Extra argument in call\".\n\nRegression:\nIf I rename the encode function to some other non-conflicting name it works."
    email: matteosartori@gmail.com
    modified: "2015-05-20T08:25:47.99673Z"
    number: "21034696"
    number_intvalue: 21034696
    originated: 20-May-2015 10:24 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.4 (6E23)
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift XCTest namespace issue
