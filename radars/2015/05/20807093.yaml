apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20807093"
    labels:
        datastore_id: "4972232837169152"
data:
    classification: Enhancement
    created: "2015-05-04T21:44:08.88855Z"
    description: "Summary:\r\nThe Apple frameworks define a number of boxing and unboxing extensions on `NSValue`. The types in question (such as `CGRect`, `CMTime`, etc.) should, in the near-term, conform to `_ObjectiveCBridgeable` and be unconditionally convertible to and conditionally convertible from an `NSArray` of an appropriate `nSValue`.\r\n\r\nSteps to Reproduce:\r\n1. Attempt to use `AVAssetImageGenerator.generateCGImagesAsynchronouslyForTimes(_:completionHandler:)` with a `Swift.Array` of `CMTime`, or any such Objective-C method that expects an `NSArray` of an `NSValue` of a certain kind.\r\n\r\nExpected Results:\r\nThe method accepts an array literal of `CMTime` instances.\r\n\r\nActual Results:\r\nA compiler error is raised; one must manually map to `NSValue`.\r\n\r\nVersion:\r\nMac OS 10.10.4 (14E11f), Xcode 6.3.1 (6D1002), Swift 1.2 (swiftlang-602.0.49.6)\r\n\r\nNotes:\r\nAn ideal longer-term solution might involve hiding the Objective-C version of the method(s) and introducing versions in an overlay library that accept instances of `SequenceType` or `CollectionType`.\r\n\r\nMore conformances to `_ObjectiveCBridgeable` might have negative implications on performance or mask the meaning of `NSValue` to new Cocoa-on-Swift developers.\r\n\r\nConfiguration:\r\nOccurs when boxing complex structs.\r\n\r\nAttachments:"
    email: zwaldowski@gmail.com
    modified: "2015-05-04T21:44:08.88881Z"
    number: "20807093"
    number_intvalue: 20807093
    originated: 04-May-2015 05:43 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.3.1 (6D1002)
    reproducible: Sometimes
    resolved: "false"
    status: Open
    title: 'Swift: Provide transparent bridging for types with NSValue extensions'
