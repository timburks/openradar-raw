apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20906767"
    labels:
        datastore_id: "4984998553714688"
data:
    classification: Enhancement
    created: "2015-05-11T22:41:57.55692Z"
    description: |-
        Summary:
        Given a type P and an enum like so:

        enum E {
        	case C(P)
        }

        E should be given an implicit property of the form:

        var c: P? {
        	switch self {
        	case let .C(p):
        		return p
        	default:
        		return nil
        	}
        }

        I don’t think it’s essential that if P happens to be () then the property be isC: Bool instead, but it might be nice, who knows.

        This is dual to projection on tuples (.0, .1, etc) and properties on structs.


        Steps to Reproduce:
        N/A

        Expected Results:
        N/A

        Actual Results:
        N/A

        Regression:
        N/A

        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2015-05-11T22:41:57.55713Z"
    number: "20906767"
    number_intvalue: 20906767
    originated: 11-May-2015 06:41 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (6E14)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: enum cases should introduce properties'
