apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21108595"
    labels:
        datastore_id: "6069103596929024"
data:
    classification: UI/Usability
    created: "2015-05-26T19:36:39.22213Z"
    description: "Summary:\r\nIndicating that a method's block parameter is non-nullable breaks Xcode's ability to type-complete calls to the method. Leaving out the nullability specification results in a warning.\r\n\r\nSteps to Reproduce:\r\n1. Open attached sample project, CrossLanguageTypeComplete\r\n2. Open MyObjCClass.m for editing\r\n3. Put the insertion point at the end of line 22, which begins \"[self myMetho\" and type the character \"d\"\r\n4. Two type completion options appear, myMethod1 and myMethod2. Choose myMethod1\r\n5. Hit Return to expand the block parameter into a code template\r\n\r\nExpected Results:\r\nI expect to see:\r\n\r\n    [self myMethod1:^NSObject * __nonnull(NSString * __nonnull argument) {\r\n        code\r\n    }\r\n\r\nwith the word \"code\" selected.\r\n\r\nActual Results:\r\nI see:\r\n\r\n    [self myMethod1:(MyTaskBlock1 __nonnull()block\r\n\r\nwith \"(MyTaskBlock1 __nonnull()block\" selected\r\n\r\nVersion:\r\nXcode 6.3.2 (6D2105), OS X 10.10.3 (14D136)\r\n\r\nNotes:\r\nXcode correctly type-completes calls to myMethod2, which does not indicate the nullability of its block parameter. As a result, it generates a warning: /Users/matthews/Source/Experiments/CrossLanguageTypeComplete2/CrossLanguageTypeComplete/CrossLanguageTypeComplete/MyObjCClass.h:18:37: Block pointer is missing a nullability type specifier (__nonnull or __nullable)\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n'CrossLanguageTypeComplete.zip' was successfully uploaded."
    email: james.walter.matthews@gmail.com
    modified: "2015-05-26T19:36:39.22236Z"
    number: "21108595"
    number_intvalue: 21108595
    originated: 26-May-2015 03:29 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: 6.3.2 (6D2105)
    reproducible: Always
    resolved: ""
    status: Open
    title: specifying nullability of block parameters breaks type completion
