apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20989596"
    labels:
        datastore_id: "4538123044257792"
data:
    classification: ""
    created: "2015-05-21T14:06:23.62659Z"
    description: "Summary:\r\nSorry for the vague title, I don't have the vocabulary to succinctly describe what is going on. If you compile the attached Swift file as an XCTest you should see the strange compiler errors, including the error \"BugInSwiftGenerics.swift:39:16: Cannot convert return expression of type '() -> ()' to expected return type '() -> ()'\" which is what really makes me think this is a compiler bug.\r\n\r\nBasically the strangeness seems to occur if you try to define a generic class like so:\r\nclass SomeClass<T, U: SomeOtherClass<T>>\r\n\r\nThe compiler seems to generally choke on anything you try to do with the U type, i.e init, call functions on it, etc.\r\n\r\nSteps to Reproduce:\r\n1. Put the attached swift test file in a project as an XCTest\r\n2. Attempt to build the project\r\n\r\nExpected Results:\r\nThe test file compiles\r\n\r\nActual Results:\r\nUnexpected errors like \"BugInSwiftGenerics.swift:39:16: Cannot convert return expression of type '() -> ()' to expected return type '() -> ()'\"\r\n\r\nIf I remove the \"Equatable\" requirements from all of my types and recompile, the compiler consistently crashes with the attached stack trace\r\n\r\nVersion:\r\nXcode 6.3.1\r\nBuild version 6D1002\r\nOS X 10.10.3 (14D136)"
    email: histumness@gmail.com
    modified: "2015-05-21T14:06:23.62691Z"
    number: "20989596"
    number_intvalue: 20989596
    originated: 5/16/2015
    parent_number: '&{NULL_VALUE}'
    product: Developer tools
    product_version: ""
    reproducible: Yes
    resolved: ""
    status: Open
    title: Strange compiler errors when doing slightly advanced things with generics
