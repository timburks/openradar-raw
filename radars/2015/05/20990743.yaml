apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20990743"
    labels:
        datastore_id: "5599253233664000"
data:
    classification: Feature (New)
    created: "2015-05-17T08:42:48.90322Z"
    description: "Summary:\r\n\r\nRight now, in Objective-C this is possible:\r\n\r\nSomeClass<SomeProtocol> *variable;\r\n\r\nHowever, you cannot express the same \"type\" in Swift.\r\n\r\nYou can do something similar with generic parameters:\r\n\r\n<T: SomeClass where T: SomeProtocol>\r\n\r\nbut constraints like these aren't representable as a type yet.\r\n\r\nSteps to Reproduce:\r\nSee code above.\r\n\r\nExpected Results:\r\nCode compiles.\r\n\r\nActual Results:\r\nCode doesn't compile, syntax does not exist yet.\r\n\r\nNotes:\r\nIn reference, a tweet from Joe Groff: https://twitter.com/jckarter/status/598148395933372416 in a discussion about this."
    email: tom@inferis.org
    modified: "2015-06-21T19:50:18.08729Z"
    number: "20990743"
    number_intvalue: 20990743
    originated: 17-May-2015 10:42 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 1.2
    reproducible: Always
    resolved: ""
    status: Duplicate (15873071 - Open)
    title: Allow the combination of classes/structs and protocols in a type declaration
