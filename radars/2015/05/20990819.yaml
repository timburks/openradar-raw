apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20990819"
    labels:
        datastore_id: "6679230377099264"
data:
    classification: ""
    created: "2015-05-18T18:28:21.12566Z"
    description: "Summary:\r\nLet's say we have two enums and an overloaded function:\r\n\r\ntypedef NS_ENUM(NSUInteger, MyEnum) {\r\n    MyEnum1,\r\n    MyEnum2,\r\n};\r\n\r\ntypedef NS_ENUM(NSUInteger, YourEnum) {\r\n    YourEnum1,\r\n    YourEnum2,\r\n};\r\n\r\n__attribute__((overloadable)) void test(MyEnum value)\r\n{\r\n  NSLog(@\"MyEnum\");\r\n}\r\n\r\n__attribute__((overloadable)) void test(YourEnum value)\r\n{\r\n  NSLog(@\"YourEnum\");\r\n}\r\n\r\n\r\nIf we try the function in the following way:\r\n\r\ntest(MyEnum1);\r\n\r\nwe get a compile-time error: Call to 'test' is ambiguous\r\n\r\nWhat works is:\r\n1. Casting: test((MyEnum)MyEnum1);\r\n\r\nor\r\n2. Assigning an enum's member to variable first:\r\n\r\nMyEnum x = MyEnum1;\r\ntest(x);\r\n\r\nSteps to Reproduce:\r\n\r\n\r\nExpected Results:\r\nWe shouldn't have to cast or use an intermediary variable to hint the compiler about the type of enum's member.\r\n\r\nActual Results:\r\nWe get a compile-time error.\r\n\r\nVersion:\r\nXcode 6.3.1\r\n\r\nReal-world example that could benefit from this bug getting fix: https://github.com/fastred/ReflectableEnum\r\n\r\nResolved because it's the expected behavior."
    email: arkadiusz.holko@gmail.com
    modified: "2015-05-21T08:44:17.53546Z"
    number: "20990819"
    number_intvalue: 20990819
    originated: 17-May-2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: 21-May-2015
    status: Behaves correctly
    title: Overloaded functions don't work properly with enums (in Objective-C)
