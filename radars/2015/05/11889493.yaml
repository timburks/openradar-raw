apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11889493"
    labels:
        datastore_id: "4961941827092480"
data:
    classification: Other Bug
    created: "2015-05-12T22:42:08.4399Z"
    description: "Summary:\r\nWhen enabling iMessage in Messages, Messages creates many items in the default keychain, e.g. many passwords starting with \"ids\" in their name. However, it also creates a public/private key pair only labeled \"<key>\". Despite the fact that this is a broken label IMHO and thus qualifies as a bug (a key should have a DESCRIPTIVE name, <key> is probably the most stupid name a key can carry), Messages seems to never actually use this key, since removing it completely won't cause it to be recreated next time messages starts.\r\n\r\nMessages also creates a password item labeled \"com.apple.facetime: registrationV1\" and two other keys, \"iMessage Encryption Key\" and \"iMessage Signing Key\". When moving those keys from the \"default keychain\" (which is not labeled \"login\" on my system) to another keychain, Messages cannot find these any longer and recreates them. I consider this a bug. Users are free to have different keychains with different passwords and settings and an app should always search *ALL* keychains for a desired item and when manipulating the item, it should always manipulate it in place, so it stays in whatever keychain it is currently found.\r\n\r\nSteps to Reproduce:\r\n1. On a freshly installed OS X 10.8, create a second keychain.\r\n2. Start messages.\r\n3. Activate iMessages.\r\n\r\n4. Move all items created by Messages from the login keychain to the keychain created in step 1.\r\n5. Restart Messages.\r\n\r\nExpected Results:\r\nMessages finds the items in the other keychain, everything is fine.\r\n\r\nActual Results:\r\nMessages recreates three of those items again in the default keychain.\r\n\r\n\r\nRegression:\r\nn/a\r\n\r\nNotes:\r\nI'm very surprised that pretty much all applications out there are able to get the keychain usage right, only Apple's own apps permanently have issues as soon as a user has multiple keychains and items are not in the default keychain (other samples: Airport/WiFi passwords or XCode codesigning certs, etc.). Apple fails to follow their own recommendations to app developers regarding \"keychain usage\"; that's awkward."
    email: m.hanauska@gmail.com
    modified: "2015-05-12T22:42:08.44012Z"
    number: "11889493"
    number_intvalue: 11889493
    originated: 17-Jul-2012
    parent_number: '&{NULL_VALUE}'
    product: MacOS
    product_version: "10.8"
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Messages: iMessage Keychain Handling Broken'
