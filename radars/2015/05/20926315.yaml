apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20926315"
    labels:
        datastore_id: "6705001254617088"
data:
    classification: Feature (New)
    created: "2015-05-13T11:03:28.43224Z"
    description: "Summary:\r\nWhile investigating the issue that is now filed as rdar:20924980, I tried creating a fetch request whose predicate was \"ALL manyRelateds == nil\" in an attempt to find all instances of an entity without any objects related via the manyRelateds property.\r\n\r\nSteps to Reproduce:\r\nA sample project is attached which demonstrates this if you select the 3rd cell labeled, \"Unattached As via ALL (crash)\"\r\n\r\nSTR separately:\r\n1. Create a Core Data model with A<<->>B many-to-many related entities, whose relationships are A.manyBs and B.manyAs.\r\n2. Create a fetch request for entity A whose predicate is \"ALL manyBs == nil\".\r\n3. Attempt to execute the fetch request.\r\n\r\nExpected Results:\r\nThis would be translated into a SQL query which could retrieve all A entities without any related B objects.\r\n\r\nActual Results:\r\n'NSInvalidArgumentException' is thrown, reason: 'Unsupported predicate ALL manyRelateds == nil'\r\n\r\nVersion:\r\nXcode 6.3.1 (6D1002), iOS 8.3 (12F69)\r\n\r\nNotes:\r\nWorkaround: Using an inverted predicate of \"NONE manyBs != nil\" works, but arriving at it as non-intuitive. \"ALL manyBs == nil\" seems to be the logical way one would express this, but I am not allowed to.\r\n\r\nConfiguration:\r\nAny, Simulator or iOS device.\r\n\r\nAttachments:\r\n'ManyAToManyB.zip' was successfully uploaded.\r\n(project at <https://github.com/pgor/ManyAToManyB>)"
    email: pcgoracke@gmail.com
    modified: "2015-05-13T11:03:28.43252Z"
    number: "20926315"
    number_intvalue: 20926315
    originated: 12-May-2015 03:41 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: 8.3 (12F69)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'iOS 8.3: Allow Core Data predicate of "ALL manyRelateds == nil"'
