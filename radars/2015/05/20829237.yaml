apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20829237"
    labels:
        datastore_id: "5604999363035136"
data:
    classification: UI/Usability
    created: "2015-05-06T00:21:47.63665Z"
    description: "Summary:\nWhen using estimatedRowHeight and scrolling quickly past a cell that never gets its heightForRowAtIndexPath called, some cells that are drawn when scrolling back up flicker wildly.\n\nSteps to Reproduce:\n1. Create a table with lots of cells. \n2. Provide an `estimatedRowHeight`\n3. Implement `tableView:heightForRowAtIndexPath:` and return a different value than `estimatedRowHeight`\n4. Call `scrollToRowAtIndexPath:atScrollPosition:animated` to go to the last cell\n5. It'll end up halfway down the table thanks to radar 20829131, but that's fine for now.\n6. Using your finger, start slowly scrolling back up towards the top of the table.\n\nExpected Results:\nThe tableview cells should draw smoothly as you scroll back up.\n\nActual Results:\n1. After scrolling 10-15 cells the cells all suddenly jump and scroll much faster than they should be.\n2. Things settle down and are normal again until you scroll up another 10 or so cells...\n\nRegression:\nDescribe circumstances where the problem occurs or does not occur, such as software versions and/or hardware configurations.\n\nNotes:\nManually scrolling fast enough to skip a cell causes this too, but the scrollToRowAtIndexPath method here illustrates it easiest. The wider the difference between estRowHeight and actualHeight, the worse this gets â€” it is noticeable even with 5pt differences though."
    email: padraig.kennedy@gmail.com
    modified: "2015-05-06T00:21:47.63686Z"
    number: "20829237"
    number_intvalue: 20829237
    originated: 05-May-2015 05:21 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "8.3"
    reproducible: Always
    resolved: ""
    status: Open
    title: Scrolling back up on a tableView that uses `estimatedRowHeight` flickers wildly
