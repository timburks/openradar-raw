apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21173355"
    labels:
        datastore_id: "5599634143576064"
data:
    classification: ""
    created: "2015-05-30T19:57:28.29988Z"
    description: "// copy/paste the following into a playground:\r\n\r\n/*\r\n\r\nThis playground demonstrates an apparent bug in Swift.\r\n\r\n***\r\nThe playground does not run properly due to the bug. To let the playground run, comment-out the last line.\r\n***\r\n\r\nWhen creating a struct, if it has properties that have their default values set by a tuple assignment\r\n(e.g. let (a, b) = (1, 2) ), then an explicit initializer must also be provided.\r\n\r\nBelow are a few examples of similar structs that do not exhibit this bug.\r\n\r\nEspecially note WorksAsExpected4, which demonstrates that an empty explicit initializer solves the problem,\r\nand WorksAsExpected5, which demonstrates that a class that looks exactly like the problematic struct does not exhibit the apparent bug.\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\nstruct WorksAsExpected1{\r\n    let a = 1\r\n    let b = 2\r\n}\r\n\r\nstruct WorksAsExpected2{\r\n    let abTuple = (1, 2)\r\n}\r\n\r\nstruct WorksAsExpected3{\r\n    let (a, b): (Int, Int)\r\n    \r\n    init(){\r\n        (a, b) = (1, 2)\r\n    }\r\n}\r\n\r\nstruct WorksAsExpected4{ // almost the same as the problem, but with an empty init() included\r\n    let (a, b) = (1, 2)\r\n    \r\n    init(){}\r\n}\r\n\r\nclass WorksAsExpected5{ // identical to the problematic struct, but a class rather than a struct\r\n    let (a, b) = (1, 2)\r\n}\r\n\r\nstruct DoesNotWorkAsExpected{ // the problem\r\n    let (a, b) = (1, 2)\r\n}\r\n\r\n\r\nlet obj1 = WorksAsExpected1() // works ok\r\nlet obj2 = WorksAsExpected2() // works ok\r\nlet obj3 = WorksAsExpected3() // works ok\r\nlet obj4 = WorksAsExpected4() // works ok\r\nlet obj5 = WorksAsExpected5() // works ok\r\n\r\n// Error:\r\n//'DoesNotWorkAsExpected' cannot be constructed because it has no accessible initializers\r\nlet bad = DoesNotWorkAsExpected() // comment-out to let the playground run"
    email: atai.barkai@gmail.com
    modified: "2015-05-30T19:57:28.3002Z"
    number: "21173355"
    number_intvalue: 21173355
    originated: 30-May-2015 03:52 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode Version 6.3.2 (6D2105)
    reproducible: Always
    resolved: ""
    status: Open
    title: In Swift, a struct's default initializer breaks when assigning tuples default values
