apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19821429"
    labels:
        datastore_id: "5864927428345856"
data:
    classification: ""
    created: "2015-02-13T01:18:20.507778Z"
    description: "@noescape is very nice for making control flow type type constructs, but I don't understand why it's implied by @autoclosure.\r\n\r\nA construct for which it is nice to have @autoclosure without @noescape is SICP streams, https://mitpress.mit.edu/sicp/full-text/sicp/book/node70.html . This is basically what anyone trying to do functional reactive programming type stuff, or Haskell-style laziness, would want. It seems appropriate to me to require self. when referencing properties in an @autoclosure but not @noescape context.\r\n\r\nI'm not sure if part of the point here is to limit the craziness with @autoclosure, but @autoclosure is inherently an extremely special-purpose, kind of crazy, construct. I don't think _requiring_ @noescape is doing much to limit that, and it's cutting out useful cases."
    email: kenferry@gmail.com
    modified: "2015-02-13T01:18:20.507968Z"
    number: "19821429"
    number_intvalue: 19821429
    originated: 2/12/2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: 'Swift 1.2: separate @autoclosure from @noescape'
