apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19925136"
    labels:
        datastore_id: "4947734477930496"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-02-23T20:00:33.187168Z"
    description: |-
        Summary:
        See below.


        Steps to Reproduce:
        1. Compile this:
        func next<T>(outer: () -> ()?, inner: () -> T?) -> T? {
        	return inner() ?? outer().map { _ in next(outer, inner) } ?? nil
        }


        Expected Results:
        Successful compilation.


        Actual Results:
        Crash.


        Regression:
        This has regressed since 1.2b1.

        Iâ€™m aware of two workarounds:

        1. Use `if` statements instead of nil coalescing.
        2. Change outer to return `Bool` and use a ternary instead of nil coalescing.


        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2015-02-23T20:00:33.187314Z"
    number: "19925136"
    number_intvalue: 19925136
    originated: 23-Feb-2015 03:00 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (6D532l)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 1.2b2: Compiler crash with recursive function returning coalesced optional returns and .map'
