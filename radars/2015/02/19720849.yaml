apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19720849"
    labels:
        datastore_id: "6409136291971072"
data:
    classification: Other Bug
    created: "2015-02-04T22:23:13.060493Z"
    description: |-
        The code below yields the error shown. I accept that the call might be ambiguous or even might yield the unexpected result of a Test instance. However, the actual error message complains of being unable to find any valid interpretation, which seems wrong. The supplied expression should either be a Double or a Test, both of which have abs() defined. Nu?

        protocol TestConvertible {
            func toTest() -> Test
        }

        class Test: TestConvertible {
            func toTest() -> Test { return self }
        }

        extension Double: TestConvertible {
            func toTest() -> Test { return Test() }
        }

        func abs(x: Test) -> Test {
            return Test()
        }

        func -<T: TestConvertible, U: TestConvertible>(lhs: T, rhs: U) -> Test {
            return Test()
        }

        let aNumber = 23.4 - 3.1415     // aNumber is Double
        let abs1 = abs(aNumber)         // Fine, 20.26
        let abs2 = abs(23.4 - 3.1415)   // Error: could not find an overload for 'abs'
                                        //   that accepts the supplied arguments
    email: garth@garthsnyder.com
    modified: "2015-02-04T22:23:13.06065Z"
    number: "19720849"
    number_intvalue: 19720849
    originated: 04-Feb-2015 02:23 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.2b5 6C121
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: inaccurate(?) "could not find an overload" error'
