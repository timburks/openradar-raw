apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19839003"
    labels:
        datastore_id: "5217053086580736"
data:
    classification: Enhancement
    created: "2015-02-15T00:09:13.755278Z"
    description: "Summary:\nWhen adding an extension to a type in Swift, one can repeat a generic type, but this can result in really confusing error messages.\n\nSteps to Reproduce:\nTry to compile the following code:\n\nstruct G<T> {}\n\nextension G {\n\tstatic func g<T>() -> G<T> {\n\t\treturn G()\n\t}\n}\n\nExpected Results:\nError message: “Function cannot redefine generic type ’T’”.\n\nActual Results:\nUnhelpful and confusing error message: “'T' is not identical to ’T’”\n\nRegression:\nN/A\n\nNotes: \nThe code is obviously incorrect. One shouldn’t define <T> in g() again. But it would be nice to have a more accurate error message."
    email: info@nachosoto.com
    modified: "2015-02-15T00:09:13.755442Z"
    number: "19839003"
    number_intvalue: 19839003
    originated: 14-Feb-2015 04:09 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "1.1"
    reproducible: Always
    resolved: ""
    status: Open
    title: Extensions in Swift should not allow overriding a generic type
