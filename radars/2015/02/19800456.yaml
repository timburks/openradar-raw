apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19800456"
    labels:
        datastore_id: "6412998541312000"
data:
    classification: ""
    created: "2015-02-11T22:19:38.972725Z"
    description: "Summary:\r\nThe interface for StringInterpolationConvertible provides no distinction between components of the literal format string and interpolation components whose type is String.\r\n\r\nstruct Example: StringInterpolationConvertible\r\n{\r\n    init(stringInterpolation strings: Example...) { ... }\r\n    \r\n    init<T>(stringInterpolationSegment expr: T) {\r\n        // General case, specialized below\r\n    }\r\n    init(stringInterpolationSegment expr: Int) {\r\n        // This component is an Int\r\n    }\r\n    init(stringInterpolationSegment expr: String) {\r\n        // This component is EITHER a literal OR a String-typed interpolation segment?\r\n        // This initializer will be called 3 times for the example below.\r\n    }\r\n}\r\n\r\nlet x = \"def\"\r\nlet thing: Example = \"abc\\(x)ghi\"\r\n\r\nSteps to Reproduce:\r\n\r\n\r\nExpected Results:\r\nThere should be some way (an appropriate specialization, or another initializer in the protocol) to distinguish components of the interpolation literal from string values, to allow completely custom string-interpolation processing.\r\n\r\nActual Results:\r\nThe same specialization is used for the surrounding string literal and String-typed interpolation segments."
    email: jtbandes@gmail.com
    modified: "2015-10-09T17:53:54.68412Z"
    number: "19800456"
    number_intvalue: 19800456
    originated: 2/11/2015
    parent_number: "18681780"
    product: OS X SDK
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Duplicate/18681780
    title: 'Swift StringInterpolationConvertible: can''t distinguish between literal components and String arguments'
