apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19424909"
    labels:
        datastore_id: "6284740617306112"
data:
    classification: ""
    created: "2015-02-25T10:09:40.378667Z"
    description: "Summary:\r\nFollowing the discussion in DevForums[1] about the need for guaranteeing tail call optimization, have you considered handling the tail call optimization with annotiation like in Scala? [2]\r\n\r\n> The Scala compiler will automatically optimize any truly tail-recursive method. If you annotate a method that you believe is tail-recursive with the @tailrec annotation, then the compiler will warn you if the method is actually not tail-recursive. This makes the @tailrec annotation a good idea, both to ensure that a method is currently optimizable and that it remains optimizable as it is modified.\r\n> Note that Scala does not consider a method to be tail-recursive if it can be overridden. Thus the method must either be private, final, on an object (as opposed to a class or trait), or inside another method to be optimized.\r\n\r\n[1] https://devforums.apple.com/message/1051120#1051120\r\n[2] http://stackoverflow.com/a/3114245/41307"
    email: pavol.vaskovic@gmail.com
    modified: "2015-02-25T10:09:40.378847Z"
    number: "19424909"
    number_intvalue: 19424909
    originated: 09-Jan-2015 12:08 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Require tail call optimization for Swift function with annotation
