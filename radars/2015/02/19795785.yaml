apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19795785"
    labels:
        datastore_id: "5853511405273088"
data:
    classification: ""
    created: "2015-02-11T13:55:13.72743Z"
    description: "The graph solver used by Swift 1.2 to make the builds incremental is not very well optimised yet.\r\n\r\nIndeed first, it doesn't look at function signature changes so if you add a space in the block of one method, all files depending on that class will be recompiled.\r\n\r\nSecond, it seems to create the tree based on the files that were recompiled even if a change doesn't affect them. For example, If you move these 3 classes into different files\r\n\r\nclass FileA: NSObject {\r\n    var foo:String?\r\n}\r\nclass FileB: NSObject {\r\n    var bar:FileA?\r\n}\r\nclass FileC: NSObject {\r\n    var baz:FileB?\r\n}\r\n\r\nNow if you modify FileA the compiler will obviously mark FileA to be recompiled. It will also recompile FileB (that would be ok based on the changes to FileA) but also FileC because FileB is recompiled, and that is pretty bad because FileC never uses FileA here.\r\n\r\nThe equivalent ObjC code for FileC would not have an #import \"FileA\" directive (because it doesn't use it), and therefore, the compiler would not recompile it.\r\n\r\nThe same behaviour is expected here in Swift, so the graph solver needs to take those changes into account."
    email: johan.attali@gmail.com
    modified: "2015-02-11T13:55:13.727713Z"
    number: "19795785"
    number_intvalue: 19795785
    originated: 11-Feb-2015 02:53 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: XCode 6.3Beta - Swift 1.2
    reproducible: ""
    resolved: ""
    status: Open
    title: Swift 1.2 Incremental build tree is not optimised
