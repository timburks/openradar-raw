apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19776288"
    labels:
        datastore_id: "5753226066395136"
data:
    classification: Other Bug
    created: "2015-02-10T02:43:15.939038Z"
    description: "Summary:\r\nThe 6.3 seed 1 release notes indicate: \"Unannotated single-expression closures with non-Void return types can now be used in Void contexts.\"\r\n\r\nThis behavior is great, though I have observed it acting a bitâ€¦ over-zealous.\r\n\r\nSteps to Reproduce:\r\n1. Overload two methods, one that takes a \r\n2. Call that method with a one-line closure that unambiguously returns a value.\r\n3. Observe that the \"-> Void\" version is preferred.\r\n\r\nExpected Results:\r\nThis is a regression from Swift 1.1. Swift should choose Void-returning versions after exhausting more compatible versions.\r\n\r\nActual Results:\r\nSwift resolves to the Void-returning version.\r\n\r\nVersion:\r\n/OS X Version 10.10.3 (14D72i)/Xcode Version 6.3 (6D520o)\r\n\r\nNotes:\r\nWorkarounds include not using closures (in the example above, just passing the free function \"count\" works) and/or disambiguating the overloads manually. If map were implemented as an operator or free function, similar issues occur.\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n'TryForVoid.playground.zip' was successfully uploaded."
    email: zwaldowski@gmail.com
    modified: "2015-02-23T23:54:28.041784Z"
    number: "19776288"
    number_intvalue: 19776288
    originated: 09-Feb-2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode Version 6.3 (6D520o)
    reproducible: Sometimes
    resolved: "true"
    status: Closed
    title: 'Swift 1.2: New one-line closure behavior erroneously prefers Void return'
