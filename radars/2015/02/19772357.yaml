apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19772357"
    labels:
        datastore_id: "5215571322863616"
data:
    classification: ""
    created: "2015-02-09T22:52:21.547883Z"
    description: "Summary:\r\nIn Swift 1.1, you could override the subscripting methods in Swift, even if they were declared on an Objective-C superclass. This is no longer possible in Swift 1.2, no matter where the `override` keyword is placed.\r\n\r\nSteps to Reproduce:\r\n1) Create Objective-C Class as follows\r\n@interface Model : NSObject\r\n- (id)objectForKeyedSubscript:(NSString *)subscript;\r\n- (void)setObject:(id)object forKeyedSubscript:(NSString *)key;\r\n@end\r\n\r\n@implementation Model\r\n- (id)objectForKeyedSubscript:(NSString *)subscript { return nil; }\r\n- (void)setObject:(id)object forKeyedSubscript:(NSString *)key { }\r\n@end\r\n\r\n2) Import the above interface in a bridging header\r\n\r\n3) Create the following subclass\r\n\r\nclass ModelSubclass: Model {\r\n    subscript(key: String) -> String {\r\n        get { return \"hi\" }\r\n        set(value) { println(value) }\r\n    }\r\n}\r\n\r\nExpected Results:\r\nThe code sample should compile.\r\n\r\nActual Results:\r\nThere are two compilation errors, subscript getter overrides Objective-C method 'objectForKeyedSubscript:' from superclass 'Model' and subscript setter overrides Objective-C method 'setObject:forKeyedSubscript:' from superclass 'Model'\r\n\r\nRegression:\r\nThis is a regression in Xcode 6.3 Beta 1 from Xcode 6.1.1 and Xcode 6.2 Betas, coinciding with Swift 1.2."
    email: segiddins@gmail.com
    modified: "2015-02-09T22:52:21.548171Z"
    number: "19772357"
    number_intvalue: 19772357
    originated: 09-Feb-2015
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 6.3 Beta
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode-Beta (6D520o): Cannot override ObjC subscripts in Swift'
