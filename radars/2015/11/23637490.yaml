apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23637490"
    labels:
        datastore_id: "5005721603145728"
data:
    classification: Other Bug
    created: "2015-11-20T23:10:50.30286Z"
    description: |-
        See: https://forums.developer.apple.com/thread/26621

        If this is not a bug, it’s certainly an inconsistent and unexpected behavior. Consider this code:

        class A {}
        class B: A {}

        func +(a: A, b: A) { print("A + A") }
        func +(a: A, b: B) { print("A + B") }
        func +(a: B, b: A) { print("B + A") }

        A() + A() // A + A
        A() + B() // A + A
        B() + A() // A + A

        If the functions were non-operator functions, the calls would be dispatched to the most specific version; there would be one call to each implementation.

        What’s especially weird is that defining the B + B version makes everything work as expected, even though the B + B version is never actually called:

        class A {}
        class B: A {}

        func +(a: A, b: A) { print("A + A") }
        func +(a: A, b: B) { print("A + B") }
        func +(a: B, b: A) { print("B + A") }
        func +(a: B, b: B) { print("B + B”) }

        A() + A() // A + A
        A() + B() // A + B
        B() + A() // B + A
    email: garth@garthsnyder.com
    modified: "2015-11-20T23:10:50.30313Z"
    number: "23637490"
    number_intvalue: 23637490
    originated: 20-Nov-2015 03:10 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.1.1
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: operator functions don''t show normal overloading behavior'
