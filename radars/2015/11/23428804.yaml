apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23428804"
    labels:
        datastore_id: "5691256634081280"
data:
    classification: Performance
    created: "2015-11-06T11:55:24.05314Z"
    description: "Summary:\r\nThe following snippet demonstrates my issue:\r\n\r\nfunc fast<E : Comparable >(var elements: [E]) {\r\n    while elements.count > 0 {\r\n        elements.sortInPlace() { $0 < $1 }\r\n        elements.popLast()\r\n    }\r\n}\r\n\r\nfunc slow<E : Comparable>(var elements: [E]) {\r\n    while elements.count > 0 {\r\n        elements.sortInPlace(<)\r\n        elements.popLast()\r\n    }\r\n}\r\n\r\nI would expect both of these function to have equal performance, however slow() is much slower than fast().\r\n\r\n(Some profiling indicates that at least in this case partial applies seem to be involved)\r\n\r\nIf the functions are not generic, performance is equally, as expected. Same results if the comparison closures are passed into the generic functions from a non-generic context.\r\n\r\nUsing a generic function instead of an operator leads to similar results.\r\n\r\n\r\nAttached is a small example project that demonstrates this issue by printing the runtimes of these functions for some random input.\r\n\r\nSteps to Reproduce:\r\n1. Open the attached project\r\n2. Build & Run\r\n3. The application should print the runtimes for the execution of slow() and fast()\r\n\r\nExpected Results:\r\nThe two runtimes should be relatively close, indicating equal performance.\r\n\r\nActual Results:\r\nThe results indicate that there is a significant performance difference.\r\n\r\nVersion:\r\nXcode 7.2b2 (7C46t)\r\nApple Swift version 2.1.1 (swiftlang-700.1.101.11 clang-700.1.79)\r\nOS X 10.11.1 (15B42)"
    email: janoschhildebrand@gmail.com
    modified: "2015-11-06T11:55:24.05336Z"
    number: "23428804"
    number_intvalue: 23428804
    originated: 06-Nov-2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.2b2
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode 7.2b2 (7C46t): [Swift] Using function name as closure argument is slower than using closure literal in generic context'
