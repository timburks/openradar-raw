apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23376350"
    labels:
        datastore_id: "5669622346940416"
data:
    classification: Other Bug
    created: "2015-11-03T17:49:42.36781Z"
    description: "Summary:\r\n\r\nProtocols that define an initializer with an argument, that is then\r\ndeclared in a protocol extension, and then implemented in the extension\r\nof a struct, causes the program to not compile.\r\n\r\nSteps to reproduce:\r\n\r\n1. Create a protocol with an initializer\r\n2. Implement the initializer in a protocol extension\r\n3. Create an empty struct\r\n4. Conform to the protocol in an extension on that struct\r\n5. Call the initializer\r\n\r\nOR\r\n\r\n1. Open the attached playground\r\n\r\nExpected results:\r\n\r\nEverything compiles correctly\r\n\r\nActual results:\r\n\r\nA compiler error is produced:\r\n\r\n```\r\n'(string: String) -> Bar' is not convertible to '(string: String) -> Bar?'\r\n```\r\n\r\nNotes:\r\n\r\n- If you make the struct conform to the protocol in the definition ( not\r\n  in an extension) it works"
    email: keithbsmiley@gmail.com
    modified: "2017-08-18T21:57:25.68638Z"
    number: "23376350"
    number_intvalue: 23376350
    originated: 03-Nov-2015 09:49 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2.1
    reproducible: Always
    resolved: Xcode 9 beta 5
    status: Resolved
    title: Swift protocol extension with initializer doesn't compile in extension of struct
