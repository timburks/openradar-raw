apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23436758"
    labels:
        datastore_id: "6321975265853440"
data:
    classification: Enhancement
    created: "2015-11-06T21:37:00.53588Z"
    description: |-
        The following code produces the error “Cannot pass immutable value of type ‘Int’ as inout argument”:

            func f(inout v:Int) {}
            var x:Int! = 5
            f(&x)

        I totally get it. There’s an implicit conversion from Optional<Int> that’s interfering.

        However, the code is unambiguous in its intent. Given that Swift happily converts both function parameters and return values to and from optionals, it would make sense for Swift to automatically apply the same type of conversions in this situation.
    email: garth@garthsnyder.com
    modified: "2015-11-06T21:37:00.53625Z"
    number: "23436758"
    number_intvalue: 23436758
    originated: 06-Nov-2015 01:36 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.1
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: inout params should accommodate optionals'
