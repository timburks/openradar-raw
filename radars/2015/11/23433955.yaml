apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23433955"
    labels:
        datastore_id: "5600441429655552"
data:
    classification: Enhancement
    created: "2015-11-06T19:17:40.72459Z"
    description: "This is essentially a duplicate of rdar://23255436\n\nSummary:\r\nIn some cases it would be useful to extend a generic type under some conditions for the generic argument. \r\n\r\nFor example one could declare a protocol JSONEncodable to which all JSON types conform (e.g. Int, String, Bool, â€¦). Each array of these types is JSON encodable as well and should also conform to JSONEncodable if it only contains elements that conform to JSONEncodable. However, writing an extension of Array like the following gives the error: Extension of type 'Array' with constraints cannot have an inheritance clause\r\n\r\nextension Array: JSONDecodable where Element: JSONDecodable\n\nAs an additional use case, consider Equatable:\n\nstruct T: Equatable {}\nlet t = T()\nt == t\n[t] == [t]\n[[t]] == [[t]]\n\nThe last statement does not compile because although Array where Element: Equatable can be compared using ==, they cannot themselves be declared Equatable, and so cannot be nested.\r\n\r\nSteps to Reproduce:\r\nOpen the sample playground and try to compile it\r\n\r\nExpected Results:\r\nThe code should compile and arrays should conform to Equatable if its elements are Equatable\r\n\r\nActual Results:\r\nThe code does not compile\r\n\r\nVersion:\r\nXcode 7.1 (7B91b)\r\n\r\nNotes:\r\n\nstruct Thing: Equatable {}\n\nfunc ==(this: Thing, that: Thing) -> Bool {\n  return true\n}\n\nlet it = Thing()\n\nit == it\n[it] == [it]\n[[it]] == [[it]]"
    email: martin.kuehl@gmail.com
    modified: "2015-11-06T19:17:40.72482Z"
    number: "23433955"
    number_intvalue: 23433955
    originated: 06-Nov-2015 08:17 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.1 (7B91b)
    reproducible: Always
    resolved: ""
    status: Open
    title: '[Swift] extension with constraints cannot have inheritance clause'
