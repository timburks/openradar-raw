apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23614087"
    labels:
        datastore_id: "5768316266217472"
data:
    classification: Security
    created: "2015-11-19T18:30:06.59668Z"
    description: "Gatekeeper (syspolicyd) becomes confused when an .app bundle it assessed previously changes such that its CFBundleExecutable’s name is different. spctl --assess indicates “internal error in Code Signing subsystem” as the error. Attempting to launch the .app from the UI results in this Gatekeeper dialog:\r\n\r\n“TestApp” is damaged and can’t be opened. You should eject the disk image.\r\n“TestApp” is on the disk image “TestApp.dmg”. Google Chrome downloaded this disk image today at 12:00 PM from example.com.\r\n[Cancel] [Eject Disk Image]\r\n\r\nIt is very disconcerting to see that a valid signed application is considered damaged and dangerous by the system.\r\n\r\nThe simple test case involves replacing one entire application with another at the same path, having syspolicyd assess both the old and new (requested by spctl).\r\n\r\n$ rsync -a --delete /Applications/Calculator.app/ /tmp/SysPolicyTest.app/\r\n$ touch /tmp/SysPolicyTest.app\r\n$ spctl --assess -vv /tmp/SysPolicyTest.app\r\n/tmp/SysPolicyTest.app: accepted\r\nsource=Apple System\r\norigin=Software Signing\r\n$ rsync -a --delete /Applications/TextEdit.app/ /tmp/SysPolicyTest.app/\r\n$ touch /tmp/SysPolicyTest.app\r\n$ spctl --assess -vv /tmp/SysPolicyTest.app\r\n/tmp/SysPolicyTest.app: internal error in Code Signing subsystem\r\n\r\nThe reduced test case shows that the problem is triggered when the only thing in the .app bundle that has changed is its CFBundleExecutable’s name.\r\n\r\n$ cd testapp\r\n$ make\r\ncc -g -Os -c testapp.m -o testapp.o\r\ncc -Wl,-dead_strip testapp.o -o testapp -framework AppKit\r\nrm -f -rf TestApp.app\r\nmkdir -p TestApp.app/Contents/MacOS\r\ncp testapp TestApp.app/Contents/MacOS/TestApp\r\ncp Info.plist TestApp.app/Contents\r\ndsymutil TestApp.app/Contents/MacOS/TestApp --out TestApp.app.dSYM\r\nstrip TestApp.app/Contents/MacOS/TestApp\r\n$ rsync -a TestApp.app/ TestApp_v1.app/\r\n$ rsync -a TestApp.app/ TestApp_v2.app/\r\n$ mv TestApp_v2.app/Contents/MacOS/TestApp TestApp_v2.app/Contents/MacOS/MainExecutable\r\n$ sed -i '' -e 's/TestApp/MainExecutable/' TestApp_v2.app/Contents/Info.plist  # to edit CFBundleExecutable\r\n$ codesign --sign 'Developer ID Application: Me' TestApp_v1.app\r\n$ codesign --sign 'Developer ID Application: Me' TestApp_v2.app\r\n$ rsync -a --delete TestApp_v1.app/ TestApp_test.app/\r\n$ touch TestApp_test.app\r\n$ spctl --assess -vv TestApp_test.app\r\nTestApp_test.app: accepted\r\nsource=Developer ID\r\norigin=Developer ID Application: Me\r\n$ rsync -a --delete TestApp_v2.app/ TestApp_test.app/\r\n$ touch TestApp_test.app\r\n$ spctl --assess -vv TestApp_test.app\r\nTestApp_test.app: internal error in Code Signing subsystem\r\n\r\nYou get the “internal error” even though there’s nothing wrong with TestApp_v2.app. spctl (actually syspolicyd) is fine with each app at its own path, as long as it hasn’t seen that path with a different CFBundleExecutable name previously:\r\n\r\n$ spctl --assess -vv TestApp_v1.app \r\nTestApp_v1.app: accepted\r\nsource=Developer ID\r\norigin=Developer ID Application: Me\r\n$ spctl --assess -vv TestApp_v2.app \r\nTestApp_v2.app: accepted\r\nsource=Developer ID\r\norigin=Developer ID Application: Me\r\n\r\nspctl is also fine with it if you get it to look at the bundle itself, without consulting syspolicyd. Note that “sudo” is needed due to bug 23611423.\r\n\r\n$ sudo spctl --assess -vv --direct TestApp_test.app\r\nTestApp_test.app: accepted\r\nsource=Developer ID\r\norigin=Developer ID Application: Me\r\n\r\nThis bug will occur “in the wild” as it is not unheard of for an application’s CFBundleExecutable’s name to change from one version to the next. Googling for the error “internal error in Code Signing subsystem” gives https://forums.developer.apple.com/thread/17740 as a top result. Based on that report, I downloaded http://assets.geneious.com/installers/geneious/release/Geneious_mac64_8_1_7.dmg and http://assets.geneious.com/installers/geneious/release/Geneious_mac64_9_0_4_with_jre.dmg and found that this bug was the cause of their problem too: their main executable moved from Geneious.app/Contents/MacOS/JavaApplicationStub to Geneious.app/Contents/MacOS/JavaAppLauncher.\r\n\r\nUpon reaching this broken state, a workaround is to kill syspolicyd (sudo launchctl stop com.apple.security.syspolicy, it’ll be restarted when it’s needed again) or to reboot the computer.\r\n\r\nConsider also that a related problem occurs if syspolicyd first assesses an .app bundle that has not been completely unpacked (for example, as it’s being copied or installed).\r\n\r\n$ rsync -a --delete /Applications/Calculator.app/ /tmp/Calculator.app/\r\n^Z  # interrupt it while copying\r\n[1]+  Stopped  rsync -a --delete /Applications/Calculator.app/ /tmp/Calculator.app/\r\n$ spctl --assess -vv /tmp/Calculator.app\r\n/tmp/Calculator.app: invalid resource directory (directory or signature have been modified)\r\n$ fg\r\nrsync -a --delete /Applications/Calculator.app/ /tmp/Calculator.app/\r\n$ touch /tmp/Calculator.app\r\n$ spctl --assess -vv /tmp/Calculator.app\r\n/tmp/Calculator.app: invalid resource directory (directory or signature have been modified)\r\n$ diff -r /Applications/Calculator.app /tmp/Calculator.app && echo identical\r\nidentical\r\n$ spctl --assess -vv /Applications/Calculator.app\r\n/Applications/Calculator.app: accepted\r\nsource=Apple System\r\norigin=Software Signing\r\n\r\nSteps to Reproduce:\r\n$ tar -jxf testapp.tar.bz2\r\n$ cd testapp\r\n$ make\r\ncc -g -Os -c testapp.m -o testapp.o\r\ncc -Wl,-dead_strip testapp.o -o testapp -framework AppKit\r\nrm -f -rf TestApp.app\r\nmkdir -p TestApp.app/Contents/MacOS\r\ncp testapp TestApp.app/Contents/MacOS/TestApp\r\ncp Info.plist TestApp.app/Contents\r\ndsymutil TestApp.app/Contents/MacOS/TestApp --out TestApp.app.dSYM\r\nstrip TestApp.app/Contents/MacOS/TestApp\r\n$ rsync -a TestApp.app/ TestApp_v1.app/\r\n$ rsync -a TestApp.app/ TestApp_v2.app/\r\n$ mv TestApp_v2.app/Contents/MacOS/TestApp TestApp_v2.app/Contents/MacOS/MainExecutable\r\n$ sed -i '' -e 's/TestApp/MainExecutable/' TestApp_v2.app/Contents/Info.plist  # to edit CFBundleExecutable\r\n$ codesign --sign 'Developer ID Application: Me' TestApp_v1.app\r\n$ codesign --sign 'Developer ID Application: Me' TestApp_v2.app\r\n$ rsync -a --delete TestApp_v1.app/ TestApp_test.app/\r\n$ touch TestApp_test.app\r\n$ spctl --assess -vv TestApp_test.app\r\nTestApp_test.app: accepted\r\nsource=Developer ID\r\norigin=Developer ID Application: Me\r\n$ rsync -a --delete TestApp_v2.app/ TestApp_test.app/\r\n$ touch TestApp_test.app\r\n$ spctl --assess -vv TestApp_test.app\r\nTestApp_test.app: internal error in Code Signing subsystem\r\n\r\nExpected Results:\r\nOn 10.10.5 14F1021:\r\n\r\n$ spctl --assess -vv TestApp_test.app\r\nTestApp_test.app: accepted\r\nsource=Developer ID\r\norigin=Developer ID Application: Me\r\n\r\nTestApp_test.app can be launched from the UI (or by “open TestApp_test.app”) even if quarantined.\r\n\r\nActual Results:\r\nOn 10.11.1 15B42:\r\n\r\n$ spctl --assess -vv TestApp_test.app\r\nTestApp_test.app: internal error in Code Signing subsystem\r\n\r\nIf quarantined, TestApp_test.app can’t be launched from the UI (or by “open TestApp_test.app”). Instead, this dialog appears:\r\n\r\n“TestApp” is damaged and can’t be opened. You should eject the disk image.\r\n“TestApp” is on the disk image “TestApp.dmg”. Google Chrome downloaded this disk image today at 12:00 PM from example.com.\r\n[Cancel] [Eject Disk Image]\r\n\r\nVersion:\r\nThis bug occurs in 10.11.1 15B42. It does not occur in 10.10.5 14F1021.\r\n\r\nAttachments:\r\n'testapp.tar.bz2' was successfully uploaded."
    email: mark@chromium.org
    modified: "2015-11-19T18:30:06.59706Z"
    number: "23614087"
    number_intvalue: 23614087
    originated: "2015-11-19"
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: 10.11.1 15B42
    reproducible: Always
    resolved: ""
    status: Open
    title: Gatekeeper (syspolicyd) doesn’t properly re-assess a new app at an old path when its CFBundleExecutable’s name changes
