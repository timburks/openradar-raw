apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23519997"
    labels:
        datastore_id: "5653840892264448"
data:
    classification: Enhancement
    created: "2015-11-12T19:12:06.18557Z"
    description: |-
        Summary:
        Using the time profiler, hiding system libraries and/or charging some symbols to their callers can be helpful for focusing on bottlenecks. However, it can also be misleading with e.g. generic code where a call might have different performance implications in some cases.

        For example, I am using Swift stdlib’s `SequenceType.contains` extension method to discover whether an index lies within a range. When my code is specialized to use a CollectionType whose indices conform to RandomAccessIndexType, this is O(1); whereas with ForwardIndexType, it’s O(n). Thus, while Instruments can tell me that this call is taking 25% of my runtime, it’s unclear what the collection and index types actually are in the hot path here. Showing the types which the generics are specialized to could inform optimization much more directly than going back and forth between Instruments and the source/debugger.


        Steps to Reproduce:
        N/A

        Expected Results:
        N/A

        Actual Results:
        N/A

        Regression:
        N/A

        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2015-11-12T19:12:06.18576Z"
    number: "23519997"
    number_intvalue: 23519997
    originated: 12-Nov-2015 02:11 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Instruments 7.1.1 (59040)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Instruments: indicate what type(s) call paths are specialized to in Swift traces'
