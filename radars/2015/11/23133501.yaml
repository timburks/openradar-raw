apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23133501"
    labels:
        datastore_id: "4924828310044672"
data:
    classification: Performance, UI/Usability
    created: "2015-11-05T18:59:38.99116Z"
    description: "Summary:\r\nI'm not sure how to classify this as I think it falls under two categories: Performance and UI/Usability.  In both OS X and iOS I've seen some strange behavior between pre and post 2012 Macs and iOS devices that are pre and post A7 chipsets, that could be related to the Metal API and/or Graphic Card Drivers.\r\n\r\nIn OS X El Capitan and iOS 8 and 9 there are windows and screens that have various degrees of transparency and shading, which I like; it adds to the aesthetics of the OS!  But there seems to be some inconsistency in the way it's being handled.  On Macs that are pre 2012 and iOS devices that are pre A7 chips (devices that don't use the Metal API), I'm seeing fewer instances of the bugs I've been reporting.\r\n\r\nSteps to Reproduce:\r\nN/A\r\n\r\nExpected Results:\r\nAs far as my understanding of the Metal API goes, Metal is supposed to take the overhead away from the Graphic Card Drivers and Graphic Hardware to allow for a smoother GUI by pre-computing shaders, transparency and some screen rending/drawing events, in order to free up the CPU so that it can focus, for a lack of a better term, on other system processes; ultimately allowing for additional features in OS X to run at the highest performance.\r\n\r\nI think there may be a disconnect between what the Graphic Card and Graphic Card Drivers are supposed to be doing and what Metal is supposed to be doing.  Because there are instances of transparency and shading being lost and reloaded when certain events are triggered.  Is this a result of Metal and/or the Graphic Hardware not doing what each is supposed to be doing?  There should be correct fallbacks for each machine that can and can't run Metal.  If a machine is too old to run Metal, then the Graphic Drivers should be able to handle the same rendering events with no glitching just at a slower speed.\r\n\r\nActual Results:\r\nWhat I'm seeing in OS X and iOS is that on devices running the Metal API, post 2012 Macs and iOS devices with A7 chips or newer, there are more transparency issues, graphical glitches and UI bugs than there are on pre 2012 Macs and iOS devices with pre A7 chips that are just using the GPU and CPU to calculate shading and transparency.  For example, I'm seeing that the Dock is failing to unhide correctly on machines that are running the Metal API, but unhide correctly when there is no Metal API.\r\n\r\nDevices that don't run the Metal API do indeed have a slower GUI and are slower to launch apps, but they seem to loads screens more consistently, meaning each animation is the same linear speed with less visual glitches than devices that are running Metal which seem to speed up and slow down during linear events.\r\n\r\nI wonder too if the reason some of these visual glitches are appearing is that neither Metal nor the Graphic Card Drivers are programmed to handle certain transparency, shading and screen rendering/drawing events?\r\n\r\nVersion:\r\nOS X El Capitan, iOS 8 and iOS 9\r\n\r\nNotes:\r\nAs a final note, I think this bug report may simply be something that gets worked out over time as the Metal API gets more solidified in newer systems and Graphic Card Drivers are updated to support more of the new GUI events on older hardware.  But I did want to report this as there seemed to be some correlation between bugs appearing on Metal and Non-Metal systems.  I could also be completely off base and the bugs I'm seeing are simply other issues in OS X and iOS that have yet to be worked out.\r\n\r\nConfiguration:\r\nPre and Post 2012 Macs and Pre and Post A7 Chipsets behave differently.\r\n\r\nAttachments:\r\nNONE"
    email: sephirothfanatic@gmail.com
    modified: "2016-06-16T17:13:57.93317Z"
    number: "23133501"
    number_intvalue: 23133501
    originated: 15-Oct-2015
    parent_number: '&{NULL_VALUE}'
    product: OS X, iOS
    product_version: El Capitan, 8, 9
    reproducible: N/A
    resolved: ""
    status: Insufficient information
    title: 'OS X 10.11 and iOS 8-9: Metal API and/or Graphic Drivers Potentially Causing UI Bugs'
