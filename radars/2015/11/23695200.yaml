apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23695200"
    labels:
        datastore_id: "5060084212170752"
data:
    classification: Other Bug
    created: "2015-11-30T22:46:14.32419Z"
    description: |-
        Summary:

        When using Swift's nil coalescing operator, compile time seems to be
        exponential based on the number of uses in a statement.

        Steps to reproduce:

        1. Attempt to compile the attached example

        OR

        1. Create a swift file with a single function that returns an optional
        2. Chain ~10 calls to the function separated by `??`

        Expected results:

        The file is compiled in a reasonable amount of time

        Actual results:

        The compile takes an insane amount of time (on my 2014 rMPB the process
        was killed after 59 minutes with 9 calls to the function). Seemingly
        this compile time is exponential.
    email: keithbsmiley@gmail.com
    modified: "2015-11-30T22:46:14.32436Z"
    number: "23695200"
    number_intvalue: 23695200
    originated: 30-Nov-2015 02:45 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2.1
    reproducible: Always
    resolved: ""
    status: Open
    title: Nil coalescing operator exponential compile times
