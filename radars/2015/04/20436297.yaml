apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20436297"
    labels:
        datastore_id: "5510267148435456"
data:
    classification: Serious Bug
    created: "2015-04-06T18:32:40.384717Z"
    description: "Summary:\r\n\r\nWhen a UIPageViewController’s edges extend under a translucent navigation bar or toolbar, there is visible jumping as views appear on screen. This jumping is caused by the top and bottom layout guides moving.\r\n\r\nSteps to Reproduce:\r\n\r\n1) Build and run the attached project (JumpingRadar.zip)\r\n\r\nExpected Results:\r\n\r\nThe views should appear on screen without any content shifting after it appears.\r\n\r\nActual Results:\r\n\r\nBoth the “Bunny Rabbits” and “Van Halen” jump.\r\n\r\nRegression:\r\n\r\nN/A\r\n\r\nNotes:\r\n\r\nThe only workaround (labelled “WORKAROUND” in the sample project’s ViewController.m) is to prevent the page view controllers edges from extending below a UINavigationBar (UIRectEdgeTop) or UIToolbar (UIRectEdgeBottom).\r\n\r\nOther Observations:\r\n\r\n1) If you make the transitionStyle in the storyboard UIPageViewControllerTransitionStylePageCurl (change the Transition Style for the view controller in the storyboard's \"Jumping Scene\"). When the edges extend under the translucent elements, the jumps happen as you move from the current page to the previous page. Note that these jumps start at a different vertical position than the jumps with UIPageViewControllerTransitionStyleScroll.\r\n\r\n2) This sample doesn't use a toolbar in the navigation controller, but if you turn it on, you'll see some more strange behavior: the bottom label jumps by the height difference of the toolbar and the page view control.\r\n\r\n3) If you have access to the entire view hierarchy, you can beat things into submission by using the parent view controller: http://stackoverflow.com/a/21541533/132867\r\n\r\nWith a view controller that's running as an extension, this is not an option since the part of the view hierarchy you need is inaccessible via XPC.\r\n\r\n4) You can't work around this problem by using a parent-child view controller hierarchy. I tried embedding the UIPageViewController inside a regular UIViewController thinking it might allow the layout guides to be established before the page views are presented. But the same behavior is present: it appears that you just can't have a UIPageViewController any time there's a translucent UINavigationBar or UIToolbar in the hierarchy. Again, that sucks when a view controller running in an extension has no control over its host's view hierarchy.\r\n\r\n----\r\n\r\nAnother note: Using the top of the view as a layout constraint isn't a viable option since orientation changes can alter the height of the translucent navigational elements.\r\n\r\n----\r\n\r\nhttp://files.iconfactory.net/craig/bugs/JumpingRadar.zip"
    email: craig.hockenberry@gmail.com
    modified: "2015-04-06T18:45:11.991053Z"
    number: "20436297"
    number_intvalue: 20436297
    originated: 06-Apr-2015 11:32 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 8.2 (12D508)
    reproducible: Always
    resolved: ""
    status: Open
    title: UIPageViewController auto layout behave erratically under translucent UINavigationBar or UIToolbar
