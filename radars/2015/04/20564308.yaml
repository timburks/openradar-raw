apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20564308"
    labels:
        datastore_id: "4524640605044736"
data:
    classification: Enhancement
    created: "2015-04-16T01:34:40.52959Z"
    description: |-
        This is a duplicate of rdar://20564119

        Summary:
        I’m trying to figure out why Swift is erroring out on a moderately complex chain of expressions. Right now the only way for me to do this is to tear it apart and puzzle out what the types should be and then put it back together, corrected.

        This process would be far better if Xcode would show me the instantiated types instead of just the declared types for e.g. functions. It does me almost no good to know that _1 is:

            public func _1<T, U>() -> Lens<(T, U), U>

        whereas I would gain rather a lot from learning what T and U are instantiated to. In particular, I could use this to discover what type I need to provide for another operand and hence correct it with much less effort—I could simply comment out the rejected part of the expression instead of having to tear it all out into temporary variables and annotating with explicit types.


        Steps to Reproduce:
        N/A

        Expected Results:
        N/A

        Actual Results:
        N/A

        Regression:
        N/A

        Notes:
        Visual Studio 2013 does this. Probably earlier versions, too.
    email: apsharp@gmail.com
    modified: "2015-04-16T01:34:40.52994Z"
    number: "20564308"
    number_intvalue: 20564308
    originated: 16-Apr-2015 11:34 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.2 (6D570)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode: Show the instantiated type of expressions instead of/in addition to their declared types'
