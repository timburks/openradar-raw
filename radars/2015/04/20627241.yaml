apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20627241"
    labels:
        datastore_id: "6748148663844864"
data:
    classification: UI/Usability
    created: "2015-04-21T01:02:06.65363Z"
    description: |-
        Summary:
        LazySequence should have a `first` property of type `S.Generator.Element?`.

        Steps to Reproduce:
        1. Try to find the first element matching a given criterion:

            return lazy(start…end).filter { $0 % 2 == 0 }.first

        Expected Results:
        This code, or something very similar, works fine.

        Actual Results:
        There is no first property, method, or function that can be used on a LazySequence. The closest equivalent is to use its generator directly, capturing it in a mutable variable first:

            var gen = lazy(start…end).filter { $0 % 2 == 0 }.generate()
            return gen.next()

        Notes:
        Another alternative would be to add a first() function that takes a SequenceType, but this would be uglier and also would consume elements from one-time-through sequences, which might be unexpected.

        Calling `first` twice on a LazySequence might run the `filter` method’s block twice. That would be fine.
    email: brent@architechies.com
    modified: "2015-04-21T01:02:06.65383Z"
    number: "20627241"
    number_intvalue: 20627241
    originated: 20-Apr-2015 06:01 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.3 (6D570)
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift.LazySequence should have a .first property
