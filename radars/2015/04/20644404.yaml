apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20644404"
    labels:
        datastore_id: "6131181712048128"
data:
    classification: Feature
    created: "2015-04-22T00:48:56.71701Z"
    description: "Summary:\r\nOften, an application needs to authenticate a user on a remote server. In exchange, the user gets a token for access on the server.\r\n\r\nIn mobile security, when the data sensitivity warrants (like medium and high value data), we *don't* allow the token to be persisted because we don't want an attacker to stumble upon it. This poses a problem for mobile apps which loses focus. We don't know if the app will be run again.\r\n\r\nA way to solve this is to enforce sessions on the server. But in practice, many systems can't enforce it. For example, some server applications reuse sessions for a user. Django is a perfect example - \"logout\" does not delete a session because its tied to a user, and the session may be used on a different computer or device. We know its a bad idea, but that's the way it is.\r\n\r\nI imagine there are other scenarios that would benefit from the ability for an unattended wipe of a secret enforced by the OS.\r\n\r\nIn an effort to mitigate the risk, it would be nice if we could put the secret in the Keychain with an expiration, and know the OS is going to wipe the keychain item. We know the wipe will occur even if the app is not running.\r\n\r\nSteps to Reproduce:\r\nN/A\r\n\r\nExpected Results:\r\nN/A\r\n\r\nActual Results:\r\nN/A\r\n\r\nVersion:\r\niOS 8.1\r\n\r\nNotes:\r\nN/A.\r\n\r\nConfiguration:\r\nMovile devices"
    email: noloader@gmail.com
    modified: "2015-04-22T00:48:56.71723Z"
    number: "20644404"
    number_intvalue: 20644404
    originated: 21-Apr-2015 08:44 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "8.1"
    reproducible: ""
    resolved: ""
    status: Open
    title: Please allow us to add expiration date/time to Keychain items
