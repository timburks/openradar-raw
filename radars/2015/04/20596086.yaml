apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20596086"
    labels:
        datastore_id: "5046019301572608"
data:
    classification: ""
    created: "2015-04-17T23:57:59.90231Z"
    description: "Summary:\r\nSetting a 'nil' to a nonnull property in an object generates an expected warning when compiling the code.\r\n\r\nWhen setting an indirect, possibly nil pointer, compiler does not generate warnings.\r\n\r\nSteps to Reproduce:\r\nCompile the following Objective-C code with Xcode 6.3:\r\n\r\n// Your object\r\n \r\nNS_ASSUME_NONNULL_BEGIN\r\n \r\n@interface ViewController : UIViewController\r\n@property (nonatomic, copy) NSString *nonNullString;\r\n@end\r\n \r\nNS_ASSUME_NONNULL_END\r\n \r\n// Then you use it as:\r\nNSString *aString = @\"hello\";\r\naString = nil;\r\ncontroller.nonNullString = aString;\r\ncontroller.nonNullString = nil;\r\n\r\nExpected Results:\r\nIt would be nice to have a more 'pedantic' warning when setting a value that has not been audited as nonnull like in the case above. So the programmer can't mistake by accident.\r\n\r\nActual Results:\r\nCompiler accepts code and at runtime a non null value will be set to a nonnull-annotated property.\r\n\r\nVersion:\r\nXCode 6.3 (6D570)"
    email: m.quinones.garcia@gmail.com
    modified: "2015-07-27T19:45:53.69445Z"
    number: "20596086"
    number_intvalue: 20596086
    originated: 18/04/2015
    parent_number: '&{NULL_VALUE}'
    product: XCode
    product_version: XCode 6.3
    reproducible: ""
    resolved: Duplicate
    status: Closed
    title: Nullability annotation does not check for indirect nil values
