apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20735374"
    labels:
        datastore_id: "4939350299115520"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-04-28T22:01:31.13426Z"
    description: |-
        Summary:
        Two functions overloaded on return type, one of which returns a pair of values, the other returns the first element of that pair and calls the other: crash.


        Steps to Reproduce:
        Compile this:
        func f(x: Int) -> Int {
        	return f(x).0
        }
        func f(x: Int) -> (Int, Int) {
        	return (0, 1)
        }


        Expected Results:
        Error about ambiguity of .0, or success, or a runtime infinite loop.


        Actual Results:
        Compiler crash.


        Regression:
        N/A


        Notes:
        Iâ€™m working around this by using destructuring tuple assignment:

        let (v, _) = f(x)
        return v
    email: rix.rob@gmail.com
    modified: "2015-04-28T22:01:31.13441Z"
    number: "20735374"
    number_intvalue: 20735374
    originated: 28-Apr-2015 06:01 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (6E14)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'swiftlang-602.0.51.1: Crash finding best solution for return type overload selected via tuple projection'
