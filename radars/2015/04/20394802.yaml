apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20394802"
    labels:
        datastore_id: "5845858713075712"
data:
    classification: Enhancement
    created: "2015-04-02T03:29:57.14089Z"
    description: "Summary:\r\nWhen using the GATT client API -writeValue:forCharacteristic:type: with CBCharacteristicWriteWithoutResponse, the underlying queue seems to overflow when having ~20 or so packets queued up. Unfortunately, there is no way for the application to know this through the CoreBluetooth API.\r\n\r\nThe other way around, when an app is providing a GATT service, there is actually flow control: -updateValue:forCharacteristic:onSubscribedCentrals: returns NO if the queue is full. The system calls -peripheralManagerIsReadyToUpdateSubscribers: when there is space again in the queue.\r\n\r\nSteps to Reproduce:\r\n1. Read the CoreBluetooth docs with -writeValue:forCharacteristic:type:\r\n\"If you specify the write type as CBCharacteristicWriteWithoutResponse and the write does not succeed, you are not notified nor do you receive an error indicating the cause of the failure.\"\r\n2. Try to find any other way to get feedback of whether the outbound queue is full or not.\r\n3. Observe there is no such way at the moment.\r\n\r\nExpected Results:\r\nCoreBluetooth should provide a way to know whether the underlying ATT Write Command was successfully queued or not. Any decent GATT stack provides this.\r\n\r\nActual Results:\r\nCoreBluetooth does not provide a way to know whether the underlying ATT Write Command was successfully queued or not.\r\n\r\nVersion:\r\niOS 8.2\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\niPhone 6\r\n\r\nAttachments:"
    email: martijn@pebble.com
    modified: "2015-04-02T03:29:57.141023Z"
    number: "20394802"
    number_intvalue: 20394802
    originated: 01-Apr-2015
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "8.2"
    reproducible: N/A
    resolved: No
    status: Open
    title: 'Missing flow control for -writeValue:forCharacteristic:type: and CBCharacteristicWriteWithoutResponse'
