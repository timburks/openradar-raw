apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23697502"
    labels:
        datastore_id: "6066668451135488"
data:
    classification: Enhancement
    created: "2015-12-01T00:44:52.1087Z"
    description: |-
        Summary:

        When using SFSafariViewController we noticed that it crashes if it is given URLs that do not match some criteria. It seems like it's specific to the NSURL's scheme being either 'http' or 'https'. It would be nice if these criteria were codified into a method such as `canOpenURL` so we could decided how to handle the URL otherwise.

        Steps to Reproduce:

        1. Create a SFSafariViewController with a bogus NSURL (perhaps `NSURL(string: "")` rdar://23697416)

        Expected Results:

        There is some way to determine ahead of time if the app will crash.

        Actual Results:

        The app crashes at runtime.

        Notes:

        To simulate this functionality we have created a simple SFSafariViewController extension that looks like this:

        ```
        @available(iOS 9.0, *)
        private extension SFSafariViewController {
            private class func canOpenURL(URL: NSURL) -> Bool {
                return URL.host != nil && (URL.scheme == "http" || URL.scheme == "https")
            }
        }
        ```
    email: keithbsmiley@gmail.com
    modified: "2015-12-01T00:44:52.10894Z"
    number: "23697502"
    number_intvalue: 23697502
    originated: 30-Nov-2015 04:44 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 9.1
    reproducible: Always
    resolved: ""
    status: Open
    title: SFSafariViewController should have method to check if URL can be opened
