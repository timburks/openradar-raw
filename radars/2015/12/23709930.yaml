apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23709930"
    labels:
        datastore_id: "5006601803005952"
data:
    classification: Crash
    created: "2015-12-01T20:11:41.21862Z"
    description: "Link to Project:https://www.dropbox.com/s/rd24tv30wfv9con/TestTableViewControllerDesignatedInitializers.zip?dl=0\r\nLink to Crash: https://www.dropbox.com/s/fk9tvjt388afa3m/TestTableViewControllerDesignatedInitializers.crash?dl=0\r\n\r\nSummary:\r\nI have a subclass of UITableViewController, let's call it TestTableViewController and I only want one designated initializer for it, let's say initWithTitle:\r\n\r\nThe implementation of initWithTitle: calls [super initWithStyle:] following the guidelines on how designated initializers should call a super designated initializer.\r\n\r\nSince I don't want other initializers to be called, I decided to make the 3 designated initializers of the super class unavailable. These are namely:\r\n- (instancetype)initWithStyle:(UITableViewStyle)style NS_DESIGNATED_INITIALIZER;\r\n- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil NS_DESIGNATED_INITIALIZER;\r\n- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder NS_DESIGNATED_INITIALIZER;\r\n\r\nSo in TestTableViewController.h I add the NS_UNAVAILABLE to them and in TestTableViewController.m I make them crash like so:\r\n\r\n- (instancetype)initWithStyle:(UITableViewStyle)style NS_UNAVAILABLE;\r\n// FIXME:(hponde)\r\n- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil\r\n                         bundle:(nullable NSBundle *)nibBundleOrNil NS_UNAVAILABLE;\r\n- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder NS_UNAVAILABLE;\r\n\r\nand\r\n\r\n- (instancetype)initWithStyle:(UITableViewStyle)style NS_UNAVAILABLE\r\n{\r\n    [self doesNotRecognizeSelector:_cmd];\r\n    return nil;\r\n}\r\n- (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil\r\n                         bundle:(nullable NSBundle *)nibBundleOrNil NS_UNAVAILABLE\r\n{\r\n    [self doesNotRecognizeSelector:_cmd];\r\n    return nil;\r\n}\r\n- (nullable instancetype)initWithCoder:(NSCoder *)aDecoder NS_UNAVAILABLE\r\n{\r\n    [self doesNotRecognizeSelector:_cmd];\r\n    return nil;\r\n}\r\n\r\nThis causes a crash because of the following chain of calls:\r\n[TestTableViewController initWithTitle:]\r\n[UITableViewController initWithStyle:]\r\n[TestTableViewController initWithNibName:bundle:]\r\n\r\nSo it seems that [UITableViewController initWithStyle:], a designated initializer, is calling [self initWithNibName:bundle:], another designated initializer. This is a violation of the initialization contract, since designated initializer cannot call another initializer in the same class.\r\n\r\nSteps to Reproduce:\r\n1. Build the project attached and run\r\n2. Crash\r\n\r\nExpected Results:\r\nShould not crash, I'm following the initialization contracts but UITableViewController is not. And that behavior is opaque to me.\r\n\r\nActual Results:\r\nCrash with the stack:\r\n\r\n2015-12-01 11:34:55.439 TestTableViewControllerDesignatedInitializers[2820:20725394]  [31m-[TestTableViewController initWithNibName:bundle:]: unrecognized selector sent to instance 0x7f9c1153e4e0\r\n [0m2015-12-01 11:34:55.441 TestTableViewControllerDesignatedInitializers[2820:20725394]  [31m*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[TestTableViewController initWithNibName:bundle:]: unrecognized selector sent to instance 0x7f9c1153e4e0'\r\n*** First throw call stack:\r\n(\r\n\t0   CoreFoundation                      0x000000010d6aec65 __exceptionPreprocess + 165\r\n\t1   libobjc.A.dylib                     0x000000010d347bb7 objc_exception_throw + 45\r\n\t2   CoreFoundation                      0x000000010d6b60ad -[NSObject(NSObject) doesNotRecognizeSelector:] + 205\r\n\t3   TestTableViewControllerDesignatedInitializers 0x000000010ce0e84d -[TestTableViewController initWithNibName:bundle:] + 93\r\n\t4   UIKit                               0x000000010dd9b831 -[UITableViewController initWithStyle:] + 45\r\n\t5   TestTableViewControllerDesignatedInitializers 0x000000010ce0e966 -[TestTableViewController initWithSingleItem:] + 86\r\n\t6   TestTableViewControllerDesignatedInitializers 0x000000010ce0e3d3 -[ViewController viewDidLoad] + 115\r\n\t7   UIKit                               0x000000010dbd81d0 -[UIViewController loadViewIfRequired] + 738\r\n\t8   UIKit                               0x000000010dbd83ce -[UIViewController view] + 27\r\n\t9   UIKit                               0x000000010daf3289 -[UIWindow addRootViewControllerViewIfPossible] + 58\r\n\t10  UIKit                               0x000000010daf364f -[UIWindow _setHidden:forced:] + 247\r\n\t11  UIKit                               0x000000010daffde1 -[UIWindow makeKeyAndVisible] + 42\r\n\t12  UIKit                               0x000000010daa3417 -[UIApplication _callInitializationDelegatesForMainScene:transitionContext:] + 2732\r\n\t13  UIKit                               0x000000010daa619e -[UIApplication _runWithMainScene:transitionContext:completion:] + 1349\r\n\t14  UIKit                               0x000000010daa5095 -[UIApplication workspaceDidEndTransaction:] + 179\r\n\t15  FrontBoardServices                  0x00000001102685e5 __31-[FBSSerialQueue performAsync:]_block_invoke_2 + 21\r\n\t16  CoreFoundation                      0x000000010d5e241c __CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ + 12\r\n\t17  CoreFoundation                      0x000000010d5d8165 __CFRunLoopDoBlocks + 341\r\n\t18  CoreFoundation                      0x000000010d5d7f25 __CFRunLoopRun + 2389\r\n\t19  CoreFoundation                      0x000000010d5d7366 CFRunLoopRunSpecific + 470\r\n\t20  UIKit                               0x000000010daa4b02 -[UIApplication _run] + 413\r\n\t21  UIKit                               0x000000010daa78c0 UIApplicationMain + 1282\r\n\t22  TestTableViewControllerDesignatedInitializers 0x000000010ce0e75f main + 111\r\n\t23  libdyld.dylib                       0x000000010fc52145 start + 1\r\n\t24  ???                                 0x0000000000000001 0x0 + 1\r\n)\r\nlibc++abi.dylib: terminating with uncaught exception of type NSException\r\n [0m \r\n\r\nVersion:\r\niOS 8.4\r\n\r\nNotes:\r\nDoes not happen on iOS 9. Since I need to keep iOS 8 support, I can't have the checks\r\n\r\nConfiguration:\r\nSimulator iPhone 6\r\n\r\nAttachments:\r\n'TestTableViewControllerDesignatedInitializers.crash' and 'TestTableViewControllerDesignatedInitializers.zip' were successfully uploaded."
    email: henriqueponde90@gmail.com
    modified: "2017-02-09T18:33:05.60412Z"
    number: "23709930"
    number_intvalue: 23709930
    originated: 12/1/2015
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "8.4"
    reproducible: Always
    resolved: No
    status: Closed
    title: UITableViewController subclass designated initializer calls [super initWithStyle:] and asserts on all UITableViewController designated initializers. Crash
