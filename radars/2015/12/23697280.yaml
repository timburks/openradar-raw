apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23697280"
    labels:
        datastore_id: "5049833333194752"
data:
    classification: Other Bug
    created: "2015-12-01T00:33:28.23957Z"
    description: |-
        Summary:

        Sometimes when accessing elements from a lazy collection, the element is
        evaluated multiples times, resulting in unexpected function calls.

        Steps to reproduce:

        1. Run the attached example with
          `swift LazyCollectionEvaluatedMultipleTimes.swift`

        Expected results:

        The output is:

        ```
        Called with 'a' returning ''
        Called with 'b' returning 'hi'
        ```

        Where each of these entries is evaluated only a single time.

        Actual results:

        The output is:

        ```
        Called with 'a' returning ''
        Called with 'b' returning 'hi'
        Called with 'b' returning 'hi'
        ```

        Where `Called with 'b' returning 'hi'` is because the element is
        evaluated twice.

        Notes:

        - This seems to be a side effect of accessing `self[index]` in the given
          example.
        - This behavior might be intended, although the expensive function we
          were attempting to call lazily being called multiples times seemed
          unexpected.
    email: keithbsmiley@gmail.com
    modified: "2015-12-01T00:33:28.23991Z"
    number: "23697280"
    number_intvalue: 23697280
    originated: 30-Nov-2015 04:33 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2.1
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift lazy collection evaluated multiple times
