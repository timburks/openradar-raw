apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17839032"
    labels:
        datastore_id: "6365736184315904"
data:
    classification: ""
    created: "2015-03-07T06:16:40.962307Z"
    description: "From the first beta of Swift, we have been able to see the Swift interface for a module through an interactive process. You start with a Swift file in an Xcode project, right-click on a symbol, and choose \"Jump to Definition\"; Xcode will generate a file with the declaration.\r\n\r\nThat procedure is a bit tedious. It's very manual; you have to start with a Swift file in an Xcode project; and you have to know the name of the symbol in advance. It doesn't generate all the declarations in the module â€” if the module was defined in Objective-C, it only shows declarations from a single .h file.\r\n\r\nI learned about the command-line tool swift-ide-test in Beta 3 via http://www.jpsim.com/uncovering-sourcekit/. By using a command like the following, I could generate the declarations for an entire framework:\r\n\r\nxcrun swift-ide-test -print-module -source-filename /dev/null \\\r\n    -sdk /Applications/Xcode6-Beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk \\\r\n    -print-regular-comments -module-print-submodules -module-to-print CoreGraphics\r\n\r\nHowever, in Beta 4 the swift-ide-test command has disappeared.\r\n\r\nI figured out a partial workaround, based on a blog post by Erica Sadun (http://ericasadun.com/2014/07/28/swift-docs-generation/).\r\n \r\nThe Swift REPL has a :print_module command that dumps all the declarations in the module.  Unlike choosing a module in Xcode, it doesn't stop at just one (virtual) header.\r\n \r\nSo this command will print out all the declarations in CoreGraphics:\r\necho \":print_module CoreGraphics\" | xcrun swift -integrated-repl\r\n\r\nHowever, Chris Lattner stated:\r\nNote that \"-integrated-repl\" is obsolete, buggy, has never been documented, and is slated for removal in a later beta.  Please don't get attached to it :-)\r\n\r\nMy request:\r\nPlease document a solution for generating the Swift interface for a compiled module from a command-line tool, much like swift-ide-tool did.\r\n\r\nSteps to Reproduce:\r\n1. Install Xcode 6 beta\r\n2. Type one of the above command lines to name a module for which the Swift interface is desired.\r\n\r\nExpected Results:\r\nstdout gets the text description of the Swift interface of the compiled module.\r\n\r\nActual Results:\r\nCommands (like swift-ide-test) have been removed or are in the process of being removed.\r\n\r\nNotes:\r\nDiscussed in forum: https://devforums.apple.com/message/1013822"
    email: jlieske@gmail.com
    modified: "2015-03-07T06:16:40.962437Z"
    number: "17839032"
    number_intvalue: 17839032
    originated: 28-Jul-2014 10:47 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Version 6.0 (6A267n)
    reproducible: Always
    resolved: ""
    status: Open
    title: Tool to generate the Swift interface for a compiled module
