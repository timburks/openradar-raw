apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20085508"
    labels:
        datastore_id: "6361570066038784"
data:
    classification: No rank
    created: "2015-03-08T09:44:28.51224Z"
    description: "Summary:\r\nI used to have an entity with an attribute named 'type'. While this works fine, iTunesConnect would give a private API warning on 'primitveType' (an accessor we generate using mogenerator). So we wanted to change that attribute to a different name.\r\n\r\nIn a new Core Data model version we changed the property name to 'productType'. The migration appeared to work fine, but it actually did not change the name of the underlying column in the sqlite database.\r\n\r\nSteps to Reproduce:\r\n(this assumes a default iOS project)\r\n\r\n1. create a core data model with entity 'Product' and attribute 'type'\r\n2. run the project\r\n3. create a new model version where you change the attribute's name to 'productType'\r\n4. run the project\r\n5. open the .sqlite database and notice the column is still called type (and not productType)\r\n\r\nExpected Results:\r\nIt is expected that the migration actually does what it should do and not silently skip some properties that happen to be restricted keywords.\r\n\r\nActual Results:\r\nThe migration silently fails\r\n\r\nVersion:\r\niOS 8.x\r\n\r\nNotes:\r\nThe solution should, I think, be two part:\r\n1. the tooling should not allow the creation of attributes with reserved names\r\n2. the migration should not ignore attributes with reserved names\r\n\r\nConfiguration:\r\ntested on iPhone 6 & iPad Mini 2. Probably all devices are affected\r\n\r\nAttachments:"
    email: thomas.visser@gmail.com
    modified: "2015-03-08T09:44:28.512366Z"
    number: "20085508"
    number_intvalue: 20085508
    originated: 08-Mar-2015 10:43 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "8"
    reproducible: yes
    resolved: No
    status: Open
    title: Migration away from attributes that have a reserved name (e.g. type) does not work
