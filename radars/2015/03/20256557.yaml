apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20256557"
    labels:
        datastore_id: "5892127993102336"
data:
    classification: Serious Bug
    created: "2015-03-23T10:51:45.861131Z"
    description: "Summary:\r\nA memory leak occurs with optionals of a protocol type that are backed by a value type larger than ~24 bytes.\r\n\r\nWhen a function or property is accessed through optional chaining, the value is copied to a temporary buffer is allocated that is then never freed.\r\n\r\nThe memory is allocated through\r\ninitializeBufferWithCopyOfBuffer -> swift_slowAlloc -> malloc\r\n\r\n\r\nThe Leaks instruments also detects the memory leak and I have attached a Xcode project demonstrating the leak.\r\n\r\nSteps to Reproduce:\r\n1. Open the attached Xcode project\r\n2. Run it and open the debug navigator in Xcode and keep an eye on memory usage\r\n\r\n\r\nExpected Results:\r\nMemory usage should effectively stay constant\r\n\r\nActual Results:\r\nMemory usage increases steadily\r\n\r\nVersion:\r\nXcode 6.3 (6D543q)\r\nApple Swift version 1.2 (swiftlang-602.0.44.6 clang-602.0.45)\r\nOSX 10.10.2 (14C1514)"
    email: janoschhildebrand@gmail.com
    modified: "2015-06-08T21:32:09.64116Z"
    number: "20256557"
    number_intvalue: 20256557
    originated: 23-Mar-2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.3 (6D543q)
    reproducible: Always
    resolved: 8-Jun-2015
    status: Closed
    title: 'Xcode 6.3 (6D543q): [Swift] Memory leak with optional of a protocol type'
