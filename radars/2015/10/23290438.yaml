apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23290438"
    labels:
        datastore_id: "6665348640145408"
data:
    classification: Crash
    created: "2015-10-28T05:27:57.49309Z"
    description: "Summary:\r\nWhen a Separated-style NSSegmentedControl is in an auto-layout window, and that window is moved from a Retina to a non-Retina screen (or vice-versa), an assertion is failed in -[NSSegmentedControl ns_widgetType]. \r\n\r\nOutput from the debugger is as follows:\r\n2015-10-27 22:02:25.889 SegmentedControlTest[14965:910170] *** Assertion failure in -[NSSegmentedControl ns_widgetType], /Library/Caches/com.apple.xbs/Sources/AppKit/AppKit-1404.13/Layout.subproj/NSUserInterfaceTheme.m:413\r\n2015-10-27 22:02:25.889 SegmentedControlTest[14965:910170] What kind of segmented control are we!\r\n2015-10-27 22:02:25.895 SegmentedControlTest[14965:910170] (\r\n\t0   CoreFoundation                      0x00007fff995ece32 __exceptionPreprocess + 178\r\n\t1   libobjc.A.dylib                     0x00007fff963e0dd4 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x00007fff995f1b0a +[NSException raise:format:arguments:] + 106\r\n\t3   Foundation                          0x00007fff94c1de16 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 198\r\n\t4   AppKit                              0x00007fff8fbd51fd -[NSSegmentedControl(NSIBSegmentedControlIntegration) ns_widgetType] + 219\r\n\t5   AppKit                              0x00007fff8faa71a4 -[NSAquaUserInterfaceTheme _ruleForView:comparedToView:withEdge:] + 64\r\n\t6   AppKit                              0x00007fff8faa70ca -[NSAquaUserInterfaceTheme resolvedValue:forSymbolicConstant:inConstraint:containerView:] + 521\r\n\t7   AppKit                              0x00007fff8faa6d57 -[NSLayoutConstraint(NSSymbolicConstantResolution) defaultResolvedValue:forSymbolicConstant:error:] + 89\r\n\t8   Foundation                          0x00007fff94b8f5f1 -[NSLayoutConstraint _effectiveConstant:error:] + 105\r\n\t9   Foundation                          0x00007fff94b8f4f3 -[NSLayoutConstraint constant] + 52\r\n\t10  Foundation                          0x00007fff94b8e910 -[NSLayoutConstraint _lowerIntoExpression:reportingConstantIsRounded:] + 200\r\n\t11  Foundation                          0x00007fff94b95c31 -[NSLayoutConstraint _containerGeometryDidChange] + 88\r\n\t12  AppKit                              0x00007fff8f8aac31 _NSViewEnumerateConstraints + 253\r\n\t13  AppKit                              0x00007fff8f929d06 __52-[NSView(NSConstraintBasedLayout) _setLayoutEngine:]_block_invoke_2 + 323\r\n\t14  Foundation                          0x00007fff94b8e502 -[NSISEngine withBehaviors:performModifications:] + 155\r\n\t15  AppKit                              0x00007fff8f8959fe -[NSView(NSConstraintBasedLayout) _withAutomaticEngineOptimizationDisabled:] + 70\r\n\t16  AppKit                              0x00007fff8f929ba6 __52-[NSView(NSConstraintBasedLayout) _setLayoutEngine:]_block_invoke + 485\r\n\t17  AppKit                              0x00007fff8f8a0762 -[NSView(NSConstraintBasedLayout) _setLayoutEngine:] + 233\r\n\t18  AppKit                              0x00007fff8f929c9b __52-[NSView(NSConstraintBasedLayout) _setLayoutEngine:]_block_invoke_2 + 216\r\n\t19  Foundation                          0x00007fff94b8e502 -[NSISEngine withBehaviors:performModifications:] + 155\r\n\t20  AppKit                              0x00007fff8f8959fe -[NSView(NSConstraintBasedLayout) _withAutomaticEngineOptimizationDisabled:] + 70\r\n\t21  AppKit                              0x00007fff8f929ba6 __52-[NSView(NSConstraintBasedLayout) _setLayoutEngine:]_block_invoke + 485\r\n\t22  AppKit                              0x00007fff8f8a0762 -[NSView(NSConstraintBasedLayout) _setLayoutEngine:] + 233\r\n\t23  AppKit                              0x00007fff8f9299a6 make_and_host_engine + 335\r\n\t24  AppKit                              0x00007fff90234c3d -[NSView(NSConstraintBasedLayout) _rebuildLayoutFromScratch] + 135\r\n\t25  AppKit                              0x00007fff900892e4 -[NSWindow _setWindowResolution:displayIfChanged:] + 256\r\n\t26  AppKit                              0x00007fff8fc2af26 -[NSWindow _updateInheritedBackingScaleFactorAndDisplayIfChanged:] + 114\r\n\t27  AppKit                              0x00007fff8fa70f58 __67-[NSWindow _updateSettingsSendingScreenChangeNotificationIfNeeded:]_block_invoke + 165\r\n\t28  AppKit                              0x00007fff8f9f1f05 NSPerformVisuallyAtomicChange + 147\r\n\t29  AppKit                              0x00007fff8f972028 -[NSWindow _updateSettingsSendingScreenChangeNotificationIfNeeded:] + 366\r\n\t30  AppKit                              0x00007fff8fc8bc11 -[NSWindow _screenChanged:] + 58\r\n\t31  AppKit                              0x00007fff8fc8bb92 -[NSWindow _displayChangedSoAdjustWindows:] + 152\r\n\t32  AppKit                              0x00007fff8fa4bfc0 __44-[NSApplication makeWindowsPerform:inOrder:]_block_invoke + 27\r\n\t33  AppKit                              0x00007fff8fa4bf7c __48-[NSApplication _findWindowInOrder:passingTest:]_block_invoke + 26\r\n\t34  AppKit                              0x00007fff8f8b40f1 -[NSApplication _enumerateWindowsInOrder:usingBlock:] + 545\r\n\t35  AppKit                              0x00007fff8f8b3e91 -[NSApplication _findWindowInOrder:passingTest:] + 165\r\n\t36  AppKit                              0x00007fff8f8b3dda -[NSApplication makeWindowsPerform:inOrder:] + 252\r\n\t37  AppKit                              0x00007fff8fc8b92a -[NSApplication _reactToScreenInvalidationImmediately:] + 67\r\n\t38  AppKit                              0x00007fff8fc8b8b7 __44-[NSApplication _reactToScreenInvalidation:]_block_invoke + 59\r\n\t39  CoreFoundation                      0x00007fff995824dc __CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ + 12\r\n\t40  CoreFoundation                      0x00007fff99561df5 __CFRunLoopDoBlocks + 341\r\n\t41  CoreFoundation                      0x00007fff99561b5b __CFRunLoopRun + 2347\r\n\t42  CoreFoundation                      0x00007fff99560fc8 CFRunLoopRunSpecific + 296\r\n\t43  HIToolbox                           0x00007fff92ff5d55 RunCurrentEventLoopInMode + 235\r\n\t44  HIToolbox                           0x00007fff92ff5b8f ReceiveNextEventCommon + 432\r\n\t45  HIToolbox                           0x00007fff92ff59cf _BlockUntilNextEventMatchingListInModeWithFilter + 71\r\n\t46  AppKit                              0x00007fff8f8b7d96 _DPSNextEvent + 1067\r\n\t47  AppKit                              0x00007fff8f8b71c5 -[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454\r\n\t48  AppKit                              0x00007fff8f8abd28 -[NSApplication run] + 682\r\n\t49  AppKit                              0x00007fff8f874fbe NSApplicationMain + 1176\r\n\t50  SegmentedControlTest                0x0000000100000f52 main + 34\r\n\t51  libdyld.dylib                       0x00007fff8ed3d5ad start + 1\r\n)\r\n\r\nSteps to Reproduce:\r\nNote: To reproduce this, you will need either a two monitor setup, with 1 Retina and 1 non-Retina display, or a setup which has enabled HiDPI modes for non-Retina displays (the latter is how I reproduced this on a Mid-2011 27\" iMac.\r\n\r\n1. Install Xcode Version 7.1 (7B91b).\r\n2. Unzip the attached zip file. \r\n3. In Xcode, open the attached SegmentedControlTest.xcodeproj.\r\n4. Choose Product->Run.\r\n5. In SegmentedControlTest, choose File->New.\r\n6. Drag the window from a Retina to a non-Retina screen (alternatively, change the resolution in System Preferences->Display from normal to HiDPI mode, or vice versa).\r\n-- Result: the window goes away. The Console output in Xcode will display the assertion failed message and stack trace shown in the Description.\r\n\r\nExpected Results:\r\nThe window should stay on the screen, and properly resize.\r\n\r\nActual Results:\r\nThe window goes away (and will never come back without re-launching the app). \r\n\r\nVersion:\r\nXcode Version 7.1 (7B91b)\r\nMac OS X 10.11.1 (15B42)\r\n\r\nNotes:\r\nHas something to do with autolayout, because removing all autolayout constraints makes the issue not occur. Is also specific to Separated style of NSSegmentedControl, as if it's set to any other style, the issue does not occur. Note that the enclosed sample app programmatically sets the segmented control to Separated style, because setting it in Xcode causes Xcode to crash (see possibly related rdar://23290250)."
    email: zacharias.pasternack@gmail.com
    modified: "2015-10-28T05:27:57.4933Z"
    number: "23290438"
    number_intvalue: 23290438
    originated: 10/27/15
    parent_number: '&{NULL_VALUE}'
    product: AppKit
    product_version: ""
    reproducible: Always
    resolved: No
    status: Open
    title: Assertion failed in Separated-style NSSegmentedControl when window moved from a Retina to non-Retina screen
