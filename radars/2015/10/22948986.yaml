apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22948986"
    labels:
        datastore_id: "5952505267617792"
data:
    classification: Crash
    created: "2015-10-02T13:49:00.4973Z"
    description: "Summary:\r\nUnder certain circumstances, a flow layout using estimated item size smashes the stack. The problem seems to be an unbounded recursion in `UICollectionView _updateVisibleCellsNow:`.\r\n\r\nSteps to Reproduce:\r\nOpen the attached example project and build and run.\r\n\r\nExpected Results:\r\nI expect the cells to be correctly sized in the collection view.\r\n\r\nActual Results:\r\nThe app crashes about 4000 frames deep in `UICollectionView _updateVisibleCellsNow:`\r\n\r\nVersion:\r\niOS 9\r\n\r\nNotes:\r\nThe problem was discovered while I was designing a custom flow layout. I was using arbitrary strings generated by arc4random, passed into a spelled out NSNumberFormatter, hence the oddly specific data.\r\n\r\nReturning only one item in the data source, instead of 6, will show a correctly functioning app. Returning 2 will cause a crash, so I suspect it might be specific widths of cells.\r\n\r\nI believe I have eliminated the possibility of constraint ambiguity. Adjusting the compression and hugging priorities to 1000 does not resolve the issue.\r\n\r\nIt may be possible to refine this bug further but without the symbols it's quite tough to see what's going!\r\n\r\nConfiguration:\r\niPhone Simulator and iOS device\r\n\r\nAttachments:\r\n'collection-view-bug.zip' was successfully uploaded."
    email: tom.catterall@gmail.com
    modified: "2015-10-02T13:49:00.49761Z"
    number: "22948986"
    number_intvalue: 22948986
    originated: 02-Oct-2015
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 9
    reproducible: Always
    resolved: ""
    status: Open
    title: Infinite recursion and stack overflow when using self-sizing collection view cells
