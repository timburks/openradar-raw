apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23196859"
    labels:
        datastore_id: "4989778281889792"
data:
    classification: Feature request
    created: "2015-10-21T05:04:57.28473Z"
    description: "Summary:\r\nIn Swift 2.1 it is not possible to make an extension with a type constraint inherit from a protocol. This makes it hard to create an API where one might have a simple generic \"model\" object. This model could be able to specialize its behavior based on its content object type. This specialization would allow the model to be used as the data source for a table view, for example.\r\n\r\nSteps to Reproduce:\r\nOutlined in the attached playground:\r\n\r\nimport UIKit\r\n\r\npublic protocol TableCellObject {}\r\n\r\npublic class Model <ObjectType> {\r\n  public typealias Section = ((header: String?, footer: String?)?, objects: [ObjectType])\r\n  var sections: [Section]\r\n  public init(sections: [Section]) {\r\n    self.sections = sections\r\n  }\r\n}\r\n\r\n// Compiler error is thrown here:\r\nextension Model: UITableViewDataSource where ObjectType: TableCellObject {\r\n}\r\n\r\nExpected Results:\r\nThat extending an object with type constraints would not result in a compiler error.\r\n\r\nActual Results:\r\nA compiler error is thrown."
    email: jverkoey@gmail.com
    modified: "2015-10-21T05:05:23.11692Z"
    number: "23196859"
    number_intvalue: 23196859
    originated: Oct 21 2015 1:04AM EST
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Version 7.1 beta 3 (7B85) Swift 2.1
    reproducible: Every time
    resolved: ""
    status: Duplicate of 21507148
    title: Extension of type with constraints cannot have an inheritance clause
