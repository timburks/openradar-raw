apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23247992"
    labels:
        datastore_id: "6056648158216192"
data:
    classification: Enhancement
    created: "2015-10-24T15:02:54.54167Z"
    description: |-
        SequenceType now has forEach, but there is no equivalent for Optional. While map() works, it is not ideal for Void returning functions for the same reason as in SequenceType. It forces you to assign the result to _ in order to avoid a “result of call is unused” warning, and it is misleading. You do not “map” to side-effects.

        Optionals should have a method with a name like “apply” that allows them to cause a side effect if they are non-nil. For example:

        extension Optional {
            func apply(@noescape f: (Wrapped) throws -> Void) rethrows {
                try map(f)
            }
        }

        Swift should still encourage the use of if-let, just as it encourages for-in, but in map/filter chains where forEach() makes sense, apply() equally makes sense.
    email: robnapier@gmail.com
    modified: "2015-10-24T15:02:54.54186Z"
    number: "23247992"
    number_intvalue: 23247992
    originated: 24-Oct-2015 11:02 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "7.1"
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: apply() for Optionals
