apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23296820"
    labels:
        datastore_id: "5468663243079680"
data:
    classification: ""
    created: "2015-10-28T16:56:39.1164Z"
    description: "Summary:\r\nRather than throw exceptions for things like ambiguous queries to XCUIElements, code in XCUIElement can cause tests to immediately fail.  Such high-level logic should not be left up to such a low-level component.\r\n\r\nThe correct behavior would be to throw an exception or Swift error, which would accomplish the existing functionality of failing the test case (assuming the exception was not caught).  As-is, the test environment is severely crippled.\r\n\r\nSteps to Reproduce:\r\nThe following XCTest code should produce an error in just about any iOS app:\r\n\r\n\r\nimport XCTest\r\n\r\nclass TestEnvironmentSanity: XCTestCase {\r\n\r\n    override func setUp() {\r\n        super.setUp()\r\n        XCUIApplication().launch()\r\n    }\r\n    \r\n \r\n   func test_XCTestSanity() {\r\n        let app = XCUIApplication()\r\n        do {\r\n            try app.windows[\"\"].elementType\r\n        } catch {\r\n            NSLog(\"We will have to access the window a different way.\")\r\n        }\r\n    }\r\n}\r\n\r\nExpected Results:\r\nThe message should be printed in the log\r\n\r\nActual Results:\r\nTest fails with \"UI Testing Failure - Multiple matches found:\"\r\n\r\nVersion:\r\nXcode Version 7.0 (7A220)\r\n\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:"
    email: iFreeCarve@gmail.com
    modified: "2015-10-28T16:56:39.11669Z"
    number: "23296820"
    number_intvalue: 23296820
    originated: 10/28/2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Version 7.0 (7A220)
    reproducible: Always
    resolved: ""
    status: Open
    title: XCUIElements call XCTAssert instead of throwing exceptions
