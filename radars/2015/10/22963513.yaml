apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22963513"
    labels:
        datastore_id: "5140739268804608"
data:
    classification: Enhancement
    created: "2015-10-03T19:34:38.75898Z"
    description: |-
        This is a duplicate of rdar://22924801

        Having “deep press” as a modal state makes working with the watchOS simulator much too difficult.

        A better approach would be to use a keyboard modifier (such as the Option key) to signal that a press is not a default shallow press.

        To get an idea of how this is frustrating, perform the following steps that watchOS developers do MANY times every day:

        Set your own complication in a face
        -----------------------------------

        A1) Shift-Cmd-2
        A2) Click face
        A3) Shift-Cmd-1
        A4) Click "Customize"
        A5) Click around to customize
        A6) Shift-Cmd-2
        A7) Click face
        A8) Shift-Cmd-1

        Test an app's menu:
        -------------------

        B1) Shift-Cmd-2
        B2) Click face
        B3) Shift-Cmd-1
        B4) Click menu button

        That’s four mode switches for the complication update and two for the app menu.

        Note that if you forget you're in the "deep press mode" the simulator does not behave how you expect:

        • In steps A2 or A7, the display bounces instead of performing the intended action.
        • In step B4, the menu is cancelled and the menu must be opened again.

        Remember that we're debugging code here, so it's VERY easy to forget the mode you're in while working in the simulator. I forget to perform steps A6 and B3 many times every day. It’s frustrating, to say the least.

        There's also no visual indication that deep presses are being performed when you click with the mouse. When you switch from LLDB to the Simulator, state can only be determined by going to the menubar and navigating to a submenu. This is impractical.

        Now, let's look how much simpler things would be if you held down a modifier key (such as Option) to indicate a deep press:

        Set your own complication in a face
        -----------------------------------

        A1) Option + Click face
        A2) Click "Customize"
        A3) Click around to customize
        A4) Option + Click face

        Test an app's menu:
        -------------------

        B1) Option + Click face
        B2) Click menu button

        Cognitively, this interaction is also much closer to the physical device. Pressing a key and a mouse button requires more effort than just the mouse button alone, just like a deep press requires more effort than a shallow one.
    email: jeff@forgeapps.com
    modified: "2015-10-03T19:34:38.75916Z"
    number: "22963513"
    number_intvalue: 22963513
    originated: 03-Oct-2015 12:34 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.0 (7A218)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode 7.0: Watch Simulator should not use modal interaction for deep press'
