apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23124439"
    labels:
        datastore_id: "5043484834660352"
data:
    classification: Serious Bug
    created: "2015-10-15T10:04:56.58512Z"
    description: "Summary:\nGiven an optional array, dictionary or set it is not possible to do a “==“ comparison to Optional.None or Optional.Some\n\nSteps to Reproduce:\n1. Open a Playground\n2. Write the following code\n```\nlet dictionary: [String: AnyObject]? = nil\ndictionary == .None\n\nlet array: [Bool]? = nil\narray == .None\n```\n\nExpected Results:\ndictionary == .None => true\narray == .None => true\n\nActual Results:\ndictionary == .None => Error: “Type of expression is ambiguous without more context”\narray == .None => Error: “Type of expression is ambiguous without more context”\n\nNotes:\nIf a `switch` statement is used it matches `.None` and `.Some` as expected. \nLike this:\n```\nlet dictionary: [String: AnyObject]? = nil\nswitch dictionary {\ncase .None: print(\"None\")\ncase .Some: print(\"Some\")\n}\n```\n\nAlso not working in Xcode 7.0(.1) - Swift 2.0"
    email: morten@justabeech.com
    modified: "2015-10-15T10:04:56.58544Z"
    number: "23124439"
    number_intvalue: 23124439
    originated: 15-Oct-2015 12:04 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2.1 / Xcode 7.1 beta 3 (7B85)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Optional of type [T : Y]/[T] can not be compared to .None/.Some'
