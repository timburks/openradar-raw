apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23285766"
    labels:
        datastore_id: "5162477843120128"
data:
    classification: Crash
    created: "2015-10-28T01:30:46.99319Z"
    description: "Summary:\r\nWe see a crash when calling a Swift lambda from within ObjC. The same code works fine in an isolated example.\r\n\r\nSteps to Reproduce:\r\nRun app. Observe crash: (EXC_i386_GPFLT)\r\n\r\n(lldb) bt\r\n* thread #1: tid = 0x46564d, 0x000000010728a80b libobjc.A.dylib`objc_msgSend + 11, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n    frame #0: 0x000000010728a80b libobjc.A.dylib`objc_msgSend + 11\r\n    frame #1: 0x00000001060923a8 PSPDFKit`___lldb_unnamed_function1406$$PSPDFKit + 834\r\n    frame #2: 0x0000000105da72a3 SwiftLambdaBlock`@nonobjc __ObjC.PSPDFAESCryptoDataProvider.init (__ObjC.PSPDFAESCryptoDataProvider.Type)(URL : __ObjC.NSURL, passphraseProvider : () -> Swift.String, salt : Swift.String, rounds : Swift.UInt) -> Swift.Optional<__ObjC.PSPDFAESCryptoDataProvider> + 195 at SwiftTest.swift:0\r\n    frame #3: 0x0000000105da6c5d SwiftLambdaBlock`__ObjC.PSPDFAESCryptoDataProvider.__allocating_init (__ObjC.PSPDFAESCryptoDataProvider.Type)(URL : __ObjC.NSURL, passphraseProvider : () -> Swift.String, salt : Swift.String, rounds : Swift.UInt) -> Swift.Optional<__ObjC.PSPDFAESCryptoDataProvider> + 141 at SwiftTest.swift:0\r\n  * frame #4: 0x0000000105da63d9 SwiftLambdaBlock`SwiftLambdaBlock.SwiftTest.init (self=0x00007f9d38cc8780)() -> SwiftLambdaBlock.SwiftTest + 1097 at SwiftTest.swift:31\r\n    frame #5: 0x0000000105da6761 SwiftLambdaBlock`@objc SwiftLambdaBlock.SwiftTest.init (SwiftLambdaBlock.SwiftTest.Type)() -> SwiftLambdaBlock.SwiftTest + 17 at SwiftTest.swift:0\r\n    frame #6: 0x0000000105da5dfb SwiftLambdaBlock`-[AppDelegate application:didFinishLaunchingWithOptions:](self=0x00007f9d38c33f50, _cmd=\"application:didFinishLaunchingWithOptions:\", application=0x00007f9d38c317f0, launchOptions=0x0000000000000000) + 139 at AppDelegate.m:20\r\n    frame #7: 0x0000000107c48f24 UIKit`-[UIApplication _handleDelegateCallbacksWithOptions:isSuspended:restoreState:] + 272\r\n    frame #8: 0x0000000107c4a0ca UIKit`-[UIApplication _callInitializationDelegatesForMainScene:transitionContext:] + 3415\r\n    frame #9: 0x0000000107c509c3 UIKit`-[UIApplication _runWithMainScene:transitionContext:completion:] + 1750\r\n    frame #10: 0x0000000107c4dba3 UIKit`-[UIApplication workspaceDidEndTransaction:] + 188\r\n    frame #11: 0x0000000111402784 FrontBoardServices`-[FBSSerialQueue _performNext] + 192\r\n    frame #12: 0x0000000111402af2 FrontBoardServices`-[FBSSerialQueue _performNextFromRunLoopSource] + 45\r\n    frame #13: 0x00000001077d1011 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n    frame #14: 0x00000001077c6f3c CoreFoundation`__CFRunLoopDoSources0 + 556\r\n    frame #15: 0x00000001077c63f3 CoreFoundation`__CFRunLoopRun + 867\r\n    frame #16: 0x00000001077c5e08 CoreFoundation`CFRunLoopRunSpecific + 488\r\n    frame #17: 0x0000000107c4d4f5 UIKit`-[UIApplication _run] + 402\r\n    frame #18: 0x0000000107c5230d UIKit`UIApplicationMain + 171\r\n    frame #19: 0x0000000105da5f5f SwiftLambdaBlock`main(argc=1, argv=0x00007fff59e5a670) + 111 at main.m:14\r\n    frame #20: 0x000000010d15392d libdyld.dylib`start + 1\r\n(lldb) \r\n\r\nExpected Results:\r\nShould not crash. Isolated example also doesnâ€™t crash."
    email: steipete@gmail.com
    modified: "2016-06-08T07:30:55.95324Z"
    number: "23285766"
    number_intvalue: 23285766
    originated: 28-Oct-2015
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "9.1"
    reproducible: Always
    resolved: March 2016
    status: Closed
    title: Crash when calling a Swift lambda from within ObjC
