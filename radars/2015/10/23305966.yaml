apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23305966"
    labels:
        datastore_id: "4956896549142528"
data:
    classification: Other bug
    created: "2015-10-28T23:27:43.84423Z"
    description: "I have attached an app with source code that demonstrates an issue with OS Services I like to solve:\r\n\r\nThe app both offers a service that returns a text (taking no input)\r\nand also uses the Services itself.\r\n\r\nThe issue is that the app shows its own offered service in its\r\nServices menus (which isn't desired).\r\n\r\nBut even worse, if the user\r\nchooses the service, the app does not get its Service handler\r\ninvoked until a timeout is reached, after which a cryptic error\r\nmessage is shown to the user.\r\n\r\nIdeally, it would be great if I could hide my offered services from my \r\napp's Services menu, because I want to offer my service only to other apps. But since I want to offer my service to ALL other apps, I believe one cannot control this \"all but me\" via the documented options for the Services dict in the Info.plist.\r\nI also found no way to dynamically disable my services when my app is front, because it appears that the Services menu gets created statically from the Info.plist, and I cannot change that while my app runs, right?\r\n\r\nIf I cannot hide my own service from the Services menu, the second option would be to at least avoid the odd timeout issue that's caused if the user chooses the service inside my app. I found that if I do not declare the readSelectionFromPasteboard: method at all, then my service gets called, which is odd, - but that's solution because then I would not be able to handle other Services in my app properly, either.\r\n\r\nSteps to Reproduce:\r\nTo test this effect, first verify that the offered service works\r\nin other apps: Run this app, then open a text editor and use its\r\nServices menu, choosing \"• test: get text •\". This invokes this\r\napp's testGetText: method and returns the text \"text from service\"\r\nto the editor. This proves that it works, in general.\r\n\r\nNow use the Services menu in this app, choosing \"• test: get text •\"\r\nagain. This time, nothing happens but instead an error message gets\r\ndisplayed after the timeout that's set in the Info.plist file for\r\nthe service.\r\n\r\nAttachment download: http://files.tempel.org/Various/radar-23305966.zip"
    email: tempelmann@gmail.com
    modified: "2015-10-28T23:27:43.84461Z"
    number: "23305966"
    number_intvalue: 23305966
    originated: 29 Oct 2015
    parent_number: '&{NULL_VALUE}'
    product: OS X SDK
    product_version: "10.11"
    reproducible: always
    resolved: ""
    status: open
    title: Offered NSService freezes in own app
