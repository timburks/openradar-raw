apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23147654"
    labels:
        datastore_id: "4991483920777216"
data:
    classification: UI/Usability
    created: "2015-10-16T18:53:04.77604Z"
    description: |-
        Summary:

        Generic functions that return type `T` or `T?` are not differentiated by
        the compiler based on their ability to `throws`. Meaning that if you
        have a function that does not throw and returns `T?`, and a function
        with the same signature that throws and returns type `T`, you get a
        ambiguous function error.

        Steps to reproduce:

        1. Create a function that returns `T` and throws
        2. Create a function that returns `T?` and doesn't throw
        3. Attempt to call the function that returns `T?` and assign it to an
           optional `T`

        OR

        1. See the attached playground

        Expected results:

        The ability to throw should be take into account to choose which
        function to call.

        Actual results:

        The compiler produces an "Ambiguous use of X()" error.
    email: keithbsmiley@gmail.com
    modified: "2015-10-16T18:53:04.77635Z"
    number: "23147654"
    number_intvalue: 23147654
    originated: 16-Oct-2015 11:52 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2.0
    reproducible: Always
    resolved: ""
    status: Open
    title: Generic function signatures are not differentiated on their ability to throw
