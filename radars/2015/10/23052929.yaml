apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23052929"
    labels:
        datastore_id: "6073105399152640"
data:
    classification: Other Bug
    created: "2015-10-09T19:53:24.2744Z"
    description: "Summary:\r\nIn Swift, if a method and a function share a name but have separate type signatures, the class of the method can't apply the global function.\r\n\r\nSee: attached playground or Swift file.\r\n\r\nSteps to Reproduce:\r\nAll code in Swift. You can also see attached playground/Swift file.\r\n\r\n1. Open a Swift file/playground.\r\n2. Write a file level/global function.\r\n3. Write a class with a method that shares a name with the aforementioned global function but has a separate type signature.\r\n4. Use global function inside class.\r\n5. Try to compile and despair.\r\n\r\nExpected Results:\r\nCode compiles, class is able to use global function normally.\r\n\r\nActual Results:\r\nCode doesn't compile.\r\n\r\nVersion:\r\nXcode 7.0.1\r\n\r\nNotes:\r\nOne can get around this by name mangling the global function herself. If you see the attached playground/file, that's what I did for the method `doBimpyWith2`. This isn't ideal for API's where the client can call on either global functions or methods as a shorthand.\r\n\r\nConfiguration:\r\nAlways occurs in Swift 2. Didn't try on Swift 1\r\n\r\nAttachments:\r\n'FunctionOverloadingBug.playground.zip' and 'FunctionOverloadingBug.swift' were successfully uploaded."
    email: adam.kuipers@gmail.com
    modified: "2018-08-20T18:40:02.13954Z"
    number: "23052929"
    number_intvalue: 23052929
    originated: 9-Oct-2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.0.1 / Swift 2
    reproducible: Always
    resolved: ""
    status: DUPLICATE OF 17368791
    title: '[Swift] Can''t overload method and a function with the same name and different type signatures.'
