apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23010642"
    labels:
        datastore_id: "6088088795217920"
data:
    classification: Enhancement
    created: "2015-10-07T15:24:23.30355Z"
    description: "Summary:\nN/A\n\n\nSteps to Reproduce:\nThis code:\nextension SequenceType {\n\tfunc f<A>(a: A) -> Generator {\n\t\tfunc g<A>(a: A) -> Generator {}\n\t}\n}\n\n\nExpected Results:\nshouldnâ€™t crash swiftc\n\n\nActual Results:\nbut totally does:\nrob@Resonance ~/Desktop> swiftc boom.swift; and ./boom\n0  swift                    0x00000001066ccedb llvm::sys::PrintStackTrace(__sFILE*) + 43\n1  swift                    0x00000001066cd61b SignalHandler(int) + 379\n2  libsystem_platform.dylib 0x00007fff85b2c52a _sigtramp + 26\n3  libsystem_c.dylib        0x00007fff850107fa vsprintf_l + 399\n4  swift                    0x000000010495dc80 swift::Lowering::TypeConverter::getFunctionTypeWithCaptures(swift::CanTypeWrapper<swift::AnyFunctionType>, swift::AnyFunctionRef) + 272\n5  swift                    0x000000010495e916 swift::Lowering::TypeConverter::makeConstantType(swift::SILDeclRef, bool) + 854\n6  swift                    0x0000000104917e9a swift::Lowering::TypeConverter::getConstantInfo(swift::SILDeclRef) + 250\n7  swift                    0x000000010493a943 swift::SILModule::getOrCreateFunction(swift::SILLocation, swift::SILDeclRef, swift::ForDefinition_t) + 147\n8  swift                    0x000000010497aaf5 swift::Lowering::SILGenModule::getFunction(swift::SILDeclRef, swift::ForDefinition_t) + 117\n9  swift                    0x000000010497afb7 swift::Lowering::SILGenModule::emitFunction(swift::FuncDecl*) + 375\n10 swift                    0x00000001049f1ec9 swift::ASTVisitor<(anonymous namespace)::StmtEmitter, void, void, void, void, void, void>::visit(swift::Stmt*) + 425\n11 swift                    0x00000001049f1d15 swift::Lowering::SILGenFunction::emitStmt(swift::Stmt*) + 21\n12 swift                    0x00000001049c2e7b swift::Lowering::SILGenFunction::emitFunction(swift::FuncDecl*) + 331\n13 swift                    0x000000010497b01f swift::Lowering::SILGenModule::emitFunction(swift::FuncDecl*) + 479\n14 swift                    0x00000001049f752c swift::ASTVisitor<SILGenExtension, void, void, void, void, void, void>::visit(swift::Decl*) + 300\n15 swift                    0x00000001049f718b SILGenExtension::emitExtension(swift::ExtensionDecl*) + 59\n16 swift                    0x00000001049f6b35 swift::Lowering::SILGenModule::visitExtensionDecl(swift::ExtensionDecl*) + 21\n17 swift                    0x000000010497e76b swift::Lowering::SILGenModule::emitSourceFile(swift::SourceFile*, unsigned int) + 779\n18 swift                    0x000000010497f330 swift::SILModule::constructSIL(swift::ModuleDecl*, swift::SILOptions&, swift::FileUnit*, llvm::Optional<unsigned int>, bool, bool) + 944\n19 swift                    0x000000010497f6dd swift::performSILGeneration(swift::FileUnit&, swift::SILOptions&, llvm::Optional<unsigned int>, bool) + 109\n20 swift                    0x00000001047ddfd5 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&) + 11445\n21 swift                    0x00000001047db10a frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2682\n22 swift                    0x00000001047d7797 main + 2247\n23 libdyld.dylib            0x00007fff9494a5ad start + 1\n24 libdyld.dylib            0x000000000000000f start + 1802197603\nStack dump:\n0.\tProgram arguments: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -primary-file boom.swift -target x86_64-apple-darwin15.0.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -color-diagnostics -module-name boom -o /var/folders/9y/f7n4rvx901nctm_5d16c1wm40000gn/T/boom-efc993.o \n1.\tWhile emitting SIL for 'f' at boom.swift:2:2\n2.\tWhile emitting SIL for 'g' at boom.swift:3:3\n<unknown>:0: error: unable to execute command: Segmentation fault: 11\n<unknown>:0: error: swift frontend command failed due to signal (use -v to see invocation)\n\n\nRegression:\nBoth functions have to be generic to crash.\nBoth functions have to reference an associated type to crash.\nIt has to be in a protocol extension to crash.\n\nNotes:\nN/A"
    email: rix.rob@gmail.com
    modified: "2015-10-07T15:24:23.30373Z"
    number: "23010642"
    number_intvalue: 23010642
    originated: 07-Oct-2015 11:24 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.0.1 (7A1001)
    reproducible: Always
    resolved: ""
    status: Open
    title: swiftc crash with nested generic functions using associated type in protocol extension
