apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23345228"
    labels:
        datastore_id: "5012647237910528"
data:
    classification: Serious Bug
    created: "2015-10-31T16:13:42.13735Z"
    description: "Summary:\r\nThere is no generic support for protocols, only type aliases. It is possible to achieve the same goal as with generics with protocol but it is require significant overhead in code. Here is an example how to define generic protocol:\r\n\r\nstruct Container<T> {\r\n    private var containedValue: T\r\n    \r\n    init(_ value: T) {\r\n        containedValue = value\r\n    }\r\n}\r\n\r\nprotocol ContainerProtocol {\r\n    typealias ContainerType\r\n    var value: ContainerType { get set }\r\n}\r\n\r\nextension Container: ContainerProtocol {\r\n    typealias ContainerType = T\r\n    var value: ContainerType {\r\n        get {\r\n            return self.containedValue\r\n        }\r\n        set {\r\n            self.containedValue = newValue\r\n        }\r\n    }\r\n}\r\n\r\nclass App<T: ContainerProtocol where T.ContainerType == Int> {\r\n    var container: T\r\n    \r\n    init(_ container: T) {\r\n        self.container = container\r\n    }\r\n}\r\n\r\nas shown App variable container has variable container: ContainerProtocol<Int> however it is impossible to define it with shorter with a familiar generics syntax.\r\n\r\nSteps to Reproduce:\r\nTry to declare protocol with generic at the end like following:\r\nprotocol GenericProtocol<T> {\r\n}\r\n\r\nExpected Results:\r\nIt should work.\r\n\r\nActual Results:\r\nIt will not work."
    email: Nikita.Leonov@gmail.com
    modified: "2015-10-31T16:13:42.13759Z"
    number: "23345228"
    number_intvalue: 23345228
    originated: October, 31 2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.1
    reproducible: 100%
    resolved: ""
    status: Open
    title: Protocol does not explicitly support generics.
