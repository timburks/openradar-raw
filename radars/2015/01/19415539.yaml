apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19415539"
    labels:
        datastore_id: "5773853720576000"
data:
    classification: Enhancement
    created: "2015-01-08T19:57:30.369106Z"
    description: "Summary:\nSometimes when pattern matching a case C you then also need to perform some test on the matched value x. If that test takes the form f(x) != nil then you may also want to bind the result of f(x), and currently that means you have to either call f twice or rewrite your case to use an if statement after destructuring.\n\nThat is, currently you have to write this:\n\nswitch v {\ncase let C(x):\n    if let y = f(x) { return y }\n    else { return nil } \ndefault:\n    return nil\n}\n\nThis can complicate control flow substantially since you may need to explicitly handle the non-binding case instead of just letting a default case catch anything failing the test.\n\n\nI propose allowing where clauses to bind constants, clarifying and simplifying control flow:\n\nswitch v {\ncase let C(x) where let y = f(x):\n    return y\ndefault:\n    return nil\n}\n\n\nSteps to Reproduce:\nN/A\n\nExpected Results:\nN/A\n\nActual Results:\nN/A\n\nRegression:\nN/A\n\nNotes:\nN/A"
    email: rix.rob@gmail.com
    modified: "2015-01-08T19:57:30.369244Z"
    number: "19415539"
    number_intvalue: 19415539
    originated: 08-Jan-2015 02:56 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1.1 (6A2008a)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: `where let x = â€¦` to bind variables in where clauses attached to cases'
