apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19424740"
    labels:
        datastore_id: "5314992299573248"
data:
    classification: ""
    created: "2015-01-14T12:09:40.889299Z"
    description: "Summary:\r\nThe generic function defined with curried function notation doesn’t capture the first parameter and appears to use some uninitialized(?) value, when invoked with arguments of type Double.\r\n\r\nSteps to Reproduce:\r\nExecute in playground or REPL: \r\n\r\nfunc curry<A, B, Z>(f: (A, B) -> Z)(_ a: A)(_ b: B) -> Z {\r\n    println(\"a:\\(a) b:\\(b)\")\r\n    return f(a, b)\r\n}\r\n\r\nfunc quadratic(c: Double, z: Double) -> Double { return z * z + c }\r\n\r\nquadratic(1, 2)\r\n\r\nlet q = curry(quadratic)\r\nq(a: 1)(b: 2) // Should be 5!\r\n\r\nlet qc = q(a: 1)\r\nqc(b: 2)  // Should be 5!\r\n\r\ncurry(quadratic)(a: 1)(b: 2) // correct\r\n\r\nExpected Results:\r\nConsole output should be\r\na:1.0 b:2.0\r\na:1.0 b:2.0\r\na:1.0 b:2.0\r\n\r\nActual Results:\r\na:6.95075740882923e-310 b:2.0\r\na:6.95075741238967e-310 b:2.0\r\na:1.0 b:2.0\r\n\r\nVersion:\r\nVersion 6.2 (6C101) Beta 3\r\n\r\nNotes:\r\nSpecialized definition of the curry function works correctly:\r\n\r\nfunc curry(f: (Double, Double) -> Double)(_ a: Double)(_ b: Double) -> Double {\r\n    println(\"a:\\(a) b:\\(b)\")\r\n    return f(a, b)\r\n}"
    email: pavol.vaskovic@gmail.com
    modified: "2015-02-25T10:05:16.828735Z"
    number: "19424740"
    number_intvalue: 19424740
    originated: 09-Jan-2015 11:25 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.2 (6C101) Beta 3
    reproducible: always
    resolved: Fixed
    status: Closed
    title: Generic curried function in Swift doesn’t capture the parameter
