apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19397011"
    labels:
        datastore_id: "5212922401783808"
data:
    classification: Enhancement
    created: "2015-01-07T10:41:37.161195Z"
    description: |-
        The generated headers (and the runtime-resolved methods) don’t pay any attention to reserved Cocoa terminology. For instance, OmniFocus objects tend to have a property called “id”. In order to call it without errors or warnings, I have to do this:

        #pragma clang diagnostic push
        #pragma clang diagnostic ignored "-Warc-performSelector-leaks"
        	NSString *taskID = [self.sbTask performSelector:NSSelectorFromString(@"id")];
        #pragma clang diagnostic pop

        There needs to be some prefix automatically added to such methods, in order that they can be called directly as Cocoa methods without conflicting with built in types. This should be used both by the script that generates the headers, and by the runtime method resolution stuff within Scripting Bridge.
    email: amorya@gmail.com
    modified: "2015-01-07T10:41:37.161386Z"
    number: "19397011"
    number_intvalue: 19397011
    originated: 07-Jan-2015 10:41 AM
    parent_number: '&{NULL_VALUE}'
    product: OS X SDK
    product_version: Mac OS X 10.10.1 (14B25)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Scripting bridge: don''t auto-generate method names that conflict with Objective C types (e.g. "id")'
