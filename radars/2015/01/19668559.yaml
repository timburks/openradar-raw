apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19668559"
    labels:
        datastore_id: "5792851434668032"
data:
    classification: Serious Bug
    created: "2015-01-30T21:51:32.041709Z"
    description: |-
        I’m not sure if Self is allowed in this context, but even if it’s not, this error message is very strange:

        import Foundation

        @objc protocol TestProtocol {}

        @objc class TestClass: TestProtocol {
            func test() -> Self {
                let test = self as TestProtocol // cannot downcast from 'Self' to non-@objc protocol type 'TestProtocol'
                return self
            }
        }

        If you adjust the signature of test() to return TestClass, the compiler is happy.

        Here’s another variant presentation of what seems to be the same issue:

        import Foundation

        @objc protocol TestProtocol {}

        @objc class TestClass: TestProtocol {
            func test() -> Self {
                // Error: Type 'Self' does not conform to protocol 'TestProtocol'
                testFunction(self)
                return self
            }
        }
    email: garth@garthsnyder.com
    modified: "2015-01-30T21:51:32.041893Z"
    number: "19668559"
    number_intvalue: 19668559
    originated: 30-Jan-2015 01:51 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.2b4 6C107a
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: strange error when using Self as return type'
