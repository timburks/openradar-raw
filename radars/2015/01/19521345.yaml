apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19521345"
    labels:
        datastore_id: "6465502369021952"
data:
    classification: UI/Usability
    created: "2015-01-19T20:12:59.956783Z"
    description: "Summary:\r\nWe are using background fetch in an iPhone app and also using Darwin notifications to keep the WatchKit interface up-to-date when new data comes in. We are trying to test that that will work if a background fetch event happens while the user is interacting with the iPhone. Unfortunately, it doesn't appear that there's a way to test background fetch at the same time as a WatchKit app.\r\n\r\nSteps to Reproduce:\r\n1. Create an iPhone app that updates data in a background fetch.\r\n2. Add a WatchKit extension to it.\r\n3. Run the WatchKit extension in the simulator.\r\n4. In Xcode, select “Debug→Simulate Background Fetch.”\r\n\r\nExpected Results:\r\nThe background fetch happens.\r\n\r\nActual Results:\r\nThe background fetch does not happen.\r\n\r\nVersion:\r\nXcode Version 6.2 (6C107a)\r\n\r\nNotes:\r\nSince it’s difficult to determine if a background fetch is happening while the console output is only shown for the watch app (rdar://19386708), I use this code snippet at the beginning of ‑[UIApplicationDelegate application:performFetchWithCompletionHandler:]:\r\n\r\n[@\"\" writeToFile:@\"/Users/jeff/Desktop/start\"\r\n      atomically:YES\r\n        encoding:NSUTF8StringEncoding\r\n           error:NULL];\r\n\r\nIf the file appears on your desktop, then the fetch started.\r\n\r\nConfiguration:\r\niPhone Simulator (OS X 10.10.1 (14B25))"
    email: SlaunchaMan@gmail.com
    modified: "2015-04-06T13:28:07.899268Z"
    number: "19521345"
    number_intvalue: 19521345
    originated: 1/19/2015
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: Xcode Version 6.2 (6C107a)
    reproducible: Always
    resolved: ""
    status: Duplicate/20311699/Open
    title: 'WatchKit: Can’t Debug Parent App Background Fetch'
