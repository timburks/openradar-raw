apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22177771"
    labels:
        datastore_id: "6666308967989248"
data:
    classification: Other Bug
    created: "2015-08-06T21:35:47.46866Z"
    description: "The Swift Book - Tuple Pattern:\r\n“You can constrain a tuple pattern to match certain kinds of tuple types by using type annotations. For example, the tuple pattern (x, y): (Int, Int) in the constant declaration let (x, y): (Int, Int) = (1, 2) matches only tuple types in which both elements are of type Int. To constrain only some elements of a tuple pattern, provide type annotations directly to those individual elements. For example, the tuple pattern in let (x: String, y) matches any two-element tuple type, as long as the first element is of type String.”\r\n\r\nHowever, the syntax of individual element constraining does not work as expected. In real effect `x` is treated as the element name while `String` is treated as the variable.\r\n\r\nSample code: http://cl.ly/3n0b0k1e2B3a"
    email: an00na@gmail.com
    modified: "2015-08-06T21:36:32.50122Z"
    number: "22177771"
    number_intvalue: 22177771
    originated: 06-Aug-2015 04:35 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2.0 beta 5
    reproducible: Always
    resolved: ""
    status: Open
    title: Tuple pattern element type constrainting bug
