apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22419981"
    labels:
        datastore_id: "5498593158889472"
data:
    classification: Other Bug
    created: "2015-08-25T16:16:35.48956Z"
    description: |-
        Summary:
        Provide a descriptive summary of the issue.

        Steps to Reproduce:
        This code:
        protocol A {
        	typealias O : B
        }
        protocol B {
        	typealias O : A
        }


        Expected Results:
        should result in an unambiguous, easy-to-understand, and resolvable error message (or actually it should compile but that’s fodder for a different radar)


        Actual Results:
        but instead, you get this:
        boom.swift:5:12: error: type may not reference itself as a requirement
                typealias O : A
                          ^


        Regression:
        It used to crash (rdar://problem/22064783), so this is much better.


        Notes:
        This error message is misleading (to say the least), because the type does _not_ reference itself as a requirement; it references another protocol as a requirement which references it (the first one) as a requirement. It’s still cyclic either way, but the direct/indirect distinction is significant to the programmer.
    email: rix.rob@gmail.com
    modified: "2015-08-25T16:16:35.48989Z"
    number: "22419981"
    number_intvalue: 22419981
    originated: 25-Aug-2015 12:16 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A192o)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2b6: Mutually recursive protocols have a really bad error message'
