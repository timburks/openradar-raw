apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22323191"
    labels:
        datastore_id: "5370037372190720"
data:
    classification: Serious Bug
    created: "2015-08-18T11:14:00.5289Z"
    description: "Consider the following Swift Class:\r\n\r\n@objc class StringCreator: NSObject {\r\n    \r\n    class func createStrings(strings: [NSString])\r\n    {\r\n        for string in strings {\r\n            let _ = NSString(string: string)\r\n        }\r\n    }\r\n}\r\n\r\nIt accepts an array of NSStrings (NSArray<NSString *> * __nonnull) which seems really good, but it still takes an NSArray * without warning.  I can call this from ObjC as follows:\r\n\r\n    NSArray *anyArray = @[@\"string\", [NSData data], @3];\r\n    \r\n    [StringCreator createStrings:anyArray];\r\n\r\nThis crashes at runtime with the error \"fatal error: NSArray element failed to match the Swift Array Element type\" the second time it tries to iterate the array strings using a for loop.\r\n\r\nThe fact that this is a crash at runtime rather than a compiler error seriously impairs the usefulness of Objective-C generics.  In any other language (Swift included) I would not expect this to compile."
    email: stephen.groom@me.com
    modified: "2015-10-30T12:07:40.10385Z"
    number: "22323191"
    number_intvalue: 22323191
    originated: 18-Aug-2015 12:13 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: '>Xcode 7'
    reproducible: Always
    resolved: ""
    status: Closed
    title: Unspecialized generic types silently converting to specialized generic types allows nonsensical code to compile
