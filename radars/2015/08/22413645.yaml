apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22413645"
    labels:
        datastore_id: "5594546217943040"
data:
    classification: Enhancement
    created: "2015-08-25T02:56:41.97599Z"
    description: "Summary:\r\nSwift's new 'try?' keyword attempts to strike a balance between code safety and programmer convenience. It can be used in multiple contexts, including (but not limited to):\r\n\r\n- A function or initializer can return a success value or throw one of several errors; try? allows us to collapse multiple errors into a generic 'error' state by returning nil instead of any of the specific errors.\r\n\r\n- A function attempts to perform a side effect and throws an error upon failure. try? allows us to call the function and ignore any errors that may occur.\r\n\r\nKnowing that these things are subjective, I would argue that the first use case tends to be safe more often than not, while the second use case tends to be more dangerous, and should be discouraged. The first use case assigns the return value, whether it be a non-nil value or nil, to a variable, where it must be further acted upon (or at least explicitly ignored); it does not discard all information about whether an error took place or not. The second use case discards all information about whether an error took place.\r\n\r\nHaving made this point, I would like to suggest that the compiler warn upon calling try? without assigning the return value to a variable, in order to discourage dangerous use of try?. Users who wish to suppress the warning could assign the return value to '_' (e.g. let _ = try? voidReturnFoo()), a pattern which several of the existing warnings already use.\r\n\r\nI suggest that doing so would strike a better balance between code safety and developer convenience. There's already precedent in the compiler, for example, warnings that suggest using 'let' instead of 'var' or assigning unused immutable values to '_'. These warnings gently encourage best practices while still leaving the developer with ultimate agency over how to structure their code.\r\n\r\nVersion:\r\nXcode 7 beta 6"
    email: AustinZheng@gmail.com
    modified: "2015-08-25T20:38:11.29254Z"
    number: "22413645"
    number_intvalue: 22413645
    originated: 24-Aug-2015 07:55 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Closed
    title: '[Swift] Warn upon discarding value of try? expression'
