apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22426271"
    labels:
        datastore_id: "5584800232505344"
data:
    classification: Other Bug
    created: "2015-08-25T21:19:34.8816Z"
    description: "Thanks for adding the try? keyword to beta 6. This is a helpful addition to the language.\n\nUnfortunately, it has the side effect of promoting all functions to value-returning status, even if the function being called returns Void. So the compiler will issue a warning if the value isn’t consumed.\n\nThis isn’t an issue with value-returning functions, since the value would have to be consumed anyway in order to avoid a warning. But it would be nice to be able to use the construction\n\n    try? funcReturningVoid()\n\nwithout further embellishment or warnings. As it is now, you must write\n\n    _ = try? funcReturningVoid()\n\nto suppress the warning. This is just clutter; the intention to ignore the error is already clear from the code. \n\nIn fact, I’d speculate that the underlying check to see if a Void? value is consumed is significantly more likely to generate a spurious warning than a helpful one. Wouldn’t it make sense to suppress the warning in the case of Void?\n\nI can understand the desire for consistency. But on the other hand, warnings need not be held to the same standard as actual language constructs. And they should be more helpful than annoying."
    email: garth@garthsnyder.com
    modified: "2015-08-25T21:19:34.88193Z"
    number: "22426271"
    number_intvalue: 22426271
    originated: 25-Aug-2015 02:19 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7 beta 6
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: compiler should not warn about non-use of Void? return type'
