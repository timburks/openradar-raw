apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22312768"
    labels:
        datastore_id: "4807087418769408"
data:
    classification: ""
    created: "2015-08-17T20:36:54.44735Z"
    description: "Summary:\r\nSwift cannot determine that a tuple with 2 enums is exhaustive. (Possible duplicate: rdar://21892845)\r\n\r\nSteps to Reproduce:\r\nCompile this code:\r\n\r\nenum A {\r\n\tcase A(Int)\r\n\tcase B(Bool)\r\n\tcase C\r\n\tcase D\r\n}\r\n\r\nenum B {\r\n\tcase A\r\n\tcase B\r\n}\r\n\r\nfunc s(a: A, b: B) {\r\n\tswitch (a, b) {\r\n\t\tcase let (.A(i), .A):\r\n\t\t\tbreak\r\n\t\tcase let (.A(i), .B):\r\n\t\t\tbreak\r\n\r\n\t\tcase let (.B(boolean), b):\r\n\t\t\tbreak\r\n\r\n\t\tcase (.C, _), (.D, _):\r\n\t\t\tbreak\r\n\t}\r\n}\r\n\r\nUsing `swiftc switch.swift`\r\n\r\nExpected Results:\r\nCode compiles because the `switch` is exhaustive.\r\n\r\nActual Results:\r\nerror: switch must be exhaustive, consider adding a default clause\r\n\r\nRegression:\r\nThis doesnâ€™t seem to be solved in Swift 2.\r\n\r\nNotes:\r\nSwitching over 2 enums produces the same problem. Example: https://gist.github.com/NachoSoto/830d1c077be60143680e"
    email: hello@nachosoto.com
    modified: "2015-08-17T20:36:54.44763Z"
    number: "22312768"
    number_intvalue: 22312768
    originated: 08/17/2015
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 1.2
    reproducible: Always
    resolved: ""
    status: Open
    title: '[Swift 1.2] Incorrect "switch must be exhaustive" error with enum tuple'
