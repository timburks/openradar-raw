apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22206006"
    labels:
        datastore_id: "5009689079185408"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-08-09T21:37:41.6864Z"
    description: "Summary:\nFound by careful observation of SourceKitService’s flailing.\n\n\nSteps to Reproduce:\n1. This (ill-formed) program:\n\nstruct S<A> {\n\tfunc f() {\n\t\tif true {\n\t}\n}\n\nenum E {\n\tfunc f() -> E {\n\t\treturn .End\n\t}\n\tcase End\n}\n\n\nExpected Results:\nshould not crash the compiler\n\n\nActual Results:\nbut totally does:\n\nAssertion failed: ((type.isNull() || !type->is<PolymorphicFunctionType>()) && \"decl has polymorphic function type but no interface type\"), function getInterfaceType, file /Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-700.0.52.2/src/swift/lib/AST/Decl.cpp, line 1735.\n0  swift                    0x000000011194ebbb llvm::sys::PrintStackTrace(__sFILE*) + 43\n1  swift                    0x000000011194f2fb SignalHandler(int) + 379\n2  libsystem_platform.dylib 0x00007fff992d8eaa _sigtramp + 26\n3  libsystem_platform.dylib 0x00007fff502f3000 _sigtramp + 3070337392\n4  libsystem_c.dylib        0x00007fff9b3a33fb abort + 129\n5  libsystem_c.dylib        0x00007fff9b36aa44 basename + 0\n6  swift                    0x00000001100bf40b swift::ValueDecl::getInterfaceType() const + 523\n7  swift                    0x000000010ff18b05 swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::DeclRefExpr const*, swift::constraints::DependentTypeOpener*) + 485\n8  swift                    0x000000010ff1a14c swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) + 588\n9  swift                    0x000000010ff711b1 swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) + 993\n10 swift                    0x000000010ff16ebc swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) + 28\n11 swift                    0x000000010ff19e9b swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*, swift::constraints::OverloadChoice*) + 331\n12 swift                    0x000000010ff6f2a9 swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) + 8345\n13 swift                    0x000000010ff70e1b swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) + 75\n14 swift                    0x000000010ff76521 swift::constraints::ConstraintSystem::simplify() + 113\n15 swift                    0x000000010ff796a2 swift::constraints::ConstraintSystem::solveRec(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) + 50\n16 swift                    0x000000010ff7caa8 swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) + 5000\n17 swift                    0x000000010ff79a7e swift::constraints::ConstraintSystem::solveRec(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) + 1038\n18 swift                    0x000000010ff79460 swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) + 80\n19 swift                    0x000000010ffaaafb swift::TypeChecker::solveForExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*, swift::constraints::ConstraintSystem&, llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>) + 731\n20 swift                    0x000000010ffb0502 swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>, swift::ExprTypeCheckListener*) + 450\n21 swift                    0x000000011001526a swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 4154\n22 swift                    0x0000000110014369 swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 313\n23 swift                    0x0000000110013789 (anonymous namespace)::StmtChecker::typeCheckBody(swift::BraceStmt*&) + 25\n24 swift                    0x000000011001284f swift::TypeChecker::typeCheckFunctionBodyUntil(swift::FuncDecl*, swift::SourceLoc) + 415\n25 swift                    0x0000000110012661 swift::TypeChecker::typeCheckAbstractFunctionBodyUntil(swift::AbstractFunctionDecl*, swift::SourceLoc) + 49\n26 swift                    0x000000011001338a swift::TypeChecker::typeCheckAbstractFunctionBody(swift::AbstractFunctionDecl*) + 138\n27 swift                    0x000000010ff9867c typeCheckFunctionsAndExternalDecls(swift::TypeChecker&) + 220\n28 swift                    0x000000010ff994a9 swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int) + 1913\n29 swift                    0x000000010fd9fc28 swift::CompilerInstance::performSema() + 4152\n30 swift                    0x000000010f90f50c performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&) + 748\n31 swift                    0x000000010f90efc8 frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2728\n32 swift                    0x000000010f90b02f main + 2015\n33 libdyld.dylib            0x00007fff97a025ad start + 1\nStack dump:\n0.\tProgram arguments: /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -primary-file boom.swift -target x86_64-apple-darwin15.0.0 -enable-objc-interop -sdk /Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -color-diagnostics -module-name boom -o /var/folders/9y/f7n4rvx901nctm_5d16c1wm40000gn/T/boom-80bd38.o \n1.\tWhile type-checking 'f' at boom.swift:8:2\n2.\tWhile type-checking expression at [boom.swift:9:10 - line:9:11] RangeText=\".E\"\n<unknown>:0: error: unable to execute command: Abort trap: 6\n<unknown>:0: error: swift frontend command failed due to signal (use -v to see invocation)\n\n\nRegression:\nIf S is non-generic, it does not crash.\nIf E does not attempt to resolve a static symbol via .Blah syntax, it does not crash.\n\nNotes:\nN/A"
    email: rix.rob@gmail.com
    modified: "2015-08-09T21:37:41.68675Z"
    number: "22206006"
    number_intvalue: 22206006
    originated: 09-Aug-2015 05:37 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A176x)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2b5: crash typechecking ill-formed program with generic type’s method missing } before enum'
