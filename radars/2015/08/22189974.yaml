apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22189974"
    labels:
        datastore_id: "4624472556437504"
data:
    classification: Feature (New)
    created: "2015-08-07T17:25:54.45141Z"
    description: |-
        Summary:
        There is a feature in Swift 2 to escalate exceptions to fatal errors. I think it would be helpful to have a feature to downgrade exceptions to nil. For instance, the syntax could be:

          let x = try? foo()

        With the same semantics as:

          let x: T?
          do { let x = try foo() }
          catch { x = nil }

        This syntax would nicely parallel the try! syntax for escalating them to fatal errors, and could reduce the boiler plate when calling an exception-throwing method where the caller doesn’t care about the exception and doesn’t need the value if there’s an exception.

        Steps to Reproduce:

        Expected Results:

        Actual Results:

        Regression:

        Notes:
    email: john@brownleemail.com
    modified: "2015-08-07T17:25:54.45169Z"
    number: "22189974"
    number_intvalue: 22189974
    originated: 07-Aug-2015 01:25 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A176x)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode-beta (7A176x): Add Syntax In Swift To Return Nil On Exceptions'
