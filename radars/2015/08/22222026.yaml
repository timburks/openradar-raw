apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22222026"
    labels:
        datastore_id: "6185573815418880"
data:
    classification: Enhancement
    created: "2015-08-10T23:31:00.60957Z"
    description: |-
        NSObjectProtocol is more general than NSObject and isEqual and hash are defined in NSObjectProtocol. Logically, we should inherit NSObjectProtocol from Equatable and Hashable.

        Why not? Why instead extend NSObject to conform to Equatable and Hashable?

        The current design causes problems like this:

        if obj.delegate == self {
        Binary operator '==' cannot be applied to operands of type 'XXXDelegate' and 'XXXDelegate'
        because delegates are NSObjectProtocol not NSObject.
    email: an00na@gmail.com
    modified: "2015-08-10T23:31:00.60993Z"
    number: "22222026"
    number_intvalue: 22222026
    originated: 10-Aug-2015 06:30 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2 beta 5
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: It is better to inherit NSObjectProtocol from Equatable and Hashable than extend NSObject to conform to them
