apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22400367"
    labels:
        datastore_id: "4551431268859904"
data:
    classification: ""
    created: "2015-08-24T13:56:13.17209Z"
    description: "I am currently migrating a Swift 1.2 project over to Swift 2.0 and have encountered this compiler crash:\r\n\r\n‘Command failed due to signal: Abort trap: 6’\r\n\r\n`Assertion failed: ((getType()->isEqual(foundInherited->getType()) || foundInherited->getType()->isSuperclassOf(getType(), nullptr)) && \"inherited conformance does not match type\"), function getInheritedConformance, file /Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-700.0.52.2/src/swift/lib/AST/ProtocolConformance.cpp, line 467.\r\n0  swift                    0x0000000110601bbb llvm::sys::PrintStackTrace(__sFILE*) + 43\r\n1  swift                    0x00000001106022fb SignalHandler(int) + 379\r\n2  libsystem_platform.dylib 0x00007fff8e079f1a _sigtramp + 26\r\n3  swift                    0x000000010edd2186 swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const + 54\r\n4  libsystem_c.dylib        0x00007fff94891b53 abort + 129\r\n5  libsystem_c.dylib        0x00007fff94859c39 basename + 0\r\n6  swift                    0x000000010edba297 swift::ProtocolConformance::getInheritedConformance(swift::ProtocolDecl*) const + 1319\r\n7  swift                    0x000000010edc7f6f swift::Substitution::subst(swift::ModuleDecl*, llvm::ArrayRef<swift::Substitution>, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*>, llvm::detail::DenseMapPair<swift::TypeBase*, swift::Type> >&, llvm::DenseMap<swift::ArchetypeType*, llvm::ArrayRef<swift::ProtocolConformance*>, llvm::DenseMapInfo<swift::ArchetypeType*>, llvm::detail::DenseMapPair<swift::ArchetypeType*, llvm::ArrayRef<swift::ProtocolConformance*> > >&) const + 1375\r\n8  swift                    0x000000010edc78f8 swift::Substitution::subst(swift::ModuleDecl*, swift::GenericParamList*, llvm::ArrayRef<swift::Substitution>) const + 1512\r\n9  swift                    0x000000010ead094a swift::TypeSubstCloner<swift::GenericCloner>::visitWitnessMethodInst(swift::WitnessMethodInst*) + 90\r\n10 swift                    0x000000010eacc77b swift::SILCloner<swift::GenericCloner>::visitSILBasicBlock(swift::SILBasicBlock*) + 75\r\n11 swift                    0x000000010eacc0ac swift::GenericCloner::populateCloned() + 396\r\n12 swift                    0x000000010eadc102 swift::GenericCloner::cloneFunction(swift::SILFunction*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*>, llvm::detail::DenseMapPair<swift::TypeBase*, swift::Type> >&, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*>, llvm::detail::DenseMapPair<swift::TypeBase*, swift::Type> >&, llvm::StringRef, swift::ApplySite, std::__1::function<void (swift::SILInstruction*, swift::SILInstruction*)>) + 274\r\n13 swift                    0x000000010eadad45 swift::trySpecializeApplyOfGeneric(swift::ApplySite, swift::SILFunction*&, llvm::SmallVectorImpl<std::__1::pair<swift::FullApplySite, swift::FullApplySite> >&) + 2789\r\n14 swift                    0x000000010e8e8633 (anonymous namespace)::SILGenericSpecializerTransform::run() + 707\r\n15 swift                    0x000000010e8c2dfc swift::SILPassManager::runOneIteration() + 2060\r\n16 swift                    0x000000010e8bf985 swift::runSILOptimizationPasses(swift::SILModule&) + 549\r\n17 swift                    0x000000010e5c53a8 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&) + 12680\r\n18 swift                    0x000000010e5c1fc8 frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2728\r\n19 swift                    0x000000010e5be02f main + 2015\r\n20 libdyld.dylib            0x00007fff8f2735c9 start + 1\r\n….\r\n1.\tWhile running SILModuleTransform \"Generic Specialization”.`\r\n\r\nI have yet to be able to track down what is causing the compiler to crash here. I will update the issue if I discover more. Full stack trace attached.\r\n\r\nSteps to Reproduce:\r\n1. Hard clean \r\n2. Compiler project\r\n\r\nExpected Results:\r\nEither the project compiles or a compilation error is provided\r\n\r\nActual Results:\r\nThe compiler exits with `Command failed due to signal: Abort trap: 6`\r\n\r\nVersion:\r\nXcode 7.0 beta 5 \r\nOS X 10.10.4\r\n\r\nNotes:\r\nFull stack trace attached\r\n\r\nConfiguration:\r\nThis happens on all configurations, against all simulators & device, in XCode 7 beta 5.\r\n\r\nAttachments:\r\n'CommandFailedDueToSignal.log' was successfully uploaded."
    email: etoop@mozilla.com
    modified: "2015-08-24T13:56:13.17249Z"
    number: "22400367"
    number_intvalue: 22400367
    originated: 24/08/2015
    parent_number: '&{NULL_VALUE}'
    product: XCode
    product_version: 7.0 Beta 5
    reproducible: Always
    resolved: ""
    status: Open
    title: XCode 7 beta 5 - Compiler Crashes 'While running SILModuleTransform "Generic Specialization".'
