apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21887757"
    labels:
        datastore_id: "4815526492635136"
data:
    classification: Enhancement
    created: "2015-07-18T14:18:38.87088Z"
    description: "Summary:\n\nPrototyping constraints can be introspected (and removed) in UIView but not in NSView. Removing prototyping constraints is essential when you have a custom component that you want people to be able to position visually (intuitively) in IB but where you want to create the constraints yourself (e.g., to align it in relation to another component).\n\nSteps to Reproduce:\n\n1. On an iOS project:\n\nRun this code on a view (UIView) that has subviews that have been instantiated in IB but have not had any explicit (user) constraints applied to them:\n\n  println(self.constraints())\n\n2. On a similar Cocoa project with a similar view (but NSView, this time):\n\n  println(self.constraints)\n\nExpected results:\n\nBoth output should show the prototyping constraints.\n\nActual results: \n\nOnly the UIView example shows the prototyping constraints. \n\nNotes:\n\nSee http://www.cocoanetics.com/2015/06/proportional-layout-with-swift/ for a discussion of why it is important that we have the option to remove prototyping constraints. Not being able to do that on Cocoa makes it more difficult to work with IB and constraints."
    email: aralbalkan@gmail.com
    modified: "2015-07-18T14:18:38.87112Z"
    number: "21887757"
    number_intvalue: 21887757
    originated: 18-Jul-2015 03:18 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.4 (6E35b)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode 6.4: Feature parity between UIView and NSView on introspectability of Interface Builder prototyping constraints.'
