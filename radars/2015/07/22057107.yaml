apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22057107"
    labels:
        datastore_id: "6445085839327232"
data:
    classification: Enhancement
    created: "2015-07-29T19:51:41.16093Z"
    description: |-
        This verges on the hackish and ad-hoc, but it would be so freakin’ useful…

        I find, just as a matter of practical experience, that I’m constantly writing  utility routines of the following form:

        enum MyTerm { … }

        extension MyTerm {
            var description: String {
                switch self {
                    case .Script:    return "script"
                    case .Fraction:  return "fraction"
                    case .Exponent:  return "exponent"
                }
            }
        }

        I see this all the time in other people’s code, too, so I know it’s not just me.

        Enums with a raw-value type of String automatically use their case name as the raw value, which is helpful. But it doesn’t cover situations where you want to use the raw value for some other purpose, or situations where cases may have arguments of their own (since no raw values are then allowed).

        It would be very helpful if Swift supplied a caseName property for all enum instances.
    email: garth@garthsnyder.com
    modified: "2015-07-29T19:51:41.16113Z"
    number: "22057107"
    number_intvalue: 22057107
    originated: 29-Jul-2015 12:51 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: 'Swift: text of enum value names should be easily accessible'
