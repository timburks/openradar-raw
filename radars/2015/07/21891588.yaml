apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21891588"
    labels:
        datastore_id: "4835576909922304"
data:
    classification: Serious Bug
    created: "2015-07-19T15:12:54.00903Z"
    description: "Summary:\r\nWhen Xcode copies the standard Swift libraries into an app bundle, it signs the libraries with the pertinent code signing identity, typically either a Mac App Store or a Developer ID identity.\r\n\r\nHowever, it neglects to apply the \"Other Code-Signing Flags\" options defined in the project or target by the OTHER_CODE_SIGN_FLAGS build setting.\r\n\r\nThis is problematic because some projects may have good reason to impose specific code signing flags on all signed libraries that are bundled with an app.\r\n\r\nA practical example of a workflow that this breaks is for Developer ID signed apps that are built with code signing flags that specify \"--timestamp=none\" to disable the timestamp server dependency. I define this option specifically for Debug builds so that I can have a faster build and so that I can build and run my projects even when offline:\r\n\r\nhttp://indiestack.com/2014/01/timestamp-disservice/\r\n\r\nSince the Swift libraries phase ignores the OTHER_CODE_SIGN_FLAGS, there is apparently no way to build a Developer-ID signed Swift app unless you are both online and the timestamp server is responding reliably.\r\n\r\nSteps to Reproduce:\r\n\r\n\r\nExpected Results:\r\n\r\n\r\nActual Results:\r\n\r\n\r\nVersion:\r\nXcode 6.4 or 7.x\r\n\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: jalkut@gmail.com
    modified: "2015-07-19T15:12:54.00941Z"
    number: "21891588"
    number_intvalue: 21891588
    originated: 19-Jul-2015 10:56 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "6.4"
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift standard libraries copy phase ignores "Other Code-Signing Flags"
