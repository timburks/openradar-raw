apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22064783"
    labels:
        datastore_id: "5387029235892224"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-07-30T01:52:25.2893Z"
    description: |-
        Summary:
        So, yâ€™all use recursion too!

        Steps to Reproduce:
        This code:
        protocol A {
        	typealias O : B
        }
        protocol B {
        	typealias O : A
        }

        Expected Results:
        should not crash swiftc

        Actual Results:
        but totally does:
        510 swift                         	0x0000000103a1c8bf swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*, swift::RequirementSource) + 655
        511 swift                         	0x0000000103a1c8bf swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*, swift::RequirementSource) + 655


        Regression:
        N/A

        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2015-07-30T01:52:25.28964Z"
    number: "22064783"
    number_intvalue: 22064783
    originated: 29-Jul-2015 09:52 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A165t)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2.0b4: Mutually recursive protocols cause swiftc to infinite loop and crash'
