apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22064859"
    labels:
        datastore_id: "4838817563410432"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-07-30T01:59:49.54781Z"
    description: "Summary:\nTrying to work around rdar://22064783, swiftc died another death instead.\n\nSteps to Reproduce:\nThis code:\nprotocol A: _A {\n\ttypealias O : B\n}\n\nprotocol _A {\n\ttypealias O\n\tinit(_ : O)\n\tvar out: O { get }\n}\n\nprotocol B {\n\ttypealias O : _A\n}\n\nenum Expr<T>: B {\n\ttypealias O = T\n\tcase Null\n\tfunc map<U>(transform: T -> U) -> Expr<U> { return .Null }\n}\n\nfunc out<Fix: A>(v: Fix) -> Fix.O { return v.out }\n\nfunc cata<T, Fix: A where Fix.O == Expr<Fix>>(f: Expr<T> -> T)(_ term: Fix) -> T {\n\treturn f({ $0.map(cata(f)) }(out(term)))\n}\n\n\nExpected Results:\nshould not crash swiftc\n\nActual Results:\nbut totally does:\nrob@Resonance ~/Desktop> swiftc -v boom.swift\nApple Swift version 2.0 (swiftlang-700.0.47.4 clang-700.0.59.1)\nTarget: x86_64-apple-darwin14.4.0\n/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -primary-file boom.swift -target x86_64-apple-darwin14.4.0 -enable-objc-interop -color-diagnostics -module-name boom -o /var/folders/9y/f7n4rvx901nctm_5d16c1wm40000gn/T/boom-57cfd6.o\nboom.swift:23:33: error: same-type constraint type '<<error type>>' does not conform to required protocol '_A'\nfunc cata<T, Fix: A where Fix.O == Expr<Fix>>(f: Expr<T> -> T)(_ term: Fix) -> T {\n                                ^\nboom.swift:23:33: error: same-type constraint type '<<error type>>' does not conform to required protocol '_A'\nfunc cata<T, Fix: A where Fix.O == Expr<Fix>>(f: Expr<T> -> T)(_ term: Fix) -> T {\n                                ^\nboom.swift:15:6: error: type 'Expr<T>' does not conform to protocol 'B'\nenum Expr<T>: B {\n     ^\nboom.swift:12:12: note: protocol requires nested type 'O'\n        typealias O : _A\n                  ^\nboom.swift:16:12: note: possibly intended match 'O' does not conform to '_A'\n        typealias O = T\n                  ^\nAssertion failed: ((conforms || firstArchetype->getIsRecursive() || isOpenedAnyObject(replacement) || replacement->is<GenericTypeParamType>()) && \"Constraint system missed a conformance?\"), function computeSubstitutions, file /Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-700.0.47.4/src/swift/lib/Sema/CSApply.cpp, line 145.\n0  swift                    0x000000010b876b8b llvm::sys::PrintStackTrace(__sFILE*) + 43\n1  swift                    0x000000010b8772cb SignalHandler(int) + 379\n2  libsystem_platform.dylib 0x00007fff86e08f1a _sigtramp + 26\n3  libc++.1.dylib           0x00007fff8b20043e operator new(unsigned long) + 30\n4  libsystem_c.dylib        0x00007fff905e3b53 abort + 129\n5  libsystem_c.dylib        0x00007fff905abc39 basename + 0\n6  swift                    0x0000000109e567e5 swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, swift::constraints::ConstraintLocator*, llvm::SmallVectorImpl<swift::Substitution>&) const + 2117\n7  swift                    0x0000000109e6c7fd (anonymous namespace)::ExprRewriter::buildDeclRef(swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, bool, swift::AccessSemantics) + 557\n8  swift                    0x0000000109e68839 swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) + 11129\n9  swift                    0x0000000109e628c6 (anonymous namespace)::ExprWalker::walkToExprPost(swift::Expr*) + 22\n10 swift                    0x0000000109fa96bc (anonymous namespace)::Traversal::visitApplyExpr(swift::ApplyExpr*) + 76\n11 swift                    0x0000000109fa78eb (anonymous namespace)::Traversal::visit(swift::Expr*) + 219\n12 swift                    0x0000000109fa7890 (anonymous namespace)::Traversal::visit(swift::Expr*) + 128\n13 swift                    0x0000000109fa96f0 (anonymous namespace)::Traversal::visitApplyExpr(swift::ApplyExpr*) + 128\n14 swift                    0x0000000109fa78eb (anonymous namespace)::Traversal::visit(swift::Expr*) + 219\n15 swift                    0x0000000109fa7890 (anonymous namespace)::Traversal::visit(swift::Expr*) + 128\n16 swift                    0x0000000109fa96f0 (anonymous namespace)::Traversal::visitApplyExpr(swift::ApplyExpr*) + 128\n17 swift                    0x0000000109fa78eb (anonymous namespace)::Traversal::visit(swift::Expr*) + 219\n18 swift                    0x0000000109fa6cd5 swift::Expr::walk(swift::ASTWalker&) + 53\n19 swift                    0x0000000109e56d94 swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*, swift::Type, bool, bool) + 484\n20 swift                    0x0000000109ee40af swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) + 399\n21 swift                    0x0000000109f492f2 swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 4242\n22 swift                    0x0000000109f48399 swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 313\n23 swift                    0x0000000109f47769 (anonymous namespace)::StmtChecker::typeCheckBody(swift::BraceStmt*&) + 25\n24 swift                    0x0000000109f4682f swift::TypeChecker::typeCheckFunctionBodyUntil(swift::FuncDecl*, swift::SourceLoc) + 415\n25 swift                    0x0000000109f46641 swift::TypeChecker::typeCheckAbstractFunctionBodyUntil(swift::AbstractFunctionDecl*, swift::SourceLoc) + 49\n26 swift                    0x0000000109f4736a swift::TypeChecker::typeCheckAbstractFunctionBody(swift::AbstractFunctionDecl*) + 138\n27 swift                    0x0000000109ecc258 typeCheckFunctionsAndExternalDecls(swift::TypeChecker&) + 200\n28 swift                    0x0000000109eccf53 swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int) + 1731\n29 swift                    0x0000000109cd66d5 swift::CompilerInstance::performSema() + 4149\n30 swift                    0x000000010985a9d5 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&) + 725\n31 swift                    0x000000010985a4e3 frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2627\n32 swift                    0x00000001098565af main + 2015\n33 libdyld.dylib            0x00007fff86cb45c9 start + 1\n34 libdyld.dylib            0x000000000000000d start + 2033498693\nStack dump:\n0.\tProgram arguments: /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -primary-file boom.swift -target x86_64-apple-darwin14.4.0 -enable-objc-interop -color-diagnostics -module-name boom -o /var/folders/9y/f7n4rvx901nctm_5d16c1wm40000gn/T/boom-57cfd6.o \n1.\tWhile type-checking 'cata' at boom.swift:23:1\n2.\tWhile type-checking expression at [boom.swift:24:9 - line:24:41] RangeText=\"f({ $0.map(cata(f)) }(out(term)))\"\n<unknown>:0: error: unable to execute command: Abort trap: 6\n<unknown>:0: error: swift frontend command failed due to signal (use -v to see invocation)\n\n\nRegression:\nN/A\n\nNotes:\nN/A"
    email: rix.rob@gmail.com
    modified: "2015-07-30T01:59:49.54813Z"
    number: "22064859"
    number_intvalue: 22064859
    originated: 29-Jul-2015 09:59 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A165t)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2b4: “Constraint system missed a conformance?” swiftc crash working around mutual protocol recursion crash'
