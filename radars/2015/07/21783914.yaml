apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21783914"
    labels:
        datastore_id: "4977567018778624"
data:
    classification: Other Bug
    created: "2015-07-12T01:51:03.92313Z"
    description: |-
        Summary:
        Protocols can provide internal labels for method/constructor parameters, like the init in StringLiteralConvertible:

        init(stringLiteral value: Self.StringLiteralType)

        That’s pretty weird. It’s not actually a requirement, so what’s it doing in a protocol at all?

        I’d rather just have init(stringLiteral: Self.StringLiteralType) and add an internal label myself if I want one. Particularly so since `value` is less meaningful than the external label.


        Steps to Reproduce:
        N/A

        Expected Results:
        N/A

        Actual Results:
        N/A

        Regression:
        N/A

        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2015-07-12T01:51:03.92335Z"
    number: "21783914"
    number_intvalue: 21783914
    originated: 11-Jul-2015 09:50 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A152u)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2b3: It’s kinda weird that protocols can provide internal labels for parameters'
