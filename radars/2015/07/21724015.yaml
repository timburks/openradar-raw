apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21724015"
    labels:
        datastore_id: "5024533459238912"
data:
    classification: ""
    created: "2015-07-08T14:14:03.04418Z"
    description: "Summary:\r\nIf do not specify a minimum deployment target, iOS applications are not possible to link with the static library or framework.\r\n\r\nThis means that platform-independent code is not able to link with both iOS and watchOS. So we cannot make fat binary that works on both iOS and watch OS.\r\n\r\nIn Xcode 6, iOS applications were able to link even if there is no specified minimum deployment target by the `-mios-version-min = * version *` or `-miphoneos-version-min = * version *`.\r\n\r\nThis means that platform-independent code was able to link with both iOS and MacOS X in Xcode 6.\r\n\r\nHowever, in Xcode 7, the library does not specify the minimum deployment target that it was no longer able to link with iOS apps due to following error:\r\n\r\n```\r\nld: in /Users/katsumi/Desktop/Test/libtest.a(test-iPhoneSimulator.o), building for watchOS simulator, but linking in object file built for OSX, for architecture i386\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nSteps to Reproduce:\r\n1. Create test.hpp and test.cpp, then write following code:\r\n\r\n```\r\n// test.hpp\r\n#ifndef test_cpp\r\n#define test_cpp\r\n\r\n#include <stdio.h>\r\n\r\nclass Sample {\r\npublic:\r\n    void test();\r\n};\r\n\r\n#endif /* test_cpp */\r\n```\r\n\r\n```\r\n// test.cpp\r\n#include \"test.hpp\"\r\n#include <stdio.h>\r\n\r\nvoid Sample::test(){\r\n    printf(\"Sample::test was called\\n\");\r\n}\r\n```\r\n\r\n2. Compile the above source file with following command:\r\n\r\n```\r\nclang -O3 -DNDEBUG -pthread -std=c++11 -I.. -Wall -Wextra -pedantic -DREALM_HAVE_CONFIG -stdlib=libc++ -arch armv7 -arch armv7s -arch arm64 -mstrict-align -isysroot '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.4.sdk' -MMD -MP -c test.cpp -o test-iPhoneOS.o\r\n\r\nclang -O3 -DNDEBUG -pthread -std=c++11 -I.. -Wall -Wextra -pedantic -DREALM_HAVE_CONFIG -stdlib=libc++ -arch i386 -arch x86_64 -isysroot '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator8.4.sdk' -MMD -MP -c test.cpp -o test-iPhoneSimulator.o\r\n```\r\n\r\nThis makes `test-iPhoneOS.o` and `test-iPhoneSimulator.o`\r\n\r\n3. Create static libraries for each architecture with following command:\r\n\r\n```\r\nar csr libtest-iPhoneOS.a test-iPhoneOS.o\r\nar csr libtest-iPhoneSimulator.a test-iPhoneSimulator.o\r\n```\r\n\r\nThis makes `libtest-iPhoneOS.a` and `libtest-iPhoneSimulator.a`\r\n\r\n4. Create fat binary with following command:\r\n\r\n```\r\nxcrun lipo libtest-*.a -create -output libtest.a\r\n```\r\n\r\n5. Make iOS application project with Xcode 7, and configure build settings to link with the above libraries\r\n\r\nIf you try to build for the simulator will fail with the error below:\r\n\r\n```\r\nld: in /Users/katsumi/Desktop/LinkTest/libtest.a(test-iPhoneSimulator.o), building for iOS simulator, but linking in object file built for OSX, for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\n\r\nExpected Results:\r\nTo be able to link, it can run without problems.\r\n\r\nActual Results:\r\nIt fails to link with the error below:\r\n\r\n```\r\nld: in /Users/katsumi/Desktop/LinkTest/libtest.a(test-iPhoneSimulator.o), building for iOS simulator, but linking in object file built for OSX, for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nVersion:\r\nOS X 10.10.3 (14D136), Version 7.0 beta (7A121l)\r\nOS X 10.11 (15A204h), Version 7.0 beta (7A120f)\r\n\r\nNotes:\r\nIn Xcode 6, the above library can link with applications for iOS simulator without error. It can link even with the application for OS X because it has same architecture and uses only platform independent API.\r\n\r\nOur goal is to make the Fat binary that runs on both iOS and watchOS. But it is impossible for this problem. \r\n\r\nConfiguration:\r\nMacBookPro10,1, 16GB RAM\r\nMacBook8,1, 8GB RAM\r\n\r\nAttachments:"
    email: kishikawakatsumi@gmail.com
    modified: "2015-07-13T09:18:10.05548Z"
    number: "21724015"
    number_intvalue: 21724015
    originated: 08-Jul-2015 11:12 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Closed
    title: iOS applications cannot link with the static library or framework without specifying a minimum deployment target
