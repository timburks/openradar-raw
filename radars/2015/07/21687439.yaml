apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21687439"
    labels:
        datastore_id: "4985925025136640"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-07-06T18:27:35.56734Z"
    description: "Summary:\nGiven an array \n\tvar points: [(x: Double, y: Double)] = []\n\nIf you attempt to concatenate it with the literal array [(1.0, 1.0)]\n\nThe compiler will behave differently depending on the optimization level.\n\n\nSteps to Reproduce:\n\tvar points: [(x: Double, y: Double)] = []\n\tpoints += [(1.0, 1.0)]\n\nExpected Results:\n\tCompiler will behave the same way WRT syntax regardless of optimization settings\n\nActual Results:\n\tCompiler will crash when optimizations are turned on.\n\tCompiler is able to lift the type (Double, Double) to the type (x: Double, y: Double) when optimizations are turned off\n\nRegression:\n\tThe issue is present in the version of swiftc shipping with Xcode 6.4 (swiftlang-602.0.53.1 clang-602.0.53)\n\tThe issue is also present in the version of swiftc that ships with Xcode 7.0 Beta 2 \n\nNotes:"
    email: tapikz@gmail.com
    modified: "2015-07-06T18:27:35.56757Z"
    number: "21687439"
    number_intvalue: 21687439
    originated: 06-Jul-2015 02:27 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.4 (6E35b)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode 6.4: swiftc when concatinating arrays of tuples will behave diferently depending on optimization settings'
