apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21815996"
    labels:
        datastore_id: "5165794128297984"
data:
    classification: UI/Usability
    created: "2015-07-14T17:23:01.57576Z"
    description: "Summary:\nUsing Cocoa Layout, there is a lot of data but not much exposed for finding useful information to help debug.\n\nSteps to Reproduce:\n1. Profile app with Cocoa Layout Instrument.\n2. Make changes in app that trigger layout changes.\n3. Observe _no indication_ where end of recording trace is.\n4. Observe visual trace is very light and hard to see.\n5. Stop recording. Look at data.\n6. Observe too many events that I don’t care about, but lack of obvious ways to filter.\n7. Type “Constant Modified” (or another Event type from results) into search bar.\n8. Type “H:” to get only horizontal constraint changes.\n9. Observe that search bar for Event List -> Cocoa Layout does *not* resize or get wider, despite the large screen it is currently on. Also it is not possible to tab between the various search tokens / terms in the search field.\n10. Observe that it is still difficult to narrow in on the right events, even with filtering the timeline (inspection range) on the instrument trace above.\n11. Find the object of interest’s memory address.\n12. Add that to the search filter. \n13. Observe that there is no context around that layout change - instead, you now *only* see events surrounding that.\n14. Assume the layout also has a table or collection view, unrelated to what you are working on. Note that there are a lot of calls to them in the trace.\n15. Attempt to remove calls involving those classes from the results via a negative search (“-MyItemCell”). Note this does not work.\n\nExpected Results:\nOn step 3, should see a running line or other visual indication that trace is recording, and where the end of the trace is. This lets me space actions out by ~5 seconds (for example) so I can easily later inspect the various ranges. \nOn 4, good contrast so I can actually see the data.\nOn 7, there are a known and small number of event types. Should be able to select that column and selectively add or remove certain events, to quickly filter to what I want there. Or there could be a toolbar or sidebar that makes it easier to move through those.\nOn 8, the Constraints table view column is very predictable. Ideally that column would get parsed and it would easy to select certain objects, or certain types of constraints. Even better, if there were some way to visually see what some objects corresponded to (similar to UI instrument) then instead of a memory address I could name certain objects.\nOn 9, *the search field should resize as wide as possible!*\nOn 10, smarter aided filtering/searching across all of the columns.\nOn 13, in addition to filtering the list below it would be nice to have a highlight mode, so I could see the matching rows but within context of the surrounding calls.\nOn 15, should be able to build a filter by removing things I don’t care about. Maybe I don’t care about “Constant Modified” events, or events on certain classes, or autoresizing mask constraints. \n\nActual Results:\nSee Steps To R.\n\nRegression:\nVisual: the instrument trace is much harder to see."
    email: random4444@gmail.com
    modified: "2015-07-14T17:23:01.57599Z"
    number: "21815996"
    number_intvalue: 21815996
    originated: 14-Jul-2015 01:22 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Instruments 7.0 (58122.3)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Instruments 7.0: Cocoa Layout needs better visibility and filtering'
