apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21941505"
    labels:
        datastore_id: "5610952993013760"
data:
    classification: Other Bug
    created: "2015-07-22T15:33:28.81981Z"
    description: "Summary:\r\nThe following code should be legal in Swift 2, but fails to compile.\r\n\r\nprotocol AType {\r\n    func f() -> Self\r\n}\r\n\r\nprotocol BType {\r\n    typealias A = AType\r\n    \r\n    func foo() -> A\r\n    func bar() -> A\r\n}\r\n\r\nextension BType {\r\n    func bar() -> A {\r\n        return foo().f()\r\n    }\r\n}\r\n\r\nSteps to Reproduce:\r\n\r\n\r\nExpected Results:\r\nThe code compiles.\r\n\r\nActual Results:\r\nThe code does not compile, complaining with \"Cannot invoke 'f' with no arguments\".\r\n\r\nVersion:\r\nXcode 7 beta 4\r\n\r\nNotes:\r\nChanging the line `typealias A = AType` to `typealias A: AType` makes it successfully compile."
    email: matteo.battaglio@gmail.com
    modified: "2015-07-22T15:33:28.82004Z"
    number: "21941505"
    number_intvalue: 21941505
    originated: 2015/07/22
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7 beta 4
    reproducible: Always
    resolved: ""
    status: Open
    title: Protocol extension with function returning its associated type fails to compile when its associated type is typealiased using `=`
