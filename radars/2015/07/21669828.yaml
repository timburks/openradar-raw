apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21669828"
    labels:
        datastore_id: "6239178664706048"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-07-03T14:09:55.92664Z"
    description: |-
        Summary:
        Subject summarizes symptoms sufficiently.

        Steps to Reproduce:
        This code:
        struct S<T> {
        	func f() -> String {
        		var a: Int { return 0 }
        		return "\(a)"
        	}
        }

        Expected Results:
        should not crash swiftc

        Actual Results:
        but totally does:

        Assertion failed: (isa<X>(Val) && "cast<Ty>() argument of incompatible type!"), function cast, file /Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-700.0.42.3/src/llvm/include/llvm/Support/Casting.h, line 237.

        Regression:
        - Doesn’t crash if the var isn’t inside a function/computed var.
        - Doesn’t crash if the type isn’t generic.
        - Does crash if you remove the return statement from the computed var (i.e. var a: Int { 0 })

        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2015-07-03T14:09:55.92689Z"
    number: "21669828"
    number_intvalue: 21669828
    originated: 03-Jul-2015 10:09 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A121l)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2b2: Compiler crashes on computed var in method of generic struct'
