apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21951545"
    labels:
        datastore_id: "6620666350534656"
data:
    classification: ""
    created: "2015-07-22T23:17:55.93466Z"
    description: "Summary:\r\nI'm writing a simple predicate using closures:\r\n\r\nlet isSpace:Character -> Bool = { c in\r\n    c == \" \" || (c == \"\\n\" || (c == \"\\r\" || c == \"\\t\")) }\r\n\r\nAfter initiating a build, the compiler hangs for a few seconds and then warns:\r\n\r\nTokenizer.swift:98:33: Expression was too complex to be solved in reasonable time; consider breaking up the expression into distinct sub-expressions\r\n\r\nIf I remove two of the subexpressions its okay. The third one tends to break it.\r\n\r\nSteps to Reproduce:\r\n1. Start a new project and choose console app\r\n2. In Main add the line above so that main.swift looks like\r\n\r\nimport Foundation\r\n\r\nprint(\"Hello, World!\")\r\n\r\nlet isSpace:Character -> Bool = { c in\r\n    c == \" \" || (c == \"\\n\" || (c == \"\\r\" || c == \"\\t\")) }\r\n\r\nI get the warning.\r\n\r\nI can work around this by adding explicitly types\r\n\r\nlet isSpace:Character -> Bool = { (c:Character) -> Bool in\r\n    c == \" \" || c == \"\\n\" || c == \"\\r\" || c == \"\\t\" }\r\n\r\n\r\nExpected Results:\r\n\r\n\r\nActual Results:\r\n\r\n\r\nVersion:\r\nXcode 7 beta 4 (7a165t)\r\nOS X 10.10.4\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nAs far as I know it's reproducible in every code file.\r\n\r\nAttachments:"
    email: michaelgwelch@gmail.com
    modified: "2017-10-02T12:42:14.19821Z"
    number: "21951545"
    number_intvalue: 21951545
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: XCode
    product_version: ""
    reproducible: ""
    resolved: ""
    status: DUPLICATE OF 19836070 OPEN
    title: Expression was too complex to be solved in reasonable time
