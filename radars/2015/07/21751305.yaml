apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21751305"
    labels:
        datastore_id: "4533910755082240"
data:
    classification: ""
    created: "2015-07-09T19:25:04.36546Z"
    description: "Summary:\r\nMistakingly implementing a protocol using a generic implementation rather than the protocol parameter specified in the protocol causes a segfault 11 error. This scenario is common since generic protocol parameters aren't supported in some scenarios. The solution is to change from the generic version of the function/method and explicitly label the parameter type to the protocol itself\r\n\r\nSteps to Reproduce:\r\nAttempt to compile this snippet into Xcode:\r\n\r\nprotocol Thing {\r\n    var name: String { get }\r\n}\r\n \r\nprotocol UsingThing {\r\n    func doSomething(with: Thing)\r\n}\r\n \r\nstruct Test: UsingThing {\r\n    func doSomething<T: Thing>(thing: T) {\r\n        \r\n    }\r\n}\r\n\r\nExpected Results:\r\nExpected this compile to fail with an error message telling me the implementation of the function in the struct is specified incorrectly, and should point me to the protocol for reference\r\n\r\nActual Results:\r\nSegfault 11\r\nSee attached Xcode Playground crashlog\r\n\r\nVersion:\r\nXcode 6.4 (6E35b)\r\nOS X 10.10.4\r\n\r\nNotes:\r\nWorkaround: Find all instances of improper use of method and correct usage.\r\n\r\nConfiguration:\r\nXcode Playground\r\n\r\nAttachments:\r\n'com.apple.dt.Xcode.Playground_2015-07-09-131337_honolulu.crash' was successfully uploaded."
    email: saul@casademora.com
    modified: "2015-07-09T19:25:04.36578Z"
    number: "21751305"
    number_intvalue: 21751305
    originated: "2015-7-9"
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "6.4"
    reproducible: ""
    resolved: ""
    status: Open
    title: Implement a method incorrectly by using generic rather than protocol parameter crashes clang compiler
