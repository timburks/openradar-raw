apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21795731"
    labels:
        datastore_id: "6671544533123072"
data:
    classification: Enhancement
    created: "2015-07-13T17:42:46.67951Z"
    description: "Summary:\nWhen a user goes from an app’s webpage to installing the app for the first time, it is very useful to be able to seamlessly transition their experience over to the app. The user experience for this can be much more magical if the iOS app could access (and even set) HTTP cookies from/on its associated domains. I want a NSHTTPCookieStorage to have:\n\n- (NSHTTPCookieStorage *) cookieStorageForDomain:(NSString *)domain;\n\nSteps to Reproduce:\n1) On your iPhone/iPad, sign up for or log in to a new service on a website (say Tumblr, Pinterest, Amazon, Slack), \n2) Now install the related app and run it.\n\nExpected Results:\nI should be able to see a “Continue as [your name]” button, or perhaps just be magically authenticated / in the same place I left off\n\nActual Results:\nI’m presented with a login or signup screen in the iOS app, even though I’m signed in to the same service in Safari.\n\nNotes:\nSmart App Banners could help here, but it happens too late; the user would have to go *back* to the web page and tap “Open” to try and continue their experience.\n\nShared Web Credentials obviously can solve the authentication part, but it requires the user to actually signup/login, and for them to agree to save their credentials. What if the user did some stuff on the webpage, then decided to get the app, but hadn’t actually signed up or logged in? Often, when a new user is invited to a service, they receive a link to their email or SMS that takes them to the associated app domain, but with some magic ID in the url (that sets some cookie) that identifies who they are to the webpage, so that the webpage can tailor the new user experience to just that person. It would be amazing to be able to take advantage of that from our iOS app.\n\nIt is possible to use Safari View Controller in a “hidden” way with a custom URL that performs a redirect back to our app with our cookies packaged into the URL, but I suspect Apple would not be too happy with all of us using hidden Safari View Controllers to achieve this. Since we have already *safely* associated our domains to our iOS app(s), it should be possible to at least peek at the cookies stored for that domain!"
    email: rsattar@gmail.com
    modified: "2015-07-13T17:42:46.67983Z"
    number: "21795731"
    number_intvalue: 21795731
    originated: 13-Jul-2015 10:42 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "9.0"
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: If associated domains are enabled on iOS, allow NSHTTPCookieStorage to get/set domain cookies
