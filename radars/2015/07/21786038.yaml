apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21786038"
    labels:
        datastore_id: "4953136707928064"
data:
    classification: Enhancement
    created: "2015-07-12T18:01:57.79181Z"
    description: |-
        Summary:
        When calling a rethrowing function with an inline closure, it always assumes that the closure can throw.

        Steps to Reproduce:
        1. Create a method that takes in a closure and rethrows any errors from that closure.
        2. Call that method with a simple inline closure that does not throw any errors.

        Expected Results:
        The code should compile and not require any error handling.

        Actual Results:
        The compiler requires that the call to the rethrowing method be enclosed in a do-catch block, or that the impossible errors be handled in some other way.

        Regression:

        Notes:
        This only seems to affect inline closures. If you take the same closure code and store it in a local variable, and then pass that variable to the rethrowing function, it correctly determines that the call cannot throw.
        Iâ€™ve attached a project that demonstrates the issue.
    email: john@brownleemail.com
    modified: "2015-07-12T18:01:57.79204Z"
    number: "21786038"
    number_intvalue: 21786038
    originated: 12-Jul-2015 02:01 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A152u)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode-beta (7A152u): Rethrowing Functions in Swift Should Detect Whether Inline Closures Throw'
