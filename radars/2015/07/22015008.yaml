apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22015008"
    labels:
        datastore_id: "4800619634229248"
data:
    classification: ""
    created: "2015-07-27T19:13:48.26455Z"
    description: "Summary:\r\nIn an application using MultipeerConnectivity, there is the option to use certificate authentication as part of the optional encrypted transports.\r\n\r\nHowever, after extensive searching, I can find no way to reasonably generate the SecIdentityRef (signed x.509 certificate and corresponding private key). There definitely isn't anything in the MultipeerConnectivity framework, as far as I can tell there's nothing in the Security framework, OpenSSL/CDSA are either deprecated, or not on iOS, or both.\r\n\r\nI'm not sure how other apps are handling this, but I am forced to assume that they are either ignoring security entirely, or shipping keys/certs in their app bundle (which is, effectively, ignoring security entirely), or are using some kind of cloud service to generate certificates/keys for them (which is also pretty much disregarding security entirely).\r\n\r\nIt seems to me that it would be *extremely* useful to be able to trivially take the output of SecKeyGeneratePair() and use it to generate an x.509 certificate, and then sign it with the private key. This doesn't provide for an independent path of trust, but it does at least allow app developers to build a trust mechanism themselves (e.g. asking the two users, who by definition of MultipeerConnectivity, are close to each other, to verify key fingerprints on screen).\r\n\r\nObviously a certificate signed by an authority in the trusted root database, would be the best option here, but that is a very high barrier of entry to secure, ad-hoc, local communication using MultipeerConnectivity.\r\n\r\nSteps to Reproduce:\r\n- Try to use MultipeerConnectivity in a secure fashion\r\n\r\nExpected Results:\r\n- Be able to generate a self-signed certificate (or maybe in future-unicorn-ponies-land, have the key signed by the device, indicating that it is associated with the Apple ID of the user?)\r\n\r\nActual Results:\r\n- Generating a self-signed certificate, or indeed a certificate of any kind, is extremely difficult and fragile, and typically can only be done using deprecated/missing APIs, or by shipping a third party library of unknown quality.\r\n\r\nVersion:\r\nN/A\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nAny iOS device, and OS X computer\r\n\r\nAttachments:"
    email: cmsj@tenshu.net
    modified: "2017-06-09T15:31:00.97259Z"
    number: "22015008"
    number_intvalue: 22015008
    originated: "2015-07-27"
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: "2017-06-09"
    status: Duplicate of 14897803
    title: Bootstrapping ad-hoc MultipeerConnectivity could be so much easier
