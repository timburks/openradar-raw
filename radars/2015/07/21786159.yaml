apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21786159"
    labels:
        datastore_id: "6668084836302848"
data:
    classification: Feature (New)
    created: "2015-07-12T18:45:46.29862Z"
    description: |-
        Summary:
        Though abstracting the idea of indices for lookups in collection types has many benefits, it can be an awkward fit for the string class. Looking up a string through a numeric index can be common when doing text processing, especially if you’re just chopping a character or two off the beginning or end of something. Using the String.Index type for this leads to more verbose code. The boilerplate can obscure the intent of the code. It also makes it harder to chain this with another method call, because you need to store the result in an intermediary variable to get its start index.

        Steps to Reproduce:
        1. Call substringFromIndex on a string using an integer.

        Expected Results:
        I’d get a substring

        Actual Results:
        The compiler tells that I need to use the String’s index and I get sad.

        Regression:

        Notes:
        I’ve attached a playground demonstrating the uses of the alternative syntax alongside the existing syntax.
    email: john@brownleemail.com
    modified: "2015-07-12T18:45:46.29883Z"
    number: "21786159"
    number_intvalue: 21786159
    originated: 12-Jul-2015 02:45 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A152u)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode-beta (7A152u): Accessing Parts of Swift Strings Using Integers'
