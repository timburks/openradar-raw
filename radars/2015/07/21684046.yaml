apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21684046"
    labels:
        datastore_id: "5528967704477696"
data:
    classification: Feature (New)
    created: "2015-07-06T15:35:33.50821Z"
    description: |-
        As apps become more and more multithreaded, completion blocks are replacing return values more and more. However, these completion blocks are extremely freeform. They can be copied, saved, called multiple times, or never called at all. But in MANY cases, it is a programming error to a) not call them or b) call them more than once.

        It would be exceedingly helpful if Swift supported this pattern by adding compiler checks to enforce basic completion handler rules. A syntax similar to @autoclosure would work really well. Something like the following:

        func getStuff(stuffID: Int64, completion: @completion ([String]) -> ()) {
        	if stuffID < 0 {
        		completion([]) // omitting completion here shoudl cause a compile time error, because completion is never called
        		return // omitting return here should cause a compile time error, because completion could be called twice
        	}
        	
        	dispatch_async(dispatch_get_main_queue(), {
        		completion(["A", "B", "C"])
        	})
        }

        getStuff(42) { (stuff) in
        	
        }


        Or even:

        func getStuff(stuffID: Int64) -> @autoclosure [String] {
        	if stuffID < 0 {
        		completion([]) // completion now becomes a keyword replacement of return and automatically calls return
        	}
        	
        	dispatch_async(dispatch_get_main_queue(), {
        		completion(["A", "B", "C"])
        	})
        }
    email: davbeck@gmail.com
    modified: "2015-07-06T15:35:33.50851Z"
    number: "21684046"
    number_intvalue: 21684046
    originated: 06-Jul-2015 08:35 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Swift 2.0
    reproducible: Always
    resolved: ""
    status: Open
    title: Add ability to mark block as a completion block
