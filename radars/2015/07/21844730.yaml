apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21844730"
    labels:
        datastore_id: "5456881510252544"
data:
    classification: Enhancement
    created: "2015-07-15T22:57:45.4073Z"
    description: "Default implementations can be coded against the protocol, however, this still produces a bunch of potential copy/paste boiler plate for implementors of a protocol when dealing with properties. Extensions should be able to provide default implementations for those as well.\r\n\r\nSee Key Value Coding for a full example: http://owensd.io/2015/07/14/key-value-coding-in-swift.html\r\n\r\nBut basically, this code needs to be copied for every single implementor of KeyValueCodable:\r\n\r\nstruct Person : KeyValueCodable {\r\n    var _kvcstore: Dictionary<String, Any> = [:]\r\n}\r\n\r\nIn the general case, **every** implementation will use the exact same thing. This is bad for code maintenance and is just bad code duplication.\r\n\r\nI would expect to be able to do this:\r\n\r\nextension KeyValueCodable {\r\n    var _kvcstore: Dictionary<String, Any> = [:]\r\n}"
    email: owensd@gmail.com
    modified: "2015-07-15T22:58:57.95388Z"
    number: "21844730"
    number_intvalue: 21844730
    originated: 15-Jul-2015 03:57 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A152u)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode-beta (7A152u): Protocol extensions need to be able to provide default stores too.'
