apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21607336"
    labels:
        datastore_id: "5714318628749312"
data:
    classification: Enhancement
    created: "2015-06-30T08:01:14.63303Z"
    description: "Summary:\r\nI'm working with hardware on the local network that's discovered at runtime using either NSNetServiceBrowser or SSDP. This hardware communicates using unencrypted HTTP, meaning it's blocked by default by App Transport Security. There doesn't appear to be a good way of whitelisting said devices using ATS.\r\n\r\nSteps to Reproduce:\r\n1. In the default configuration, try to connect to a HTTP service running on the local network.\r\n2. See that it's blocked by App Transport Security by default. \r\n3. Attempt to whitelist the service in a sensible way using the NSAppTransportSecurity family of Info.plist keys\r\n\r\nExpected Results:\r\nI'd expect there to be a way to whitelist IP blocks for e.g. local networks. This way, I could whitelist the following:\r\n\r\n10.0.0.0/8\r\n172.16.0.0/12\r\n192.168.0.0/16 \r\n\r\nâ€¦and still keep App Transport Security for connections to the outside world. \r\n\r\nActual Results:\r\nIt's impossible to whitelist services on the local network. The only way I've been able to get around this is to completely disable App Transport Security for my application using NSAllowsArbitraryLoads: YES.\r\n\r\nVersion:\r\niOS 9 (13A4280e) (also Mac OS X 10.11 (15A204h))\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\niPhone 6 EU Unlocked"
    email: inbox@ikennd.ac
    modified: "2015-06-30T08:01:14.63325Z"
    number: "21607336"
    number_intvalue: 21607336
    originated: 30-Jun-2015 09:59 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 9.0 (13A4280e)
    reproducible: Always
    resolved: ""
    status: Open
    title: App Transport Security difficult to work with when working with IP addresses on the local network
