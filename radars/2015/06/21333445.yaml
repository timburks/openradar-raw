apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21333445"
    labels:
        datastore_id: "5529771400232960"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-06-11T02:27:19.74337Z"
    description: "Summary:\n\n\nSteps to Reproduce:\n1. This:\nprotocol FixpointType {\n\ttypealias Algebra : AlgebraicType\n\tinit(_ : Algebra)\n\tvar out: Algebra { get }\n}\nprotocol AlgebraicType {\n\ttypealias Recur\n}\nenum Expr<T>: AlgebraicType {\n\ttypealias Recur = T\n\tcase Null // this is quite a dull language\n\n\tfunc map<U>(transform: T -> U) -> Expr<U> {\n\t\treturn .Null\n\t}\n}\nstruct Term: FixpointType {\n\tlet out: Expr<Term>\n\ttypealias Algebra = Expr<Term>\n}\n\n\nExpected Results:\nshould not crash\n\n\nActual Results:\nbut totally does:\nAssertion failed: (!targetArg.empty() && \"Must have a name here\"), function fixAbstractFunctionNames, file /Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-700.0.38.1/src/swift/lib/Sema/TypeCheckDecl.cpp, line 7174.\n0  swift                    0x000000010cc53e0b llvm::sys::PrintStackTrace(__sFILE*) + 43\n1  swift                    0x000000010cc5454b SignalHandler(int) + 379\n2  libsystem_platform.dylib 0x00007fff88493f1a _sigtramp + 26\n3  libsystem_platform.dylib 0x00007fff54f992e8 _sigtramp + 3434107880\n4  libsystem_c.dylib        0x00007fff86f90b53 abort + 129\n5  libsystem_c.dylib        0x00007fff86f58c39 basename + 0\n6  swift                    0x000000010b2ea079 swift::TypeChecker::fixAbstractFunctionNames(swift::InFlightDiagnostic&, swift::AbstractFunctionDecl*, swift::DeclName) + 2153\n7  swift                    0x000000010b31e565 std::__1::__function::__func<(anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*)::$_8, std::__1::allocator<(anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*)::$_8>, void (swift::TypeChecker&, swift::NormalProtocolConformance*)>::operator()(swift::TypeChecker&, swift::NormalProtocolConformance*&&) + 149\n8  swift                    0x000000010b310c9c (anonymous namespace)::ConformanceChecker::diagnoseOrDefer(swift::ValueDecl*, bool, std::__1::function<void (swift::TypeChecker&, swift::NormalProtocolConformance*)>) + 252\n9  swift                    0x000000010b31317f (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) + 2335\n…\nStack dump:\n0.\tProgram arguments: /Applications/Xcode-7-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -primary-file recur.swift -target x86_64-apple-darwin14.3.0 -enable-objc-interop -module-name recur -o /var/folders/9y/f7n4rvx901nctm_5d16c1wm40000gn/T/recur-c96d47.o \n1.\tWhile type-checking 'Term' at recur.swift:17:1\n<unknown>:0: error: unable to execute command: Abort trap: 6\n<unknown>:0: error: swift frontend command failed due to signal (use -v to see invocation)\n\n\n\nRegression:\nSwift 1.2 was pretty ok with this sorta thing in general although I didn’t have the AlgebraicType protocol then so who even knows?\n\n\nNotes:\nThis is a really productive example, I’ve hit three different new crashers trying to work around a fourth."
    email: rix.rob@gmail.com
    modified: "2015-06-11T02:27:19.74367Z"
    number: "21333445"
    number_intvalue: 21333445
    originated: 10-Jun-2015 10:27 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-7-beta (7A120f)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2: Compiler crash in fixAbstractFunctionNames'
