apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21343400"
    labels:
        datastore_id: "6718356623196160"
data:
    classification: ""
    created: "2015-06-11T18:51:19.43018Z"
    description: "Assume we have the following example protocol in Swift:\r\n\r\nprotocol MyProtocol {\r\n    func protocolMethod() -> Void\r\n}\r\n\r\nNow, imagine that you want to declare a variable that is of some specific class type (e.g. NSEnumerator), something like:\r\n\r\nvar foo: NSEnumerator\r\n\r\nbut in addition to this, you also want to specify that the type of foo must additionally conform to the protocol MyProtocol. (In other words, foo is both an NSEnumerator and also conforms to MyProtocol.)\r\n\r\nThere is no way to express this in Swift, and this is problematic. Here are some attempts at doing this, which do not work:\r\n\r\nvar foo: NSEnumerator, MyProtocol // does not compile\r\nvar foo: NSEnumerator<MyProtocol> // does not compile\r\nvar foo: protocol<NSEnumerator, MyProtocol> // does not compile\r\n\r\nNote that this is possible to do in Objective-C, and is fairly common:\r\n\r\nNSEnumerator<MyProtocol> *foo;\r\n\r\nSteps to Reproduce:\r\nN/A\r\n\r\nExpected Results:\r\nN/A\r\n\r\nActual Results:\r\nN/A\r\n\r\nVersion:\r\nSwift 2.0\r\n\r\nNotes:\r\nThis Stack Overflow post has some related discussion, but if you look at the comments on this answer it's clear that there isn't a way to declare this in Swift:\r\nhttp://stackoverflow.com/a/24027473/796419\r\n\r\nConfiguration:\r\nXcode 7 beta 1"
    email: smileyborg@gmail.com
    modified: "2015-06-11T18:51:19.4304Z"
    number: "21343400"
    number_intvalue: 21343400
    originated: Jun 11, 2015
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: Swift 2.0
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: unable to express type that inherits from a superclass and conforms to a protocol'
