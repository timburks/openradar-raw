apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21295228"
    labels:
        datastore_id: "6693746460590080"
data:
    classification: Other Bug
    created: "2015-06-09T03:55:28.63756Z"
    description: |-
        Summary:
        toString is gone, and I can’t use `String` to name the overloaded set of constructor functions for String (including the one equivalent to toString, String.init<T>(T)), so there’s no longer a symbol available to pass to higher-order functions like map.

        That in turn means that I have to introduce a closure which introduces unnecessary cognitive load—I now have to consider its scope, whether it captures, the names of its parameters, and all of this distracts from the clarity of what would otherwise things.map(toString).

        This is true for Swift’s inits and enum cases, as well as properties; being able to retrieve these things as functions—which is what they _are_!—syntactically makes them vastly more useful, and readable.

        It also makes for less compiler work since you don’t have to worry about optimizing those tedious closures away. I’m just saying, you could have a margarita on the beach instead.


        Steps to Reproduce:
        N/A

        Expected Results:
        N/A

        Actual Results:
        N/A

        Regression:
        N/A

        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2015-06-09T03:55:28.63792Z"
    number: "21295228"
    number_intvalue: 21295228
    originated: 08-Jun-2015 11:55 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-7-beta (7A120f)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2: The removal of free functions from stdlib exacerbates the pain of constructors not being functions'
