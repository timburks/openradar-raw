apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21383959"
    labels:
        datastore_id: "6244881408196608"
data:
    classification: Serious Bug
    created: "2015-06-15T17:02:42.01476Z"
    description: "gist: https://gist.github.com/jose-ibanez/c813f10d301c0e2b54be\r\n\r\nSummary:\r\nSwift properties declared with the `@NSCopying` attribute do not actually copy the value assigned to them or read from them.\r\n\r\nSteps to Reproduce:\r\n1. Declare a property with the `@NSCopying` attribute with a type that conforms to the `NSCopying` protocol:\r\n\r\n    class Foo : NSObject, NSCopying { .. }\r\n    class Test : NSObject {\r\n      @NSCopying public var foo : Foo\r\n    }\r\n\r\n2. Set the property:\r\n\r\n    let test = Test()\r\n    let foo = Foo()\r\n    foo.bar = \"initial\"\r\n    test.foo = foo\r\n\r\n3. Observe that `foo` and `test.foo` are different pointers.\r\n\r\n    foo === test.foo // expected: false, actual: true\r\n\r\n3. Change a property on foo:\r\n\r\n    foo.bar = \"changed\"\r\n\r\n4. Observe the property on Test has changed:\r\n\r\n    print(test.foo.bar) // expected: \"initial\", actual: \"changed\"\r\n\r\nExpected Results:\r\nObjects assigned to or read from a property with the `@NSCopying` attribute should create a copy of the object using `copyWithZone()`\r\n\r\nActual Results:\r\nThe `@NSCopying` attribute appears to do nothing.\r\n\r\nVersion:\r\nXcode 6.3.2 / Swift 1.2\r\nXcode 7b1 / Swift 2"
    email: jose.ibanez@gmail.com
    modified: "2015-06-15T17:02:42.01507Z"
    number: "21383959"
    number_intvalue: 21383959
    originated: June 15, 2015
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: 1.2, 2
    reproducible: Always
    resolved: ""
    status: Open
    title: '@NSCopying does not appear to copy'
