apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21435347"
    labels:
        datastore_id: "6194920368898048"
data:
    classification: Feature (New)
    created: "2015-06-18T03:59:19.36695Z"
    description: |-
        Summary:
        Let’s say I have a struct, Tree<T>. I’d like to declare Tree to be Equatable when T is Equatable.

        Steps to Reproduce:
        Try to compile the following code:
        enum Tree<T> {}
        extension Tree where T: Equatable {}

        Expected Results:
        The code should compile

        Actual Results:
        error: trailing 'where' clause for extension of non-protocol type 'Tree'
    email: segiddins@gmail.com
    modified: "2015-06-18T03:59:19.36714Z"
    number: "21435347"
    number_intvalue: 21435347
    originated: 17-Jun-2015 08:59 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-7-beta (7A120f)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode-7-beta (7A120f): [Swift] Ability to constrain protocol conformance for structs'
