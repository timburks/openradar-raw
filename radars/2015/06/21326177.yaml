apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21326177"
    labels:
        datastore_id: "5608708872601600"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-06-10T19:55:51.79134Z"
    description: "Summary:\nIt’s a bit weird.\n\nThis one hit me when converting https://github.com/antitypical/Assertions — tests of assertion failures have this pattern.\n\n\nSteps to Reproduce:\n1. This:\nfunc a(@autoclosure _ : () -> Int) -> Int? { return nil }\nfunc b(_ : () -> ()) {}\nb {\n\ta(0)\n}\n\n\nExpected Results:\nshould not crash the compiler\n\n\nActual Results:\nbut it does:\n\nAssertion failed: (discriminator != AbstractClosureExpr::InvalidDiscriminator && \"closure must be marked correctly with discriminator\"), function mangleClosureComponents, file /Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-700.0.38.1/src/swift/lib/AST/Mangle.cpp, line 1396.\n0  swift                    0x00000001093d9e0b llvm::sys::PrintStackTrace(__sFILE*) + 43\n1  swift                    0x00000001093da54b SignalHandler(int) + 379\n2  libsystem_platform.dylib 0x00007fff88493f1a _sigtramp + 26\n3  libsystem_platform.dylib 0x00007fcb58874200 _sigtramp + 3493724928\n4  libsystem_c.dylib        0x00007fff86f90b53 abort + 129\n5  libsystem_c.dylib        0x00007fff86f58c39 basename + 0\n6  swift                    0x0000000107b7b7b9 swift::Mangle::Mangler::mangleClosureComponents(swift::Type, unsigned int, bool, swift::DeclContext const*, swift::DeclContext const*) + 313\n7  swift                    0x00000001075c9083 swift::SILDeclRef::mangle(llvm::SmallVectorImpl<char>&, llvm::StringRef) const + 1811\n8  swift                    0x0000000107578e36 swift::SILModule::getOrCreateFunction(swift::SILLocation, swift::SILDeclRef, swift::ForDefinition_t) + 86\n9  swift                    0x00000001075e61d8 swift::Lowering::SILGenModule::getFunction(swift::SILDeclRef, swift::ForDefinition_t) + 264\n10 swift                    0x00000001075eaaec swift::SILFunction* swift::Lowering::SILGenModule::preEmitFunction<swift::AbstractClosureExpr>(swift::SILDeclRef, swift::AbstractClosureExpr*, swift::SILLocation) + 108\n…\nStack dump:\n0.\tProgram arguments: /Applications/Xcode-7-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -interpret ./recur.swift -target x86_64-apple-darwin14.3.0 -enable-objc-interop -sdk /Applications/Xcode-7-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk -module-name recur \n1.\tWhile silgen closureexpr SIL function @_TF5recurU_FT_T_ for expression at [./recur.swift:5:3 - line:7:1] RangeText=\"{\n\ta(0)\n}\"\n\n\nRegression:\nSwift 1.2 didn’t crash with this.\n\n\nNotes:\nN/A"
    email: rix.rob@gmail.com
    modified: "2015-06-10T19:55:51.79152Z"
    number: "21326177"
    number_intvalue: 21326177
    originated: 10-Jun-2015 03:55 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-7-beta (7A120f)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2: Crash compiling autoclosure passed to function returning optional in closure passed to function'
