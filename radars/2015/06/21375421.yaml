apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21375421"
    labels:
        datastore_id: "4617416831139840"
data:
    classification: ""
    created: "2015-06-26T18:09:30.65526Z"
    description: "Summary:\r\nWhen a struct (FooItem<T>) which conforms to a custom protocol (Item) has a generic property (additionalValue) is contained within another struct (ItemWrapper) which references the protocol, a memory is leaked every time the outer struct is initialized.\r\n\r\nSteps to Reproduce:\r\n1. Open the attached Xcode project SwiftStructsMemoryLeak.xcodeproj in Xcode 7.\r\n2. Select ‘Profile’ in the toolbar or press CMD+I.\r\n3. Select the Leaks configuration in Instruments.\r\n4. Press the record button.\r\n5. Let the application run for a few seconds.\r\n6. Check out the list of memory leaks by selecting the Leaks instrument in the timeline.\r\n\r\nExpected Results:\r\nThere should not be any memory leak listed.\r\n\r\nActual Results:\r\nThere is a leaked object described as 48 Bytes of allocated memory which is created in the libswiftCore.dylib in swift_slowAlloc.\r\n\r\nRegression:\r\nOriginally, I had a problem with memory leaks in structs already in Swift 1.2 and posted a question about it on Stack Overflow: http://stackoverflow.com/questions/30628547/memory-leak-in-swift-structures-how-to-fix-this. The problem didn’t include the generic property and caused memory leaks when accessing the inner struct using convenience properties on the outer struct. This issue was resolved in Swift 2.0.\r\n\r\nNotes:\r\nI haven’t found a workaround for this problem. I guess I would have to remove the approach involving generics which I think is pretty beneficial.\r\n\r\nHere is my unapproved question on the new dev forums: https://forums.developer.apple.com/message/9643#9643"
    email: kubanek.l@gmail.com
    modified: "2019-06-01T09:39:26.549459Z"
    number: "21375421"
    number_intvalue: 21375421
    originated: 14.06.2015
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: yes
    status: Closed
    title: Memory Leak in Generic Structures in Swift 2.0
