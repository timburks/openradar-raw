apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21401702"
    labels:
        datastore_id: "5563939039477760"
data:
    classification: Feature (New)
    created: "2015-06-16T14:22:41.74311Z"
    description: |-
        Summary:

        Sometimes it is useful to be able to iterate over all cases of an enum. Currently there is no clean way to do this, as per this blog post:

        <http://www.swift-studies.com/blog/2014/6/10/enumerating-enums-in-swift>

        It would be much cleaner if there was an allCases property which returns a Set of all cases (Set rather than Array, because order is not defined and it should be impossible to have the same enum case more than once).

        Steps to Reproduce:

        i) Try and iterate over all cases of an enum.
        ii) Google the problem
        iii) Observe a multitude of dirty hacks

        Expected Results:

        There should be an elegant way to do this.

        Actual Results:

        Dirty hacks.

        Regression:

        N/A

        Notes:

        Best solutions Iâ€™ve come across as yet (which is brittle and prone to breakage when someone adds a new case):

        http://www.swift-studies.com/blog/2014/6/10/enumerating-enums-in-swift
    email: andrew@tenero.co.uk
    modified: "2015-06-16T14:22:41.74344Z"
    number: "21401702"
    number_intvalue: 21401702
    originated: 16-Jun-2015 03:22 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "2.0"
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: enums should have an allCases property which is a Set of all cases'
