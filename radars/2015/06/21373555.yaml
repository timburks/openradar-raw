apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21373555"
    labels:
        datastore_id: "5185053298524160"
data:
    classification: ""
    created: "2015-06-13T22:51:29.41467Z"
    description: "First: thanks for Swift! I like it a lot.\r\n\r\nIn the process of migrating to Swift 2, I found a bug.\r\n\r\nWhen a protocol has a Self requirement, I can't implement it inside a function or a method. See the attached source code. My use case is implementing a protocol in a test function: https://github.com/macoscope/SwiftyStateMachine/blob/350f9a0f5cdd5f3a11bcc6b6a6f03460b20716b8/StateMachineTests/StateMachineSpec.swift#L243-L253\r\n\r\n\r\nXcode 7.0 beta (7A120f)\r\nOS X 10.10.3 (14D136)\r\n\r\n\r\nattached test.swift:\r\n\r\n// > xcrun swift --version\r\n// Apple Swift version 2.0 (swiftlang-700.0.38.1 clang-700.0.53)\r\n// Target: x86_64-apple-darwin14.3.0\r\n\r\n\r\nprotocol MyEnumProtocol {\r\n    static var allCases: [Self] { get }\r\n}\r\n\r\n\r\n// works on the top level\r\nenum MyEnum: MyEnumProtocol {\r\n    case A\r\n    static var allCases: [MyEnum] { return [.A] }\r\n}\r\n\r\n\r\nclass WorksInsideAClass {\r\n    enum MyOtherEnum: MyEnumProtocol {\r\n        case A\r\n        static var allCases: [MyOtherEnum] { return [.A] }\r\n    }\r\n}\r\n\r\n\r\nfunc doesntWorkInsideFunctions() {\r\n    // error: protocol 'MyEnumProtocol' can only be used as a generic\r\n    // constraint because it has Self or associated type requirements\r\n    enum MyYetAnotherEnum: MyEnumProtocol {\r\n        case A\r\n        static var allCases: [MyYetAnotherEnum] { return [.A] }\r\n    }\r\n}"
    email: m.j.konieczny@gmail.com
    modified: "2015-06-13T22:51:29.41495Z"
    number: "21373555"
    number_intvalue: 21373555
    originated: "2015-06-14"
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: 'Swift 2: Can''t implement a protocol with Self inside a function or a method'
