apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21459774"
    labels:
        datastore_id: "6204764970811392"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-06-19T13:26:49.48337Z"
    description: |-
        Summary:
        Optionals can be compared via relational operators `<`, `<=`, `>` and `>=`. This leads to unexpected results.

        Steps to Reproduce:
        * `nil < 0` compiles and returns `true`.

        Expected Results:
        This should not even compile, as comparing .None to .Some via the given relational operators has no proper meaning.

        Actual Results:
        It compiles and might cover up a programming error.

        Notes:
        I would recommend removing the following methods from the Swift Standard Library:

        func <<T : Comparable>(lhs: T?, rhs: T?) -> Bool
        func <=<T : Comparable>(lhs: T?, rhs: T?) -> Bool
        func ><T : Comparable>(lhs: T?, rhs: T?) -> Bool
        func >=<T : Comparable>(lhs: T?, rhs: T?) -> Bool
    email: fabian.ehrentraud@willhaben.at
    modified: "2015-06-19T13:26:49.48366Z"
    number: "21459774"
    number_intvalue: 21459774
    originated: 19-Jun-2015 03:26 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7 beta 1
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift Standard Library: Optional should NOT be Comparable'
