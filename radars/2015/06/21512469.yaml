apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21512469"
    labels:
        datastore_id: "5558848060391424"
data:
    classification: Other Bug
    created: "2015-06-23T22:17:37.29152Z"
    description: |-
        Summary:
        Upon hearing about constrained extensions in Swift 2 beta 2 you might think you could do something fun like implement sum on arrays of ints. You’d be wrong.


        Steps to Reproduce:
        1. This code:
        struct S<T> {}
        extension S where T == Int {}


        Expected Results:
        should compile


        Actual Results:
        but doesn’t:

        boom.swift:2:21: error: same-type requirement makes generic parameter 'T' non-generic
        extension S where T == Int {}
                            ^

        Regression:
        N/A


        Notes:
        It’s not clear whether this same-type requirement limitation is intended to guard against programmer error or whether it’s an implementation limitation or whether it’s something like an occurs check for the constraints. Whatever the reason, every time I’ve seen it, it’s been standing in the way of something useful I wanted to do.
    email: rix.rob@gmail.com
    modified: "2015-06-23T22:17:37.29187Z"
    number: "21512469"
    number_intvalue: 21512469
    originated: 23-Jun-2015 06:17 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A121l)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift 2b2: Exclusion of same-type requirement in constrained extensions limits their utility'
