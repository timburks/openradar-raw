apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "21194670"
    labels:
        datastore_id: "6091070039392256"
data:
    classification: ""
    created: "2015-06-02T01:15:26.82122Z"
    description: "Summary:\r\nUIViewController's separateSecondaryViewControllerForSplitViewController(_:)\r\n\r\nshould return type UIViewController?, but it instead returns type UIViewController.\r\n\r\nThis is important for 2 reasons:\r\n1. By default, all VCs besides UINavigationController simply return nil.\r\n2. It's impossible to override UINavigationController's method to return nil in a subclass.\r\n\r\nSteps to Reproduce:\r\n1. Create a UISplitViewController project.\r\n2. Create a custom UIViewController subclass named ShowProblemViewController (see below).\r\n3. Designate the split VC's primary VC to be of kind ShowProblemViewController (this can be done in Storyboard).\r\n4. Run\r\n\r\nclass ShowProblemViewController: UIViewController{\r\n    \r\n    override func separateSecondaryViewControllerForSplitViewController(splitViewController: UISplitViewController) -> UIViewController {\r\n        \r\n        let returned: UIViewController? = super.separateSecondaryViewControllerForSplitViewController(splitViewController)\r\n        \r\n        if let nonNil = returned{\r\n            println(\"not nil\")\r\n        }\r\n        else{\r\n            println(\"nil...\")\r\n        }\r\n        \r\n        return returned!\r\n    }\r\n}\r\n\r\nExpected Results:\r\nShould print \"not nil\".\r\n\r\nActual Results:\r\nPrints \"nil\".\r\n\r\nVersion:\r\nVersion 6.3.2 (6D2105)"
    email: atai.barkai@gmail.com
    modified: "2015-06-02T01:15:26.82148Z"
    number: "21194670"
    number_intvalue: 21194670
    originated: 01-Jun-2015 09:12 PM
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: Xcode Version 6.3.2 (6D2105)
    reproducible: Always
    resolved: ""
    status: Open
    title: UIViewController's method returns the wrong type
