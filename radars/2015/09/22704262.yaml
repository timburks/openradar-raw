apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22704262"
    labels:
        datastore_id: "6095841647394816"
data:
    classification: UI/Usability
    created: "2015-09-15T17:40:46.70528Z"
    description: |-
        The associated data for enum cases is already tuple, I think it would a lot more consistency to Swift if it were exposed as a type.

        For example:

            enum Token  {
                case Keyword(keyword: String, offset: Int)
                case Identifier(identifier: String, offset: Int)
            }

        To get the values from the cases, it should be as simple as this:

            let keyword /* : String? */ = importkey.Keyword?.keyword

        This also could address the cumbersome case matching syntax for enums vs. tuples:

            if case ("import", _) = importkey.Keyword {
                print("import keyword")
            }

        vs. todayâ€™s

            if case Token.Keyword("import", _) = importkey {
                print("import keyword")
            }
    email: owensd@gmail.com
    modified: "2015-09-15T17:40:46.70549Z"
    number: "22704262"
    number_intvalue: 22704262
    originated: 15-Sep-2015 10:41 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.0 (7A218)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode 7.0: Expose Associated Data for Enums as Tuples'
