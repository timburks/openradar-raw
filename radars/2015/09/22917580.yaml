apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22917580"
    labels:
        datastore_id: "4623765463891968"
data:
    classification: Other Bug
    created: "2015-09-30T17:44:21.5603Z"
    description: "Summary:\nDefer is a very convenient workaround for failable initialisers requiring to call super before returning nil. Sadly it crashes compiler\n\nSteps to Reproduce:\nTry running following code\n\nclass B {\n    init() {\n    }\n}\n\nclass A: B {\n    override init() {\n        defer {\n            super.init()\n        }\n    }\n}\n\nlet a = A()\n\n\nExpected Results:\nInitialisation should be invoked as the very last thing happening during initialisation.\n\nActual Results:\nCompiler crashes with \n0  swift                    0x0000000110fbfedb llvm::sys::PrintStackTrace(__sFILE*) + 43\n1  swift                    0x0000000110fc061b SignalHandler(int) + 379\n4  swift                    0x000000010f2abddd swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) + 24749\n5  swift                    0x000000010f2a44ad swift::Lowering::SILGenFunction::emitIgnoredExpr(swift::Expr*) + 397\n6  swift                    0x000000010f2e4e46 swift::ASTVisitor<(anonymous namespace)::StmtEmitter, void, void, void, void, void, void>::visit(swift::Stmt*) + 294\n7  swift                    0x000000010f2e4d15 swift::Lowering::SILGenFunction::emitStmt(swift::Stmt*) + 21\n8  swift                    0x000000010f2b5e7b swift::Lowering::SILGenFunction::emitFunction(swift::FuncDecl*) + 331\n9  swift                    0x000000010f272a20 std::__1::__function::__func<swift::Lowering::SILGenModule::emitFunction(swift::FuncDecl*)::$_1, std::__1::allocator<swift::Lowering::SILGenModule::emitFunction(swift::FuncDecl*)::$_1>, void (swift::SILFunction*)>::operator()(swift::SILFunction*&&) + 128\n10 swift                    0x000000010f272474 swift::SILModule::constructSIL(swift::ModuleDecl*, swift::SILOptions&, swift::FileUnit*, llvm::Optional<unsigned int>, bool, bool) + 1268\n11 swift                    0x000000010f2726dd swift::performSILGeneration(swift::FileUnit&, swift::SILOptions&, llvm::Optional<unsigned int>, bool) + 109\n12 swift                    0x000000010f0d0fd5 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&) + 11445\n13 swift                    0x000000010f0ce10a frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2682\n14 swift                    0x000000010f0ca797 main + 2247"
    email: sash@zats.io
    modified: "2015-09-30T17:44:21.56048Z"
    number: "22917580"
    number_intvalue: 22917580
    originated: 30-Sep-2015 10:44 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.0.1 (7A1001)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: compiler crash when using defer in initializer of a class inheriting from another class'
