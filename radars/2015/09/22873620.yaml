apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22873620"
    labels:
        datastore_id: "6103688284209152"
data:
    classification: Crash/Hang/Data Loss
    created: "2015-09-27T22:13:22.8306Z"
    description: "Summary:\nThe attached project shows how a fairly common use of Array, inserting and removing objects, results in very consistent crashes.\nI managed to create a simple test that reproduces this issue (SignalSpec.swift:18). \n\nExample crash showing the stack trace: https://cloud.githubusercontent.com/assets/685609/10120983/a4a2fa1e-648b-11e5-9885-50e1fcb8060f.png\n\nSteps to Reproduce:\n- Unzip attached project.\n- Open ReactiveCocoa.xcworkspace.\n- Select ReactiveCocoa iOS scheme.\n- Run tests (⌘ + U) (this will only run the failing tests because it’s marked with `fcontext`)\n\nExpected Results:\nTests passes (as it does in Xcode 7.0).\n\nActual Results:\nAfter only 39 iterations the process crashes with\nmalloc: *** mach_vm_map(size=70918499991552) failed (error code=3)\n*** error: can't allocate region\n*** set a breakpoint in malloc_error_break to debug\n\nRegression:\nThis does not reproduce in Xcode 7 (Swift 2.0). You can use the same project to confirm this (no need to update the code at all)\n\nNotes:\nWe’re tracking this issue here: https://github.com/ReactiveCocoa/ReactiveCocoa/issues/2417"
    email: info@nachosoto.com
    modified: "2015-09-27T22:13:22.83076Z"
    number: "22873620"
    number_intvalue: 22873620
    originated: 27-Sep-2015 03:11 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.1 / Swift 2.1
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift's stdlib Array.removeAtIndex/Array.append crash after a few (39) iterations inserting / removing elements
