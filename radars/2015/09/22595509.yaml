apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22595509"
    labels:
        datastore_id: "6084694059778048"
data:
    classification: Feature (New)
    created: "2015-09-06T13:58:33.07446Z"
    description: |-
        Summary:
        The code for lazy initialization of a field seems to run at the class level rather than the instance level. This means that a lazy field initializer cannot reference other fields, which prevents more complicated relationships among lazy field. This is particularly a problem for types that do not use normal initialization, like types that are initialized from NIBs, or test classes.

        Steps to Reproduce:
        1. Create a class with a lazily initialized field
        2. Add another lazily initialized field that is based off of the value form the first field

        Expected Results:
        The second field would get a value based off of the value in the first field the first time the second field is accessed.

        Actual Results:
        The compiler complains that the first field doesnâ€™t exist.

        Regression:

        Notes:
    email: john@brownleemail.com
    modified: "2015-09-06T13:58:33.07472Z"
    number: "22595509"
    number_intvalue: 22595509
    originated: 06-Sep-2015 09:58 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta (7A192o)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode-beta (7A192o): Using Instance Fields in Lazy Evaluation in Swift'
