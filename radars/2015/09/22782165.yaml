apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22782165"
    labels:
        datastore_id: "6178708847067136"
data:
    classification: Other Bug
    created: "2015-09-21T16:13:36.17352Z"
    description: "Summary:\r\nWhen annotating API using the construct mentioned above, Clang’s type checker appears to be too lax:\r\nIt looks as if the `__kindof` keyword effectively removes the protocol constraint.\r\n\r\nAn example of a scenario where this matters can be found in the Dummy.m file of the attached sample project.\r\n\r\nSteps to Reproduce:\r\nBuild the attached sample project, and open the file Dummy.m.\r\n\r\nExpected Results:\r\nCompiling results in the following warning:\r\n${PROJECT_DIR}/Dummy.m:32:20: warning: initializing 'NSArray *const __strong' with an expression of incompatible type 'id<D12DBColumnRepresentable> _Nullable'\r\n    NSArray *const array = row[@\"bogus\"];\r\n                   ^       ~~~~~~~~~~~~~\r\n\r\n\r\nActual Results:\r\n*crickets*\r\n\r\nNo really: the build completes without any diagnostics\r\n\r\nVersion:\r\nXcode Version 7.0 (7A220)\r\n\r\nNotes:\r\nThe warning provided in “Expected Results” section is the diagnostic obtained when removing the `__kindof` in the typedef.\r\n\r\nIn that case, however, there’s also a warning on the line that gets the number.\r\nThat’s okay because there’s no guarantee that an arbitrary id<SomeProtocol> is some concrete type that conforms to said protocol, but that means one needs to rely on `__kindof` not removing the protocol requirement.\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n'WarningSign.zip' was successfully uploaded."
    email: daniel@puppiesonacid.de
    modified: "2015-09-21T16:13:36.1737Z"
    number: "22782165"
    number_intvalue: 22782165
    originated: "2015-09-21"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode Version 7.0 (7A220)
    reproducible: Always
    resolved: ""
    status: open
    title: 'Clang: type checking of `__kindof id<SomeProtocol>` is too loose'
