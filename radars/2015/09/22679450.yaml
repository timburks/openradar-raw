apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22679450"
    labels:
        datastore_id: "4983224296013824"
data:
    classification: Other Bug
    created: "2015-09-14T05:50:52.72274Z"
    description: "Summary:\r\nThe Swift 2 book comments the use of the parameter \"block\" to the decorator \"@convention\" as such:\r\n\r\n> “The block argument is used to indicate an Objective-C compatible block reference. The function value is represented as a reference to the block object, which is an id-compatible Objective-C object that embeds its invocation function within the object. The invocation function uses the C calling convention.”\r\n\r\nThis is not currently true; a block type cannot be converted to \"AnyObject\"\r\n\r\nSteps to Reproduce:\r\n1. Typealias a function type to include \"@convention(block)\" in Swift 2\r\n2. Create a function taking a parameter of that function type\r\n3. Attempt to cast the block to \"AnyObject\" using \"as\"\r\n4. Follow compiler warning to use \"as!\" instead\r\n5. Code traps at runtime\r\n\r\nExpected Results:\r\nThe block type is converted to \"AnyObject\".\r\n\r\nActual Results:\r\nPrecondition failure: \"Could not cast value of type '@convention(block) () -> ()' (0xSOMEADDR) to 'Swift.AnyObject' (0xSOMEADDR).\"\r\n\r\nVersion:\r\nXcode 7.0 (7A218)/Apple Swift 2.0 (swiftlang-700.0.59 clang-700.0.72)\r\n\r\nNotes:\r\nA block can be passed to/casted from \"id\" in Objective-C, or bridged to Core Foundation as appropriate. In non-ObjC C, blocks are always pointer types.\r\n\r\nConfiguration:\r\nOccurs on all releases of Swift.\r\n\r\nAttachments:"
    email: zwaldowski@gmail.com
    modified: "2015-09-14T05:50:52.72296Z"
    number: "22679450"
    number_intvalue: 22679450
    originated: 14-Sep-2015 01:47 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7.0 (7A218)/Swift 2.0 (swiftlang-700.0.59 clang-700.0.72)
    reproducible: Always
    resolved: "false"
    status: Open
    title: '[Swift] Function marked with @convention(block) not AnyObject'
