apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "22756333"
    labels:
        datastore_id: "6085319346618368"
data:
    classification: Other Bug
    created: "2015-09-18T12:27:46.26578Z"
    description: "Summary:\nSince Xcode 7 we have ability to use lightweight generics that come pretty handy and especially in Objective-C++ where we can use “auto” keyword to avoid typing pretty long typename declarations. \n\nUnfortunately “auto” keyword does not work properly with lightweight generics in for-in loops and unable to resolve element type of iterated array and falls back to “id”.\n\nCompiler must be able to resolve the typename of object in iterated array. \n\nNSFastEnumeration, on the other hand, works properly and Xcode suggests the right typename when using enumerateObjectsUsingBlock.\n\nExample: \n\n   NSArray<UILocalNotification *> *localNotifications = [[UIApplication sharedApplication] scheduledLocalNotifications];\n    \n    for(auto notification in localNotifications) {\n        if([notification.userInfo[@\"isGameActivityNotification\"] boolValue]) {\n            [[UIApplication sharedApplication] cancelLocalNotification:notification];\n        }\n    }\n\nSteps to Reproduce:\n\nExpected Results:\n“auto” is deduced as “element type” of iterated array.\n\nActual Results:\nCompiler throws warning “‘auto’ deduced as ‘id’ in declaration of ‘notification’”\n\nRegression:\n\nNotes:"
    email: and.mikhaylov@gmail.com
    modified: "2015-09-18T12:27:46.26613Z"
    number: "22756333"
    number_intvalue: 22756333
    originated: 18-Sep-2015 02:27 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 7
    reproducible: Always
    resolved: ""
    status: Open
    title: Compiler is unable to resolve element type in for-in loop when using "auto" keyword
