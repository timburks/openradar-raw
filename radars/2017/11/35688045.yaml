apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "35688045"
    labels:
        datastore_id: "4954174898831360"
data:
    classification: Performance
    created: "2017-11-26T03:25:55.46304Z"
    description: "Area:\r\nMessages Framework\r\n\r\nSummary:\r\n\r\nMSStickerView can be used to display stickers in the form of animated GIFs up to a file size of 500 KB. Depending on the frame size of the GIF and the number of frames in the animation, each such MSStickerView can actually consume tens of MB of system memory when added to the view hierarchy. When several of these are shown in, for example, a collection view, it is possible to trigger an out-of-memory condition in the messages app extension.\r\n\r\nSteps to Reproduce:\r\n\r\nSee attached minimum reproducible sample app \"MemoryGobblingStickers\"\r\n\r\n1. Run the MemoryGobblingStickers app in Xcode debugger (Xcode 9.1, against a simulator running iOS 11.1)\r\n2. Show the Xcode Debug Navigator and note the Memory usage\r\n3. Tap the button \"Tap to add a sticker\". This will add a 500 KB animated GIF in an MSStickerView to the view hierarchy.\r\n4. Note that the memory usage of the app increases by about 23 MB.\r\n5. Repeatedly tap the \"Tap to add a sticker\" button. Note that with each MSStickerView added, memory usage increases by about 23 MB until eventually you run out of memory and the app extension crashes.\r\n\r\nExpected Results:\r\n\r\nSince the actual animated GIF file is only 500 KB, the hope is that many of these can be shown on the screen at the same time (for example, in a scrolling collection view). Memory cost to show a 500 KB animated GIF should not be 50x as much as the original asset. \r\n\r\nActual Results:\r\n\r\nEach (of the sample) 500 KB animated GIF added to the view hierarchy as an MSStickerView consumes 23 MB of memory. It seems as though the way animated GIFs are internally represented inside MSStickerViews is extremely expensive. \r\n\r\nAlternatively, If there was a way to use, for example, use .webp or .mp4 assets in MSStickerViews (that consumed less memory when added to the view hierarchy) that would work for us as well.\r\n\r\nVersion/Build:\r\nXcode 9.1, iOS 11.1"
    email: gene@indigo1.com
    modified: "2017-11-26T03:25:55.46324Z"
    number: "35688045"
    number_intvalue: 35688045
    originated: "2017-11-25"
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: "11.1"
    reproducible: Always
    resolved: ""
    status: Open
    title: MSStickerView uses excessive memory when displaying animated GIFs
