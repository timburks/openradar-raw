apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "35743469"
    labels:
        datastore_id: "5038232777523200"
data:
    classification: UI/Usability
    created: "2017-11-29T08:31:24.63049Z"
    description: "Summary:\r\nCompleting a UIViewPropertyAnimator's animations with a non-zero duration factor takes a significant amount of time if the animator had previously been paused and had its fractionComplete updated (possibly by a gesture recognizer) even if the animation has already been completed.\r\n\r\nSteps to Reproduce:\r\n1. Create a property animator with some view animations\n2. Start and pause the animator\n3. Set the animators fractionComplete to 1 (driving the animation all the way to completion)\n4. Add a completion block to the animator with a log so you know when it's done\n5. Call continueAnimationWithTimingParameters:durationFactor: with a non-zero durationFactor\r\n\r\nExpected Results:\r\nSince the fractionComplete of the animator was set to 1, the animation has already completed and therefore regardless of the durationFactor, the animation should finish immediately, and call the completions.\r\n\r\nActual Results:\r\nThe animator takes longer than the original animation duration to complete (in the case the durationFactor is 1) even though no visual animation is happening during this time.\r\n\r\nVersion:\r\niOS 11\r\n\r\nNotes:\r\n- If you pass 0 as the durationFactor, it completes immediately as expected.\n- See the attached sample project for an example"
    email: keithbsmiley@gmail.com
    modified: "2017-11-29T08:31:24.6307Z"
    number: "35743469"
    number_intvalue: 35743469
    originated: 29-Nov-2017 00:31
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: iOS 11
    reproducible: Always
    resolved: ""
    status: Open
    title: Continuing a UIViewPropertyAnimator with a durationFactor when fractionComplete has been set results in long completion time
