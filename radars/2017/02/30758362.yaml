apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "30758362"
    labels:
        datastore_id: "5065100113215488"
data:
    classification: Other Bug
    created: "2017-02-28T16:13:43.84125Z"
    description: "Area:\r\nNotifications\r\n\r\nSummary:\r\nThe first load of an app with local notification custom sounds works correctly. When the app is updated (by Xcode, TestFlight or App Store) the app plays only the default sound. Behavior is the same with either new UNUserNotifications or deprecated UILocalNotifications. Behavior only occurs on iOS 10. The custom sound is a 2 second caf file in the application bundle (and it plays correctly multiple times until the app is updated). Notification permissions including Sounds are properly granted. Deleting the app and reloading causes the custom sound to play correctly again.\r\n\r\nSteps to Reproduce:\r\n1. Install original app\r\n2. Update app via Xcode, TestFlight, or App Store\r\n3. Send notification\r\n\r\nExpected Results:\r\nCustom notification sound is played\r\n\r\nActual Results:\r\nDefault notification sound is played\r\n\r\nVersion:\r\niOS 10\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nAll iOS devices\r\n\r\nAttachments:\r\n'AppDelegate.m' was successfully uploaded.\r\n\r\n@interface AppDelegate ()  \r\n@end  \r\n  \r\n@implementation AppDelegate  \r\n  \r\nBOOL soundsAllowed;  \r\n  \r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {  \r\n    NSLog(@\"application didFinishLaunchingWithOptions\");  \r\n    [self requestAuthorizationForNotifications];     \r\n    return YES;  \r\n}  \r\n  \r\n- (void)applicationWillResignActive:(UIApplication *)application {  \r\n    NSLog(@\"applicationWillResignActive\");  \r\n}  \r\n  \r\n- (void)applicationDidEnterBackground:(UIApplication *)application {  \r\n    NSLog(@\"applicationDidEnterBackground\");  \r\n    [self scheduleLocalNotification];  \r\n}  \r\n  \r\n- (void)applicationWillEnterForeground:(UIApplication *)application {  \r\n    NSLog(@\"applicationWillEnterForeground\");  \r\n    // check if we are still authorized  \r\n    [self requestAuthorizationForNotifications];  \r\n}  \r\n  \r\n- (void)applicationDidBecomeActive:(UIApplication *)application {  \r\n    NSLog(@\"applicationDidBecomeActive\");  \r\n}  \r\n  \r\n- (void)applicationWillTerminate:(UIApplication *)application {  \r\n    NSLog(@\"applicationWillTerminate\");  \r\n}  \r\n  \r\n- (void)requestAuthorizationForNotifications {  \r\n    NSLog(@\"requestAuthorizationForNotifications\");  \r\n    soundsAllowed = NO;  \r\n    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];  \r\n    [center requestAuthorizationWithOptions:(UNAuthorizationOptionAlert + UNAuthorizationOptionSound | UNAuthorizationOptionAlert)  \r\n                          completionHandler:^(BOOL granted, NSError * _Nullable error) {  \r\n                              if (error) {  \r\n                                  NSLog(@\"request authorization error: %@\", error);  \r\n                              } else {  \r\n                                  NSLog(@\"request authorization no error\");  \r\n                                  [self checkSoundsAllowed];  \r\n                              }  \r\n                          }];}  \r\n  \r\n// examine notification settings to determine if sounds are allowed, save result  \r\n- (void)checkSoundsAllowed {  \r\n    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];  \r\n    [center getNotificationSettingsWithCompletionHandler:^(UNNotificationSettings * _Nonnull settings) {  \r\n        soundsAllowed = (settings.soundSetting == UNNotificationSettingEnabled);  \r\n        NSLog(@\"soundsAllowed: %@\", (soundsAllowed ? @\"true\" : @\"false\"));  \r\n        if (soundsAllowed) {  \r\n            // clear any existing notifications  \r\n            [center removeAllPendingNotificationRequests];  \r\n        }  \r\n    }];  \r\n}  \r\n  \r\n- (void)scheduleLocalNotification {  \r\n    if (!soundsAllowed) {  \r\n        NSLog(@\"scheduleLocalNotification soundsAllowed: false. return without scheduling\");  \r\n        return;  \r\n    }  \r\n    \r\n    // Set up the request content  \r\n    UNMutableNotificationContent *content = [[UNMutableNotificationContent alloc] init];  \r\n    content.title = @\"Title\";  \r\n    content.body = @\"Body\";  \r\n    content.sound = [UNNotificationSound soundNamed:@\"Test.caf\"];  \r\n    \r\n    // Deliver the notification in five seconds.  \r\n    UNTimeIntervalNotificationTrigger *trigger = [UNTimeIntervalNotificationTrigger  \r\n                                                  triggerWithTimeInterval:5.f repeats:NO];  \r\n    UNNotificationRequest *request = [UNNotificationRequest requestWithIdentifier:@\"FiveSecond\"  \r\n                                                                          content:content trigger:trigger];  \r\n    // Schedule the notification.  \r\n    UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];  \r\n    [center addNotificationRequest:request withCompletionHandler:^(NSError * _Nullable error) {  \r\n        if (!error) {  \r\n            NSLog(@\"addNotificationRequest succeeded! content.sound: %@ default sound: %@\", content.sound, [UNNotificationSound defaultSound]);  \r\n        }  \r\n    }];  \r\n}  \r\n  \r\n@end"
    email: Josh.Lieberman92@gmail.com
    modified: "2017-03-29T21:26:05.57117Z"
    number: "30758362"
    number_intvalue: 30758362
    originated: 28-Feb-2017
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: iOS 10
    reproducible: Always
    resolved: ""
    status: Closed
    title: Local notification plays only default sound after app update
