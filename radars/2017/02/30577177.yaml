apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "30577177"
    labels:
        datastore_id: "6165359065300992"
data:
    classification: UI/Usability
    created: "2017-02-17T15:23:18.90625Z"
    description: "Summary:\nIf you set an appearance proxy on [UINavigationBar appearance] without using `appearanceWhenContainedInInstancesOfClasses` and passing in a custom navigation controller class, it screws up the navigation bar on MFMailComposeViewController and MFMessageComposeViewController, as well as other system-provided classes which subclass UINavigationController.  This setting persists even if you manually reset the appearance proxy on these other classes. \n\nSteps to Reproduce:\nPREREQ: Must be installed on device since the simulator no longer has the two classes which definitely reproduce the bug, so it crashes when attempting to present them. \n\n1. Open attached project. \n2. Install on device using “AppearanceProxyBugProof - Direct” scheme. \n3. Note the delightfully fugly navigation bar, with custom colors and fonts. \n4. Tap the “email” button. \n5. Note that despite setting font back to something normal and colors back to normal on the nav bar using `appearanceWhenContainedInInstancesOfClasses` and explicitly passing in the `MFMailComposeViewController`, the background color and title text attributes are still fugly. Looks like the nav bar buttons recovered. \n6. Close out of the email composer, deleting the draft. \n7. Tap the “SMS” button. \n8. Note that the fugly background color has been reset, but the title text attributes are still showing the fugly font/font color. Again, nav bar buttons seem to have recovered. \n\n\nExpected Results:\nResetting the appearance proxy on specific classes allows you to use their default appearances. \n\nActual Results:\nSee “steps to reproduce”\n\nRegression:\nThis has been happening since the iOS 7 transition. From my original radar on this, 15526703, filed in November 2013: “In iOS 6, setting the tintColor on the navigation bar proxy in the same way using the appearance proxy updates the bar's background color. My guess would be this is something that was overlooked in the migration from tintColor to barTintColor”. \n\nNotes:\nOriginal radar was closed as a dupe, and I can’t actually access the original at radar.apple.com anymore to see if the issue it was tied to ever got closed. I’ve seen this problem floating around in the wild ever since so I figured I’d see if it’s still happening. Yep!\n\nI have included the workaround I’ve been using for the last three and a half years - if you build and run the AppearanceProxyBugProof - Custom Nav” scheme, you’ll see that when I create an otherwise useless UINavigationController subclass and set the proxy to be only on instances of this subclass, the issue goes away."
    email: designatednerd@gmail.com
    modified: "2017-02-17T15:23:18.90645Z"
    number: "30577177"
    number_intvalue: 30577177
    originated: 17-Feb-2017 09:23 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: 10.2.1
    reproducible: Always
    resolved: ""
    status: Open
    title: Setting UIAppearanceProxy on UINavigatonBar screws up MFMailCompose/MFMessageComposeViewController's nav bar
