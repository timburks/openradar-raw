apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "30510010"
    labels:
        datastore_id: "4957803240226816"
data:
    classification: ""
    created: "2017-02-14T10:26:58.19374Z"
    description: "This bug report has been submitted at the request of Apple Developer Technical Support in response to a Technical Support Incident (follow-up 658037694).\r\n\r\nWhen inserting multiple custom supplementary elements at once in a collection view using a subclass of UICollectionViewFlowLayout, the collection view misplaces some existing custom supplementary views.  This results in unacceptable visual glitches.\r\n\r\nThe problem does not occur when custom supplementary elements are inserted into an otherwise empty collection view (because, at that stage, there are no existing supplementary views to be misplaced).  Inserting only one supplementary element at a time behaves as expected (for reasons that are unclear).  Inserting two supplementary elements at once results in a visual glitch, and inserting many supplementary elements at once (e.g. 4+) worsens the glitch.\r\n\r\nThe methods for providing initial and final layout attributes appear to return the correct frames for all supplementary elements for which those attributes are requested.  However, for the existing supplementary views that are misplaced by the collection view, the collection view never requests initial or final layout attributes at all.  Curiously, the calls made by the collection view for initial and final layout attributes for supplementary elements appear to be unbalanced.  That is, initial layout attributes are requested multiple times for the same index path (and, naturally, the same attributes are returned each time), and there are fewer requests for final layout attributes than there are for initial layout attributes.\r\n\r\nItems in the collection view are always positioned and animated correctly, even when the layout attributes for those items specify the same frames and index paths as the custom supplementary elements.  The problem appears to be specific to supplementary elements.  (I have not tested decoration elements.)\r\n\r\nIn my app, I am using a collection view with many items and many supplementary views, and I need to be able to perform animated batch updates reliably without visual artefacts.  I would be grateful for an elegant fix or workaround that does not sacrifice the other functionality provided by a flow layout.\r\n\r\nSteps to Reproduce:\r\nThe steps to reproduce the issue (all of which have been implemented in the attached example project) are as follows:\r\n\r\n1. Create a collection view with a custom subclass of UICollectionViewFlowLayout as its layout object.\r\n\r\n2. Create a subclass of UICollectionReusableView to function as a custom supplementary view (being neither a section header nor a section footer).\r\n\r\n3. In the flow layout subclass, override and implement the methods necessary to provide layout information for the custom supplementary element, namely:  layoutAttributesForElements(in:), layoutAttributesForSupplementaryView(ofKind:at:), prepare(forCollectionViewUpdates:), indexPathsToInsertForSupplementaryView(ofKind:).\r\n\r\n4. Call performBatchUpdates(_:completion:) on the collection view with an update that inserts a sufficient number of items as to require the insertion of multiple custom supplementary elements at once.  (Supplementary elements cannot be inserted directly but are inserted by the layout object in response to the insertion of sections and items.)\r\n\r\n5. Observe visual glitches in the presentation of the custom supplementary views. It appears that some existing supplementary views are misplaced or lost, and their presentation is not fixed until the end of the animation block.\r\n\r\nExpected Results:\r\nDuring the insertion of multiple custom supplementary elements, existing and inserted custom supplementary views should be positioned and animated according to the layout attributes provided by the flow layout subclass.\r\n\r\nActual Results:\r\nDuring the insertion of multiple custom supplementary elements, some existing custom supplementary views are not positioned correctly.\r\n\r\nVersion:\r\niOS 10.2.1 (14D27) and iOS 9.3; Swift 3; Xcode 8.2.1\r\n\r\nNotes:\r\nThe attached example project is available here:  https://github.com/jamesk-au/FlowLayoutInsertionTest\r\n\r\nA description of this bug, including screen captures demonstrating the problem, has also been posted on Stack Overflow: http://stackoverflow.com/q/41820776/5352503\r\n\r\nThe current top-voted answer suggests that UICollectionView may be passing the wrong index paths to collectionView(_:viewForSupplementaryElementOfKind:at:), or is confusing index paths for supplementary elements in some other way.\r\n\r\nConfiguration:\r\niPhone 6s 128GB, iOS Simulator (any)\r\n\r\nAttachments:\r\n'screen-capture.gif' and 'FlowLayoutInsertionTest-master.zip' were successfully uploaded."
    email: jamesk.au@gmail.com
    modified: "2017-02-14T10:26:58.19402Z"
    number: "30510010"
    number_intvalue: 30510010
    originated: 14/02/17
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: iOS 10.2.1 (14D27) and iOS 9.3; Swift 3; Xcode 8.2.1
    reproducible: Always
    resolved: ""
    status: Open
    title: Custom supplementary views not positioned correctly by UICollectionViewFlowLayout
