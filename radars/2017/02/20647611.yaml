apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "20647611"
    labels:
        datastore_id: "4940784767860736"
data:
    classification: ""
    created: "2017-02-24T02:26:39.79126Z"
    description: "Norio Nomura 24-Feb-2017 11:23 AM\r\n\r\nI confirmed that this issue has been resolved on Xcode 8.3 beta 3.\r\nThis issue has been verified as resolved and can be closed.\r\n\r\nApple Developer Relations17-Feb-2017 07:42 AM\r\n\r\nPlease verify this issue with the Xcode 8.3 beta and update your bug report at https://bugreport.apple.com/ with your results.\r\n\r\nXcode 8.3 beta 2 (8W120l)\r\nhttps://developer.apple.com/download/\r\nPosted Date: Feb 6th, 2017\r\n\r\nNorio Nomura 22-Apr-2015 04:04 PM\r\n\r\nSummary:\r\nOverriding generic method of non-generic superclass with generic subclass does not work.\r\n\r\nhttps://devforums.apple.com/thread/268824\r\n\r\nSteps to Reproduce:\r\n1. Paste following code into Playground\r\nclass C {\r\n    func f<T>(v: T) -> String {\r\n        return \"C(\\(v))\"\r\n    }\r\n \r\n    func callf() -> String{\r\n        return f(\"test\")\r\n    }\r\n}\r\n \r\nclass D<U>: C {\r\n    func f<T>(v: T) -> String {// swift compiler never warn missing 'override' keyword, and not allow placing 'override' keyword.\r\n        return \"D(\\(v))\"\r\n    }\r\n}\r\n \r\nlet d = D<String>()\r\nd.callf() // \"C(test)\"\r\n\r\n\r\nExpected Results:\r\n- \"D(test)\" is printed to timeline of playground\r\n- missing 'override' keyword warning message appears\r\n\r\nActual Results:\r\n- \"C(test)\" was printed to timeline of playground\r\n- missing 'override' keyword warning message did not appear\r\n\r\nVersion:\r\nXcode 6.3.1 (6D1002), Xcode 6.4 beta (6E7)\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: Norio.Nomura@gmail.com
    modified: "2017-02-24T02:26:39.79147Z"
    number: "20647611"
    number_intvalue: 20647611
    originated: 22-Apr-2015 04:04 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.3.1 (6D1002)
    reproducible: Always
    resolved: YES
    status: Closed
    title: Overriding generic method of non-generic superclass with generic subclass does not work.
