apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34617572"
    labels:
        datastore_id: "4954649626935296"
data:
    classification: Serious Bug
    created: "2017-09-24T21:08:15.26816Z"
    description: "Summary:\r\nThis is a duplicate of radar #34617535\n\nThe TouchID preference pane is unable to load on High Sierra GM (10.13.0 17A362a) on any TouchBar MacBook Pro that is bound to ActiveDirectory and uses mobile accounts (which is a supported configuration for Active Directory for macOS High Sierra - this is mobile accounts, not portable home directories we're talking about).\n\r\n\r\nSteps to Reproduce:\r\n- Install macOS High Sierra GM on a TouchBar MacBook Pro\n- Bind machine to Active Directory\n- Either force, under AD bind configuration, that accounts create mobile home directories, or login with an Active Directory account and choose to make a mobile home\n- Attempt to open the TouchID preference pane\r\n\r\nExpected Results:\r\nThe TouchID preference pane should open and allow configuring TouchID on the device\r\n\r\nActual Results:\r\nThe TouchID preference pane is not present.\n\nAttempts to open it manually at the location: /System/Library/PreferencePanes/TouchID.prefPane\n\nresult in a dialog with the text:\n\nYou can’t open the “Touch ID” preferences pane because it is not available to you at this time.\nTo see this preferences pane, you may need to connect a device to your computer.\n\nTouchID is quite functional on the device. You can create a local user account on the same machine, not connected to AD, then log in as that account the preference pane is present and opens easily.\n\nThe root cause of this bug is a change in the logic inside the binary located at /System/Library/PreferencePanes/TouchID.prefPane/Contents/Resources/AllowPasswordPref\n\nThe AllowPasswordPref pane executable is marked by the TouchID.prefpane as the executable to run for hardware compatibility for this preference pane, via this key in the Info.plist for the TouchID.prefpane:\n<key>NSPrefPaneHardwareTest</key>\n<string>AllowPasswordPref</string>\n\nThe AllowPasswordPref is executed and if the return result is 0, then the OS considers the preference pane compatible and will load/display it.\n\nOn 10.12, running this executable directly on an AD bound machine with a mobile user home directory returns:\nexit code: 0\nlog output:\n2017-09-24 13:31:04.496 AllowPasswordPref[1908:31608] Hardware Check err == 0\n\nOn 10.13, the new version of this executable returns:\nexit code: 254\nlog output:\n2017-09-24 13:48:21.003 AllowPasswordPref[3202:61358] Hardware Check err == 0\n2017-09-24 13:48:21.013 AllowPasswordPref[3202:61358] Is Network User? == 1\n\nA new check has been added to the internal logic of this executable. Opening the 10.13 executable in Hopper and emitting a pseudocode disassembly, the result is:\n\n    rbx = [[ADMUser findUserByID:getuid() searchParent:0x0] retain];\n    if (((rbx != 0x0) && ([rbx hasMobileHomeDirectory] == 0x0)) && ([rbx isExternalAccount] == 0x0)) {\n            rsi = 0x0;\n    }\n    else {\n            *(int32_t *)0x100001180 = 0xfffffffe;\n            rsi = 0x1;\n    }\n\nThis code will _only_ ever succeed if hasMobileHomeDirectory returns 0.\n\nBy quickly using some pyobjc, I'm able to tap into the private SystemAdministration.framework myself and verify the output of that method:\n\n>>> from Foundation import NSBundle\n>>> SA = NSBundle.bundleWithPath_('/System/Library/PrivateFrameworks/SystemAdministration.framework')\n>>> ADMUser = SA.classNamed_('ADMUser')\n>>> user = ADMUser.currentUser()\n>>> user.hasMobileHomeDirectory()\n1\n\nThere is also a check in there for isExternalAccount - which looks like it's looking at the dsAttrTypeNative:external attribute on the user account.\n\nMy guess as to what logic is _attempting_ to happen here is that you're attempting to look for users that might have their home directory stored on an external thumb drive, which I can understand may not be compatible with TouchID biometric storage.\n\nBut two things:\n\nThere is absolutely NO reason that TouchID should be incompatible with mobile accounts locally stored on the device. This is very definitely a bug.\n\nAnd secondly, if it's no longer compatible with accounts that are stored on external media, then that information needs to be publicly documented somewhere - and it is not.\n\nNumber of devices affected: Over 35000\nImpact of bug: Reduced/delayed adoption of 10.13 until this bug is corrected.\r\n\r\nVersion:\r\n10.13.0 17A362a\r\n\r\nNotes:"
    email: rtrouton@gmail.com
    modified: "2017-09-24T21:08:15.26893Z"
    number: "34617572"
    number_intvalue: 34617572
    originated: 24-Sep-2017 02:08 PM
    parent_number: '&{NULL_VALUE}'
    product: macOS + SDK
    product_version: 10.13.0 17A362a
    reproducible: Always
    resolved: ""
    status: Open
    title: 'macOS 10.13.0 17A362a: TouchID preference pane does not load under High Sierra 10.13 with Active Directory mobile accounts'
