apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34675414"
    labels:
        datastore_id: "5015285169913856"
data:
    classification: Other Bug
    created: "2017-09-27T03:32:47.01108Z"
    description: "Summary:\r\nWhen using a re-using UIViewPropertyAnimator that has previously started its animations, been reversed, and the completed them with a non-zero durationFactor (passed to `continueAnimation(withTimingParameters:durationFactor:)`), any subsequent animations you run with the same UIViewPropertyAnimator are performed much more slowly than the duration of the animator.\r\n\r\nSteps to Reproduce:\r\n1. Open the sample project and run it on iOS 10 or 11\n\nOr:\n\n1. Create a UIViewPropertyAnimator and hold on to it\n2. Add some animations to it\n3. Start and immediately pause the animator\n4. Set isReversed = true\n5. Call continue with a non-zero durationFactor\n6. Re-use the animator for another set of animations\r\n\r\nExpected Results:\r\nThe first animation occurs, then completes, then the second animation should be performed at the correct duration of 0.33 seconds\r\n\r\nActual Results:\r\nAfter the first animation completes, the second animation takes over 1 second to complete\r\n\r\nVersion:\r\niOS 11\r\n\r\nNotes:\r\n- This is also a bug on iOS 10\n- You can workaround this by re-creating UIViewPropertyAnimator instances for each set of animations\n- This happens with linear curves and springs\n- Passing 0 as the durationFactor fixes this issue, unless you want to impact the duration of the continuation\n- See the attached sample project and video for the example"
    email: keithbsmiley@gmail.com
    modified: "2017-09-27T03:32:47.01134Z"
    number: "34675414"
    number_intvalue: 34675414
    originated: 26-Sep-2017 20:32
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: iOS 11
    reproducible: Always
    resolved: ""
    status: Open
    title: Reusing a previously reversed UIViewPropertyAnimator ends up in slow subsequent animations
