apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34329423"
    labels:
        datastore_id: "5034432402554880"
data:
    classification: Serious Bug
    created: "2017-09-08T11:58:59.05458Z"
    description: "Area:\r\nCFNetwork Framework\r\n\r\nSummary:\r\n\r\nURLProtocol client provided by NSURLSession to the NSURLProtocol instance is not handling cookies in it's\r\n-URLProtocol:wasRedirectedToRequest:redirectResponse:\r\n-URLProtocol:didReceiveResponse:cacheStoragePolicy:\r\nmethods when it receives NSHTTPURLResponse instance as a response.\r\n\r\nInstead the responsibility of handling cookies is shifted to the NSURLProtocol instance.\r\nWhen CFNetworks HTTP protocol implementation is instantiated with a task originating from the top level session it is able to resolve session's cookie storage properly (via private API) and add cookies to it.\r\nBut when it is instantiated with task originating from different session (like in case of CustomHTTPProtocol), cookies are being added only to the nested session's cookie storage.\r\nAnd there is no way to work this around and explicitly add cookies to the relevant  session's storage as NSURLProtocol instances have no public way to find out which session they are running in, as -[NSURLSessionTask session] property is private.\r\n\r\nSo if NSURLSession's protocol client was hadnling cookies in  \r\n-URLProtocol:wasRedirectedToRequest:redirectResponse:\r\n-URLProtocol:didReceiveResponse:cacheStoragePolicy:\r\neverything would just work as expected and no work-around would be necessary.\r\nAnd if -[NSURLSessionTask session] was exposed, at least work-around would be possible.\r\nBut currently there is no way of implementing proper cookie support in custom HTTP protocols. \r\n\r\nSteps to Reproduce:\r\n\r\nAdd CustomHTTPProtocol, CacheStoragePolicy, CanonicalRequest, QNURLSessionDemux from CustomHTTPProcol sample (https://developer.apple.com/library/content/samplecode/CustomHTTPProtocol/Introduction/Intro.html) to your target.\r\n\r\nThen add and execute the following code:\r\n\r\n#import \"CustomHTTPProtocol.h\"\r\n\r\nBOOL isCookiePresent(NSHTTPCookieStorage *storage, NSURL *url, NSString *cookieName) {\r\n    NSPredicate *predicate = [NSPredicate predicateWithBlock:^BOOL(NSHTTPCookie *cookie, id bindings) {\r\n        return [cookie.name isEqualToString:cookieName];\r\n    }];\r\n    return [[storage cookiesForURL:url] filteredArrayUsingPredicate:predicate].count != 0;\r\n}\r\n\r\nvoid testCookies(NSArray *protocolClasses) {\r\n    NSString *cookieName = @\"sample_cookie\";\r\n    NSURL *setCookiesURL = [NSURL URLWithString:@\"https://httpbin.org/cookies/set?sample_cookie=sample_value\"];\r\n    NSURL *referenceURL = [NSURL URLWithString:@\"https://httpbin.org\"];\r\n\r\n    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration ephemeralSessionConfiguration];\r\n    configuration.protocolClasses = protocolClasses;\r\n    configuration.HTTPCookieAcceptPolicy = NSHTTPCookieAcceptPolicyAlways; // just to be sure\r\n    NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];\r\n    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);\r\n    [[session dataTaskWithURL:setCookiesURL completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\r\n        NSLog(@\"Request succeeded: %d\", error == nil);\r\n        NSLog(@\"Is cookie present: %d\", isCookiePresent(configuration.HTTPCookieStorage, referenceURL, cookieName));\r\n        dispatch_semaphore_signal(semaphore);\r\n    }] resume];\r\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\r\n}\r\n\r\nint main(int argc, const char * argv[]) {\r\n    @autoreleasepool {\r\n        testCookies(nil);\r\n        NSLog(@\"---\");\r\n        testCookies(@[[CustomHTTPProtocol class]]);\r\n    }\r\n    return EXIT_SUCCESS;\r\n}\r\n\r\nNote: it is not required to be in main(), it may be in a unit test or whatnot…\r\n\r\nExpected Results:\r\n\r\nRequest succeeded: 1\r\nIs cookie present: 1\r\n---\r\nRequest succeeded: 1\r\nIs cookie present: 1\r\n\r\nActual Results:\r\n\r\nRequest succeeded: 1\r\nIs cookie present: 1\r\n---\r\nRequest succeeded: 1\r\nIs cookie present: 0\r\n\r\nVersion/Build:\r\nTested on iOS 10.3, iOS 9.3, macOS 10.12\r\nNote: on iOS 11 request fails to complete with CustomHTTPProtocol…\r\n\r\nConfiguration:"
    email: 0x00001eaf@gmail.com
    modified: "2017-09-08T12:03:41.89435Z"
    number: "34329423"
    number_intvalue: 34329423
    originated: September 8 2017
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: iOS 10.3, iOS 9.3, macOS 10.12
    reproducible: Always
    resolved: ""
    status: Open
    title: Cookies are not handled by NSURLSession's URLProtocol client
