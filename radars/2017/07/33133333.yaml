apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "33133333"
    labels:
        datastore_id: "5043342748418048"
data:
    classification: ""
    created: "2017-07-05T13:25:00.46678Z"
    description: "According to the docs a UIView's accessibilityFrame is equivalent the view's frame by default. See https://developer.apple.com/documentation/objectivec/nsobject/1615111-accessibilityframe\r\n\r\nContrary to that, on iOS 10.3.2 and 10.3.3 the accessibiltyFrame is always CGRectZero.\r\n\r\nIf you turn on VoiceOver in the settings on the device, then suddenly the accessibilityFrame's are correct (non-zero) again.\r\n\r\nThis regression has big implications, e.g. breaking testing frameworks like EarlGrey.\r\n\r\nSteps to Reproduce:\r\n@IBAction func buttonClicked(_ sender: UIButton) {\r\n  NSLog(\"frame: %@\", NSStringFromCGRect(sender.frame));\r\n  NSLog(\"accessibilityFrame: %@\", NSStringFromCGRect(sender.accessibilityFrame));\r\n}\r\n\r\nExpected Results:\r\nframe: {{x, y}, {z, w}}\r\naccessibilityFrame: {{x, y}, {z, w}}\r\n\r\nObserved Results:\r\nframe: {{x, y}, {z, w}}\r\naccessibilityFrame: {{0, 0}, {0, 0}}\r\n\r\nVersion:\r\n10.3.2, 10.3.3 are surely affected, don't have access to others.\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nTurning on/off VoiceOver affects it. But it shouldn't according to the documentation."
    email: simonracz@gmail.com
    modified: "2017-07-05T13:27:41.42411Z"
    number: "33133333"
    number_intvalue: 33133333
    originated: 05.07.2017
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "10.3"
    reproducible: always
    resolved: ""
    status: open
    title: accessibilityFrame is always CGRectZero
