apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "33453254"
    labels:
        datastore_id: "5014431712935936"
data:
    classification: ""
    created: "2017-07-21T13:13:09.63663Z"
    description: "When setting the 'kCMSampleBufferAttachmentKey_PostNotificationWhenConsumed' attachment on a CMSampleBufferRef and enqueueing the CMSampleBufferRef into a AVSampleBufferDisplayLayer, I expect the 'kCMSampleBufferConsumerNotification_BufferConsumed' notification to be posted when the buffer has been consumed. \r\n\r\nIt works as expected when running in the simulator, but the notification is never posted when running on a real device.\r\n    \r\n\r\n\r\n\r\n\r\nCode to reproduce issue:\r\n\r\n#import \"ViewController.h\"\r\n@import AVFoundation;\r\n@import UIKit;\r\n@import CoreVideo;\r\n\r\n@interface SampleBufferView : UIView\r\n@property (nonatomic, readonly) AVSampleBufferDisplayLayer *sampleBufferDisplayLayer;\r\n@end\r\n\r\n@implementation SampleBufferView\r\n\r\n+ (Class)layerClass {\r\n    return [AVSampleBufferDisplayLayer class];\r\n}\r\n- (AVSampleBufferDisplayLayer *)sampleBufferDisplayLayer {\r\n    return (AVSampleBufferDisplayLayer *)self.layer;\r\n}\r\n@end\r\n\r\n@interface ViewController ()\r\n@property (nonatomic, readonly) SampleBufferView *sampleBufferView;\r\n@end\r\n\r\n@implementation ViewController\r\n\r\n///This callback is only called when running in simulator - not when running on an actual device.\r\nvoid cmSampleBufferConsumedNotificationCallback (CFNotificationCenterRef center,\r\n                           void * observer,\r\n                           CFStringRef name,\r\n                           const void * object,\r\n                           CFDictionaryRef userInfo) {\r\n    NSLog(@\"Successfully received notification: '%@'\", name);\r\n}\r\n\r\n- (void)loadView {\r\n    self.view = [SampleBufferView new];\r\n}\r\n\r\n-(void)viewDidLoad\r\n{\r\n    [super viewDidLoad];\r\n\r\n    //Register observer for the 'kCMSampleBufferConsumerNotification_BufferConsumed' notification\r\n    CFNotificationCenterRef center = CFNotificationCenterGetLocalCenter();\r\n    CFNotificationCenterAddObserver(center, NULL, cmSampleBufferConsumedNotificationCallback,\r\n                                    kCMSampleBufferConsumerNotification_BufferConsumed,\r\n                                    NULL,\r\n                                    CFNotificationSuspensionBehaviorDeliverImmediately);\r\n\r\n}\r\n\r\n- (SampleBufferView *)sampleBufferView {\r\n    return (SampleBufferView *)self.view;\r\n}\r\n\r\n- (void)viewDidAppear:(BOOL)animated {\r\n    [super viewDidAppear:animated];\r\n    [self displayTestBuffer];\r\n}\r\n\r\n- (void)displayTestBuffer {\r\n\r\n    NSDictionary *attributes = @{ (id)kCVPixelBufferIOSurfacePropertiesKey: @{} };\r\n\r\n    CVPixelBufferRef pixelBuffer;\r\n    if (CVPixelBufferCreate(kCFAllocatorDefault,\r\n                            1920,\r\n                            1080,\r\n                            kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange,\r\n                            (__bridge CFDictionaryRef)attributes,\r\n                            &pixelBuffer) != kCVReturnSuccess) {\r\n        [NSException raise:NSInternalInconsistencyException\r\n                    format:@\"Failure in CVPixelBufferCreate\"];\r\n        return;\r\n    }\r\n\r\n    CMVideoFormatDescriptionRef formatDescription;\r\n    if (CMVideoFormatDescriptionCreateForImageBuffer(kCFAllocatorDefault,\r\n                                                     pixelBuffer,\r\n                                                     &formatDescription) != noErr) {\r\n        [NSException raise:NSInternalInconsistencyException\r\n                    format:@\"Failure in CMVideoFormatDescriptionCreateForImageBuffer\"];\r\n        return;\r\n    }\r\n\r\n    CMSampleBufferRef sampleBuffer;\r\n    if (CMSampleBufferCreateReadyWithImageBuffer(kCFAllocatorDefault,\r\n                                                 pixelBuffer,\r\n                                                 formatDescription,\r\n                                                 &kCMTimingInfoInvalid,\r\n                                                 &sampleBuffer) != noErr) {\r\n        [NSException raise:NSInternalInconsistencyException\r\n                    format:@\"Failure in CMSampleBufferCreateReadyWithImageBuffer\"];\r\n        return;\r\n    }\r\n\r\n    //Set attachment 'kCMSampleBufferAttachmentKey_PostNotificationWhenConsumed' - will only post a notification when running in simulator, not when running on a real device\r\n    CFDictionaryRef userInfo = CFDictionaryCreate(NULL, NULL, NULL, 0, NULL, NULL);\r\n    CMSetAttachment(sampleBuffer, kCMSampleBufferAttachmentKey_PostNotificationWhenConsumed,\r\n                    userInfo, kCMAttachmentMode_ShouldPropagate);\r\n    CFRelease(userInfo);\r\n\r\n\r\n    //Set attachment 'kCMSampleAttachmentKey_DisplayImmediately'\r\n    CFArrayRef attachmentsArray = CMSampleBufferGetSampleAttachmentsArray(sampleBuffer, true);\r\n    CFMutableDictionaryRef attachments = (CFMutableDictionaryRef)CFArrayGetValueAtIndex(attachmentsArray, 0);\r\n    CFDictionarySetValue(attachments, kCMSampleAttachmentKey_DisplayImmediately, kCFBooleanTrue);\r\n\r\n    [self.sampleBufferView.sampleBufferDisplayLayer enqueueSampleBuffer:sampleBuffer];\r\n\r\n    CVPixelBufferRelease(pixelBuffer);\r\n    CFRelease(formatDescription);\r\n    CFRelease(sampleBuffer);\r\n}\r\n\r\n@end"
    email: Chylis88@gmail.com
    modified: "2017-07-21T13:13:09.63685Z"
    number: "33453254"
    number_intvalue: 33453254
    originated: July 21 2017, 3:11
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: ""
    reproducible: Yes
    resolved: ""
    status: Open
    title: 'AVSampleBufferDisplayLayer: ''kCMSampleBufferAttachmentKey_PostNotificationWhenConsumed'' not firing on real device'
