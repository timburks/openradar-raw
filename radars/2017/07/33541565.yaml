apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "33541565"
    labels:
        datastore_id: "6142555439759360"
data:
    classification: ""
    created: "2017-07-26T16:14:36.97282Z"
    description: "Xcode copies swift.*dylibs to a device every time I build the app. Though, I would expect it to happen only once.\r\n\r\nI understand that the root of this issue is unstable Swift ABI. Therefore each app must have its copy of the swift libraries.\r\nIt is very likely that I am missing something, but I see no reason why the following would not work:\r\n\r\nUpon the first run on a device, Xcode checks whether current runtime is available on the device. If not, then Xcode installs the libraries into some appropriate location (or the device fetches them from authorized source, or uses another way to make sure the libraries are not malicious). If the runtime is there already, then Xcode just installs the app. Then the app can be run resolving @rpath to, let's say, '/runtimes/deadbeef' (where deadbeef is the version of the current runtime).\r\n\r\nThe same goes for the AppStore: upon installing the app, device fetches required runtime if needed.\r\n\r\nThis way there are no duplications on a user' device (multiple runtimes stored in one place). Also, when the ABI is finally stable one could just drop this check upon app installation, making the transition smooth.\r\n\r\nâ€‹What am I missing?"
    email: 1101.debian@gmail.com
    modified: "2017-07-26T16:14:36.97306Z"
    number: "33541565"
    number_intvalue: 33541565
    originated: July 26 2017
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: Yes
    resolved: ""
    status: Open
    title: Swift libraries and frameworks are being copied to the device all the time
