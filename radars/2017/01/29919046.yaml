apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "29919046"
    labels:
        datastore_id: "4944104509145088"
data:
    classification: Crash
    created: "2017-01-08T20:29:39.74124Z"
    description: "Summary:\r\nOur app recently started using HLS streams to deliver some tutorial / on boarding videos. These were simply presented as a nested AVPlayerViewController using normal UIViewController containment.\r\n\r\nSince then, we have started receiving crash reports from the wild indicating that when the user uses the built-in full-screen presentation button, and then dismisses the fullscreen video, occasionally, the app will crash, and present to us information about UIViewControllerHierarchyInconsistency that comes from *private* childviewcontrollers of AVPlayerViewController (AVFullScreenPlaybackControlsViewController and AVFullScreenViewController)\r\n\r\nSince this involves private classes, consuming code can't fix the issue.\r\n\r\nSteps to Reproduce:\r\n1. Create an AVPlayerViewController\r\n2. Assign a simple HLS Stream (wrapped in an AVPlayerItem)\r\n3. Configure it to not allow picture-in-picture and not updatesNowPlayingInfoCenter\r\n4. Present AVPlayerView as a childViewController using addChildViewController\r\n5. Either autoplay or user taps to play video\r\n6. User taps the standard playback control to toggle the video into fullscreen\r\n7. User Taps to dismiss from fullscreen\r\n\r\nExpected Results:\r\nUser should be able to tap to present fullscreen & dismiss, indefinitely, without ever seeing a crash.\r\n\r\nActual Results:\r\n(rarely) the app crashes with unhandled UIViewControllerHierarchyInconsistency exception which states an inconsistency between internal UIViewControllers that are part of AVPlayerViewController\r\n\r\n-- See attached log for exact callstack, & unhandled exception line.\r\n\r\nVersion:\r\n- 6% iOS 9.? (I can dig deeper if necessary)\r\n- 4% iOS 10.0.2\r\n- 7% iOS 10.1.1\r\n- 94% iOS 10.2.0\r\n\r\nI suspect this just reflects our current user distribution.\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nOur crash reports from the wild document that this affects all iPhone-class devices that we currently see. It does not appear to affect iPads.\r\n\r\n- 14% iPhone 6\r\n- 23% iPhone 6S\r\n- 15% iPhone 7\r\n(remainder is other iPhone devices)\r\n\r\nAttachments:\r\n============= Begin 'AVPlayerViewController_FullScreen_Crash.log' =============\r\nFatal Exception: UIViewControllerHierarchyInconsistency\r\nchild view controller:<AVFullScreenPlaybackControlsViewController: 0x15f104c00> should have parent view controller:<AVPlayerViewController: 0x15f0cf800> but actual parent is:<AVFullScreenViewController: 0x15e5c5080>\r\n Raw Text\r\n\r\n0\tCoreFoundation\t__exceptionPreprocess\r\n1\tlibobjc.A.dylib\tobjc_exception_throw\r\n2\tCoreFoundation\t-[NSException initWithCoder:]\r\n3\tUIKit\t-[UIView(Hierarchy) _associatedViewControllerForwardsAppearanceCallbacks:performHierarchyCheck:isRoot:]\r\n4\tUIKit\t-[UIView(Hierarchy) _willMoveToWindow:withAncestorView:]\r\n5\tUIKit\t-[UIView(Internal) _addSubview:positioned:relativeTo:]\r\n6\tAVKit\t-[AVPlayerViewController _updatePlaybackControlsViewController]\r\n7\tAVKit\t-[AVPlayerViewController observeValueForKeyPath:ofObject:change:context:]\r\n8\tFoundation\t-[NSKeyValueObservance observeValueForKeyPath:ofObject:change:context:]\r\n9\tFoundation\tNSKeyValueNotifyObserver\r\n10\tFoundation\tNSKeyValueDidChange\r\n11\tFoundation\t-[NSObject(NSKeyValueObserverNotification) didChangeValueForKey:]\r\n12\tAVKit\t-[AVPlayerView _updateViewWindowState]\r\n13\tAVKit\t-[AVPlayerView setFrame:]\r\n14\tUIKit\t-[UIView(Geometry) _applyAutoresizingMaskWithOldSuperviewSize:]\r\n15\tCoreFoundation\t__53-[__NSArrayM enumerateObjectsWithOptions:usingBlock:]_block_invoke\r\n16\tCoreFoundation\t-[__NSArrayM enumerateObjectsWithOptions:usingBlock:]\r\n17\tUIKit\t-[UIView(Geometry) resizeSubviewsWithOldSize:]\r\n18\tUIKit\t-[UIView(Geometry) setFrame:]\r\n19\tUIKit\t-[UIViewController window:statusBarWillChangeFromHeight:toHeight:windowSizedViewController:]\r\n20\tUIKit\t-[UIViewController window:statusBarWillChangeFromHeight:toHeight:]\r\n21\tUIKit\t-[UIWindow handleStatusBarChangeFromHeight:toHeight:]\r\n22\tUIKit\t+[UIWindow _noteStatusBarHeightChanged:oldHeight:forAutolayoutRootViewsOnly:]\r\n23\tUIKit\t__79-[UIApplication _setStatusBarHidden:animationParameters:changeApplicationFlag:]_block_invoke\r\n24\tUIKit\t+[UIView(UIViewAnimationWithBlocks) _setupAnimationWithDuration:delay:view:options:factory:animations:start:animationStateGenerator:completion:]\r\n25\tUIKit\t+[UIView(UIViewAnimationWithBlocks) animateWithDuration:animations:completion:]\r\n26\tUIKit\t-[UIApplication _setStatusBarHidden:animationParameters:changeApplicationFlag:]\r\n27\tUIKit\t-[UIApplication _updateCurrentStatusBarViewControllerAppearance]\r\n28\tUIKit\t-[UIViewController setNeedsStatusBarAppearanceUpdate]\r\n29\tUIKit\t-[UIViewController setNeedsStatusBarAppearanceUpdate]\r\n30\tUIKit\t-[UIViewController _setPresentedStatusBarViewController:]\r\n31\tUIKit\t-[UIViewController _presentViewController:modalSourceViewController:presentationController:animationController:interactionController:completion:]\r\n32\tUIKit\t-[UIViewController _presentViewController:withAnimationController:completion:]\r\n33\tUIKit\t-[UIViewController _performCoordinatedPresentOrDismiss:animated:]\r\n34\tUIKit\t-[UIViewController presentViewController:animated:completion:]\r\n35\tAVKit\t-[AVPlayerViewController _transitionToFullScreenViewControllerAnimated:completionHandler:]\r\n36\tAVKit\t-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) fullScreenButtonTapped:]\r\n37\tAVKit\t-[AVPlaybackControlsViewController fullScreenButtonTapped:]\r\n38\tUIKit\t-[UIApplication sendAction:to:from:forEvent:]\r\n39\tUIKit\t-[UIControl sendAction:to:forEvent:]\r\n40\tUIKit\t-[UIControl _sendActionsForEvents:withEvent:]\r\n41\tUIKit\t-[UIControl touchesEnded:withEvent:]\r\n42\tUIKit\t-[UIWindow _sendTouchesForEvent:]\r\n43\tUIKit\t-[UIWindow sendEvent:]\r\n44\tUIKit\t-[UIApplication sendEvent:]\r\n45\tUIKit\t_UIApplicationHandleEventQueue\r\n46\tCoreFoundation\t__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__\r\n47\tCoreFoundation\t__CFRunLoopDoSources0\r\n48\tCoreFoundation\t__CFRunLoopRun\r\n49\tCoreFoundation\tCFRunLoopRunSpecific\r\n50\tGraphicsServices\tGSEventRunModal\r\n51UIKit\tUIApplicationMain\r\n52\t[redacted]\tmain.m line 17\tmain\r\n53\tlibdispatch.dylib\t(Missing)\r\n============= End 'AVPlayerViewController_FullScreen_Crash.log' =============\r\n\r\n\r\nDuplicate of 25873700"
    email: fbartho@gmail.com
    modified: "2017-06-15T00:39:21.53544Z"
    number: "29919046"
    number_intvalue: 29919046
    originated: 08-Jan-2017 12:25 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS+SDK
    product_version: iOS 9/iOS 10
    reproducible: ""
    resolved: ""
    status: Open-Duplicate
    title: '[iPhone] Crash when user dismisses AVPlayerViewController from fullscreen mode.'
