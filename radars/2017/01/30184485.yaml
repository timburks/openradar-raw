apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "30184485"
    labels:
        datastore_id: "4945733308383232"
data:
    classification: UI/Usability
    created: "2017-01-25T11:18:35.39331Z"
    description: |-
        When dealing with share or action extensions, there is a documentation missing that explains the overall picture. It is very confusing. What Xcode generates, and what the documentation says, is that an `NSExtensionContext` can have multiple input items. It does not explain how these represent the users intent of sharing one or multiple things.

        For example the Photos app only hands over a single `NSExtensionItem` with multiple `NSItemProvider`, one for each image that was shared. So it seems that the `NSItemProvider` represent the users intent of sharing items and each provider represents one thing the user actually wanted to share.

        Safari on the other hand hands over two `NSExtensionItem` if the user wants to share a single image. Each of them having one `NSItemProvider`. One of them contains the image and one the URL. So it seems that `NSExtensionItem` are used to represent the same data in a different way. But if this is true, there also is an item providerâ€™s `hasItemConformingToTypeIdentifier:` and the corresponding `loadItemForTypeIdentifier:` which can be used to transform data between different representations.

        So at first it seems that NSExtensionItem and `loadItemForTypeIdentifier:` serve the same purpose. However I am sure there is another reason for this. The problem is, with the lack of documentation on this, it is very hard to understand how to pick which items to process.
    email: michaelhochs@googlemail.com
    modified: "2017-01-25T11:18:35.39345Z"
    number: "30184485"
    number_intvalue: 30184485
    originated: 25-Jan-2017 12:18 PM
    parent_number: '&{NULL_VALUE}'
    product: Documentation
    product_version: "10.2"
    reproducible: Always
    resolved: ""
    status: Open
    title: There needs to be a document describing the differences of NSExtensionItem, NSItemProvider and the items from an NSItemProvider
