apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "30288494"
    labels:
        datastore_id: "5017642670751744"
data:
    classification: Enhancement
    created: "2017-01-31T18:17:10.24127Z"
    description: "SKStoreReviewController is a welcome addition to StoreKit. It is in everyone's best interests to standardise how reviews are prompted for and the streamlined process means more ratings and reviews should be submitted. As a developer, I'm also glad to see that users have the ability to disable review requests globally, as a way to alleviate tension that can be caused by prompting for reviews.\r\n\r\nHowever I believe the current format has a significant problem since it is modal and by design is blocking the user from doing anything else in the app until they decide to ignore it or go through with the review. As developers we can be careful to try prompt at the most opportune times but by the nature of mobile apps, if the user current has our app on screen then there's an extremely high likelihood that there is a specific task they want to complete.\r\n\r\nI think that the current modal design of SKStoreReviewController will lead to a high percentage of dismissals, and to many users deciding to disable the alerts globally.\r\n\r\nBy contrast, enhanced notifications in iOS provide a fantastic way for users to interact with content without having to switch to another app and without having to immediately interrupt their current task. Notifications inform the user of something important but they don't block interaction with the rest of the screen. The user can complete their task first and then turn their full attention to the notification.\r\n\r\nI believe that a similar design, whether based on the same APIs as enhanced notifications or not, could significantly improve the effectiveness of SKStoreReviewController.\r\n\r\n- An app calls on SKStoreReviewController requestReview()\r\n- iOS decides based on policy whether it is appropriate to show a request at this time\r\n- If iOS decides to show the request, the interface slides down from the top of the screen like a notification\r\n- User can dismiss the UI by swiping up, or waiting, just as they would a regular notification\r\n- The user can pull it down or tap to reveal a rating UI. Crucially users can complete whatever task they were intending to before interacting with the notification\r\n\r\nIf SKStoreReviewController used an enhanced notification style interface, I believe it would reduce frustration caused to users caused by modal dialogues. This would lead to fewer users disabling the prompts, and more ratings being submitted to the App Store.\r\n\r\n\r\nSTEPS TO REPRODUCE\r\nCall requestReview() on the new SKStoreReviewController\r\n\r\nEXPECTED RESULTS\r\nIdeally: The interface presented is not modal. The user can choose to interact with it immediately or continue with their current task.\r\n\r\nACTUAL RESULTS\r\nThe interface is modal and the user has no option but to interact with it before they can complete their current task. \r\n\r\nCONFIGURATION\r\nAny iPhone or iPad\r\n\r\nVERSION & BUILD\r\niOS 10.3 14E5230e"
    email: poppoppop@gmail.com
    modified: "2017-01-31T18:17:10.24154Z"
    number: "30288494"
    number_intvalue: 30288494
    originated: January 31 2017
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: "10.3"
    reproducible: Always
    resolved: ""
    status: Open
    title: SKStoreReviewController should not be modal
