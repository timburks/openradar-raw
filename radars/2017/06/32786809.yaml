apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "32786809"
    labels:
        datastore_id: "6070042600931328"
data:
    classification: Bug
    created: "2017-06-18T15:47:58.3724Z"
    description: "Summary:\r\nWhen a function with a protocol as a generic constraint is sent a mismatched parameter, Xcode project simply segment faults or in playground,  crashes the LLDB RPC server; note that the function must also access the protocol's associated type.\r\n\r\nSteps to Reproduce:\r\n1. Create a generic function that uses a protocol with associated types as its generic constraint.\r\n2. In order to also access the protocol's associatedtype, create a simple escaping completion handler that does so.\r\nThe function signature should look something like this\r\n\r\nfunc load<R: Resource>(resource: R, completion: @escaping (R.Content?) -> ()) \r\n\r\n3. Call the function with a mismatched parameter. \r\nload(resource: 1) { res in\r\n}\r\n\r\nExpected Results:\r\nI expected the Swift compiler to saying something in the lines of \"Cannot convert type value 'Int' to expected argument type 'Resource'\r\n\r\nObserved Results:\r\nThe Xcode project simply spits out a segmentation fault exit 11. In playground, Xcode simply says an internal error has occurred and that the LLDB  RPC server has crashed.\r\n\r\nVersion:\r\nXcode 8.3.3 (8E3004b)\r\nmacOS Sierra Version 10.12.5"
    email: mkchoi212@gmail.com
    modified: "2017-06-18T15:47:58.37272Z"
    number: "32786809"
    number_intvalue: 32786809
    originated: June 15 2017
    parent_number: '&{NULL_VALUE}'
    product: Xcode Playground
    product_version: 8.3.3
    reproducible: Always
    resolved: ""
    status: Open
    title: LLDB RPC Server crashing in Playground
