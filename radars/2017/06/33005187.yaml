apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "33005187"
    labels:
        datastore_id: "4991528531394560"
data:
    classification: ""
    created: "2017-06-27T15:28:46.30658Z"
    description: "Area:\r\nCFNetwork Framework\r\n\r\nSummary:\r\nSome security enthusiasts are using special proxy servers (Charles Proxy, MITM Proxy) to inspect application traffic. \r\n\r\nTo inspect HTTPS traffic these proxy servers require user to install custom TLS root certificate on their device. \r\n\r\nSome other security enthusiasts consider the fact that user could install custom TLS root certificate and inspect the traffic to be security vulnerability itself, which should be mitigated by implementing 'Certificate Pinning' in the app. \r\n\r\nActually there is a risk that 'Certificate Pinning' is going to be implemented incorrectly or that there is a bug in existing popular libraries that do this ( see https://github.com/datatheorem/TrustKit/issues ) \r\n\r\n\r\nThat's why I propose to add keys like UseSystemRootsOnly and ExceptionUseSystemRootsOnly ( I just made up these key names  ) to App Transport Security dictionaries on macOS and iOS. \r\n\r\nThe idea is that when these keys are set to true â€” all HTTPS connections should ignore any root certificates installed by user and use only system root certificates chosen by Apple (which are very secure and constantly checked). This will allow app developers to avoid writing code for custom TLS verification.\r\n\r\nThis option is useful for software that is accessing cloud-based backends available only on the Internet. \r\n\r\nObviously a proper support for NSExceptionDomains should be implemented for this option ( ExceptionUseSystemRootsOnly ). Some apps may connect to a different domains both in the cloud and in the local network.\r\n\r\nSteps to Reproduce:\r\n- Create app that use HTTPS backend\r\n- Download Charles Proxy app \r\n- Install its root certificate \r\n- View traffic \r\n- Try to avoid this\r\n\r\nExpected Results:\r\n- Add a key to Info.plist \r\n- Tada! It is impossible to view encrypted TLS traffic, connections wont start even when you installed custom root certificate\r\n\r\nObserved Results:\r\n- You need to write code that does certificate pinning or use some library \r\n- Hard to confirm that your code is correct or dependency does not have bugs\r\n\r\nVersion:\r\nany iOS / macOS version\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:"
    email: andrian@readdle.com
    modified: "2017-06-27T15:28:46.30677Z"
    number: "33005187"
    number_intvalue: 33005187
    originated: June 27, 2017
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: ""
    reproducible: ""
    resolved: ""
    status: ""
    title: Option to disable non-standard root certificates for HTTPS connections
