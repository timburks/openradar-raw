apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "25067682"
    labels:
        datastore_id: "6168816245538816"
data:
    classification: Bug
    created: "2017-06-09T22:30:11.86971Z"
    description: "Summary:\r\nWhen a client-side SSL certificate is used with a web page which uses Websockets, the client-side SSL certificate is not used on the HTTPS connection that establishes the websocket---which the server then rejects because there is no client certificate to verify.\r\n\r\nThis effectively prevents websites which use client-side SSL certificates from being able to use websockets.\r\n\r\nThis is particularly debilitating for web applications which are accessible behind reverse proxy servers which require client-side certificates to allow access to intranet web resources without VPN.\r\n\r\nSteps to Reproduce:\r\n1. Set up a web server with a web application that uses websockets.\r\n2. Either configure that web server to require client-side SSL certificates or set up a reverse proxy which requires client-side SSL certificates and supports websockets.\r\n3. Provision an OS X machine with a client-side SSL certificate that is valid for the previous configuration.\r\n4. Connect to the web page in Safari using that client-side SSL certificate. (If done correctly, you will see a popup dialog for choosing the appropriate certificate when you visit the web page)\r\n\r\nExpected Results:\r\nI would expect the web application to load properly and be entirely usable.\r\n\r\nActual Results:\r\nThe web application at first appears to load, but behind the scenes the attempt to open the web socket has failed. The page either displays an error or appears curiously empty and unresponsive. Opening the javascript console shows the error.\r\n\r\nVersion:\r\nSafari 9.0.3, running on OS X 10.11.3\r\n\r\nNotes:\r\nChrome (tested on build 48.0.2564.116) does not have this problem because it properly uses the client certificate when establishing the websocket connection.\r\n\r\nConfiguration:\r\nSafari:\r\n\r\n  Version:\t9.0.3\r\n  Obtained from:\tApple\r\n  Last Modified:\t6/22/15, 1:25 PM\r\n  Kind:\tIntel\r\n  64-Bit (Intel):\tYes\r\n  Signed by:\tSoftware Signing, Apple Code Signing Certification Authority, Apple Root CA\r\n  Location:\t/Applications/Safari.app\r\n  Get Info String:\t9.0.3, Copyright Â© 2003-2015 Apple Inc.\r\n\r\nSystem Software Overview:\r\n\r\n  System Version:\tOS X 10.11.3 (15D21)\r\n  Kernel Version:\tDarwin 15.3.0\r\n  Boot Volume:\tMacintosh HD\r\n  Boot Mode:\tNormal\r\n  Computer Name:\trquattle-macpro\r\n  User Name:\tRobert Quattlebaum (rquattle)\r\n  Secure Virtual Memory:\tEnabled\r\n  System Integrity Protection:\tEnabled\r\n  Time since boot:\t5 days 19:29"
    email: darconeous@gmail.com
    modified: "2017-06-09T22:30:11.87005Z"
    number: "25067682"
    number_intvalue: 25067682
    originated: March 9 2016
    parent_number: '&{NULL_VALUE}'
    product: Safari
    product_version: 9.0.3
    reproducible: Yes
    resolved: ""
    status: Open
    title: Websockets are broken when used with client-side SSL certificates
