apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "31867264"
    labels:
        datastore_id: "5010009641451520"
data:
    classification: UI/Usability
    created: "2017-04-27T17:55:13.40151Z"
    description: "Summary:\r\nIt is common when developing unit tests to write a failing test method, proceed to write code that conforms to the test code, and then to repeat the process. This configuration is particularly effective when the \"Break on Test Failure\" option is set, so that execution stops immediately in the focused test.\r\n\r\nXcode could streamline this process by ordering tests in order such that the test suites with tests that have failed most recently would be run first, shortening the period of time between \"Build & Test\" and interacting with the test and tested code of interest.\r\n\r\nAlthough Xcode's shortcuts for testing only the selected method or suite are handy for this, it would be clever and welcome if Xcode automatically intuited that some test cases and suites are more likely to be of interest to the developer than others.\r\n\r\n\r\nSteps to Reproduce:\r\n1. Open attached FailingTestsFirst.xcodeproj\r\n2. Build and Test once, triggering a failing testSecondC() method in FailingTestsSecondTests.swift\r\n3. Look at the test log and observe that the tests have been run in order:\r\n\r\ntestFirstA()\r\ntestFirstB()\r\ntestFirstC()\r\ntestSecondA()\r\ntestSecondB()\r\ntestSecondC()\r\n\r\n4. Now \"Build and Test\" again.\r\n\r\n\r\nExpected Results:\r\nKnowing that testSecondC() has failed recently, it would make sense for Xcode to run it before all the others:\r\n\r\ntestSecondC()\r\ntestFirstA()\r\ntestFirstB()\r\ntestFirstC()\r\ntestSecondA()\r\ntestSecondB()\r\n\r\nIf it's too complicated to reorder tests on a test-by-test basis, then it would be sufficient to reorder such that test *suites* are ordered by recency of failure among their tests.\r\n\r\n\r\nObserved Results:\r\nThe run order remains the same regardless of previous failures. This is no big deal in this trivial example where tests take microseconds to run, but in a large test target choosing to implicitly order the running of tests in \"failed recently\" order would eliminate a lot of unnecessary delay, without forcing users to remember to run tests on a more granular level.\r\n\r\n\r\nVersion:\r\nVersion 8.3.2 (8E2002)\r\n\r\n\r\nNotes:\r\n\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: jalkut@gmail.com
    modified: "2017-04-27T17:55:13.40177Z"
    number: "31867264"
    number_intvalue: 31867264
    originated: 27-Apr-2017 01:54 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Version 8.3.2 (8E2002)
    reproducible: Always
    resolved: ""
    status: Open
    title: Tests that failed recently should be prioritized on subsequent tests
