apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "31324614"
    labels:
        datastore_id: "5061894725435392"
data:
    classification: Feature Request
    created: "2017-04-06T14:58:08.81478Z"
    description: "I have 9 years of experience programming for Apple stuff, iOS, MacOS and tvOS.\r\n\r\nAfter all these years you expect to surpass the APIs difficulties and become a master in that programming language but I see this is not happening.\r\n\r\nThis is not happening because APIs are becoming complex and due to to poor documentation Apple writes for them, you end spending 70% of the time fighting the code and trying to understand it.\r\n\r\nLets talk about a recent problem I am having.\r\n\r\nI am creating this video camera application for at least 6 months. I have created a technical incident support to solve the first problem that my code had. Even Apple engineers took 2 month to discover the problem. Now I am having another problem, but I have no money to open a new technical incident. But this is not the problem. The problem is that APIs are very complex and this is preventing people from creating amazing apps for Apple stuff.\r\n\r\nSee what Steve Jobs said about OOP:\r\nhttps://youtu.be/2kjtQnPqq2U?t=41\r\n\r\nTHIS IS HAPPENING AGAIN. Programming for modern OSes is very complex and like Steve said, \"programmers are paying the price\".\r\n\r\nWe need something that simplifies creating stuff.\r\n\r\nFor example: this video camera of mine has thousands of lines just to grab video/audio and write it to file and the code has thousands of problems, of timings, buffer crashes and all kind of crap that should be happening. \r\n\r\nMY SUGGESTION\r\nMy suggestion is the following. Consider SpriteKit. What SpriteKit is? Is it simplistic or simple and powerful? My answer is: SpriteKit is not simplistic. It is simple and powerful.\r\n\r\nThis is what I mean APIs should be designed.\r\n\r\nFor example. Creating a video app should be like this:\r\n\r\nAVVideoCamera *videoCamera = [AVVideoCamera new];\r\nvideoCamera.useCamera = AVFrontCamera;\r\n\r\n// AVVideoCamera should handle image flip for preview\r\n// developers don't care if the camera is sideways, make it right internally. Don't make developers responsible for showing the preview correctly. Handle autorotation too.\r\n\r\n// creating a preview view should be simple\r\nAVPreviewView *myPreviewView = [AVPreviewView metal];\r\nvideoCamera.showPreviewOnView = myPreviewView;\r\n\r\nvideoCamera.outputVideosToCameraRoll = YES;\r\n\r\nvideoCamera.outputVideoToFilePath = myFilePath;\r\nvideoCamera.useMicrophone = AVMainMic;\r\n\r\n\r\n// advanced stuff can be added\r\nvideoCamera.startVideoByFadingInFromColor = blackColor;\r\nvideoCamera.endVideoByFadingOutToColor = pink;\r\nvideoCamera.startMicByFadingIn = YES;\r\nvideoCamera.endMicByFadingOut = YES;\r\n\r\n// this should be the only flag necessary\r\n// the preview view should animate flipping of cameras during\r\n// video recording. AVVideoCamera should handle everything.\r\nvideoCamera.flipFrontBackCameraWithAnimation = YES;\r\nvideoCamera.flipFrontBackAnimation = myAnimation;\r\n\r\n// possibility of adding an overlay that responds to user interaction\r\nvideoCamera.overlay = myOverlay;\r\n\r\n// passing an array of CIFilters to videoCamera\r\n// should be all that is needed to have these filters process the image\r\nvideoCamera.filterChain = myFilterChainArray;\r\n\r\nand THAT'S IT.\r\n\r\nThat should be the only lines necessary to create a video camera, not thousands of lines where the developer have to handle even preview rotations and deal with code that does not work most of the time.\r\n\r\nEvery area of iOS should be simplified by creating simple and powerful APIs. \r\n\r\nMAKE PROGRAMMING EASY AGAIN!"
    email: utugau@gmail.com
    modified: "2017-04-06T15:01:02.42903Z"
    number: "31324614"
    number_intvalue: 31324614
    originated: 29-mar-2017
    parent_number: '&{NULL_VALUE}'
    product: All Apple OSes
    product_version: n/a
    reproducible: n/a
    resolved: ""
    status: open
    title: MAKE PROGRAMMING EASY AGAIN
