apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34865052"
    labels:
        datastore_id: "4979306094657536"
data:
    classification: UI/Usability
    created: "2017-10-06T22:02:05.51242Z"
    description: "Summary:\r\n\r\nIn iOS 10.3, it is possible to programmatically scroll to the bottom of a UITableView with any one of the following lines of code:\r\n\r\n// assumes indexPathOfLastRow defined\r\nself.tableView.scrollToRow(at: indexPathOfLastRow, at: .bottom, animated: true)\r\n\r\nself.tableView.scrollRectToVisible(CGRect(x: 0, y: self.tableView.contentSize.height - 1.0, width: 1.0, height: 1.0), animated: true)\r\n\r\nself.tableView.setContentOffset(CGPoint(x: 0.0, y: self.tableView.contentSize.height), animated: true)\r\n\r\nIn iOS 11 and in current iOS 11.1 beta releases, these lines of code will scroll the table view to near the end but often not to the last cell or to the very end. I am attaching a sample project demonstrating the problem.\r\n\r\nThe attached sample project will reproduce the problem every time. Factors that appear to contribute to the problem are:\r\n• Fixed height cells and fixed height header views.\r\n• If using self-sizing cells and headers, headers and cells being taller than their estimated heights.\r\n• Large quantities of sections or cells.\r\n• Large heights of sections or cells.\r\n• Using animated: true. I can reproduce the issue with animated: false, but animated: true appears to exacerbate the issue.\r\n\r\n\r\nSteps to Reproduce:\r\n\r\n1.  Run the attached sample app.\r\n\r\n\r\nExpected Results:\r\n\r\nAfter waiting 2 seconds, I expect the app to scroll to the bottom of the table or to the last cell in the table.\r\n\r\n\r\nActual Results:\r\n\r\nOn iOS 10.3, the app will scroll to the bottom of the table or to the last cell in the table as expected. On iOS 11 or iOS 11.1, the app will not scroll all the way to the bottom or to the very last cell.\r\n\r\n\r\nVersion/Build:\r\n\r\nXcode Version 9.1 beta (9B37), iOS 11.1 (15B5066f)\r\n\r\n\r\nConfiguration:\r\n\r\niPhone or Ipad, device or simulator.\r\n\r\n\r\n===============\r\n\r\n\r\nThis is the sample code from the sample project I attached. It does not depend on any other classes, except that it needs code to instantiate and present this table view controller.\r\n\r\nclass TableViewController : UITableViewController {\r\n    \r\n    let numSections = 1000\r\n    let numRowsPerSection = 1000\r\n    \r\n    let rowHeight = CGFloat(1000)\r\n    let sectionHeaderHeight = CGFloat(1000)\r\n\r\n    override func viewDidLoad() {\r\n        super.viewDidLoad()\r\n        self.tableView.register(UITableViewCell.self, forCellReuseIdentifier: \"cell\")\r\n        self.tableView.register(UITableViewHeaderFooterView.self, forHeaderFooterViewReuseIdentifier: \"header\")\r\n        self.tableView.rowHeight = self.rowHeight\r\n        self.tableView.sectionHeaderHeight = self.sectionHeaderHeight\r\n    }\r\n    \r\n    override func viewDidAppear(_ animated: Bool) {\r\n        let when = DispatchTime.now() + 2\r\n        DispatchQueue.main.asyncAfter(deadline: when) {\r\n            \r\n            // Any one of these three lines of code will scroll to near the last cell but not quite to the last\r\n            // cell on iOS 11. All three work as expected on iOS 10.\r\n            \r\n            self.tableView.scrollToRow(at: IndexPath(row: self.numRowsPerSection-1, section: self.numSections-1), at: .bottom, animated: true)\r\n//            self.tableView.scrollRectToVisible(CGRect(x: 0, y: self.tableView.contentSize.height - 1.0, width: 1.0, height: 1.0), animated: true)\r\n//            self.tableView.setContentOffset(CGPoint(x: 0.0, y: self.tableView.contentSize.height), animated: true)\r\n        }\r\n    }\r\n    \r\n    \r\n    override func numberOfSections(in tableView: UITableView) -> Int {\r\n        return numSections\r\n    }\r\n    \r\n    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\r\n        return numRowsPerSection\r\n    }\r\n    \r\n    \r\n    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\r\n        let cell = tableView.dequeueReusableCell(withIdentifier: \"cell\", for: indexPath)\r\n        cell.textLabel?.text = \"section \\(indexPath.section), row \\(indexPath.row)\"\r\n        return cell\r\n    }\r\n    \r\n    override func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\r\n        return self.tableView.dequeueReusableHeaderFooterView(withIdentifier: \"header\")\r\n    }\r\n    \r\n}"
    email: johnbrayton@gmail.com
    modified: "2017-10-06T22:07:15.48405Z"
    number: "34865052"
    number_intvalue: 34865052
    originated: "2017-10-06"
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK -> UIKit
    product_version: Xcode Version 9.1 beta (9B37), iOS 11.1 (15B5066f)
    reproducible: Always
    resolved: ""
    status: open
    title: Issues Programmatically Scrolling to Bottom of Table or to Last Table Cell
