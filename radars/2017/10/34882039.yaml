apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34882039"
    labels:
        datastore_id: "5535348801142784"
data:
    classification: Security
    created: "2017-10-09T09:32:04.42193Z"
    description: "Summary:\r\nThis is a duplicate of radar #34875753\n\nRight now, the Xcode unit testing capabilities are limited to subclassing `XCTestCase` and overriding two methods: `setUp` and `tearDown`. This is a really limited workflow because it constrains the expressibility of our unit tests. Here's an example from the open source testing framework Quick:\r\n\r\nvar db: DataBase!\r\n\r\nbeforeEach {\r\n    db = DataBase.testDataBase()\r\n}\r\n\r\nafterEach {\r\n    db.destroy()\r\n}\r\n\r\nit(\"adds new rows to the db\") {\r\n}\r\n\r\ndescribe(\"prepopulated\") {\r\n    beforeEach {\r\n        db = DataBase.populateWithFakeData()\r\n    }\r\n\r\n    it(\"can fetch rows from the db\") {\r\n    }\r\n}\r\n\r\nNesting contexts within each other has fundamentally changed the way I write unit tests, and is fairly standard in the Ruby and JavaScript testing communities. There are libraries like Quick, available at https://github.com/Quick/Quick , but it's up to the developer to know about Quick, to download it, install with CocoaPods or Carthage, and integrate with it. That's a lot of work, and many developers don't bother, so their tests suffer or they just don't write any.\r\n\r\nAnd Quick is limited because it can only integrate with XCTest, so all tests need an additional `import` and have to be done in a specific overridden function:\r\n\r\nimport Quick\r\nclass MySpec: QuickSpec {\r\n  override func spec() {\r\n    // tests go here\r\n  }\r\n}\r\n\r\nThat's two levels of indentation before I've even written a test! I want to be able to write tests in the top level of the test file.\r\n\r\nXcode is in a unique position to be able to do things like transform or inject code into test files before it gets compiled or run â€“ it wouldn't be easy to make a BDD workflow supported in Xcode, but I know Apple is up to the challenge. I just want to write modern tests with the tools that Apple provides.\n\r\n\r\nSteps to Reproduce:\r\n \r\n\r\nExpected Results:\r\n \r\n\r\nActual Results:\r\n \r\n\r\nVersion:\r\n \r\n\r\nNotes:"
    email: weyert@gmail.com
    modified: "2017-10-09T09:32:04.42222Z"
    number: "34882039"
    number_intvalue: 34882039
    originated: 09-Oct-2017 11:31 am
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: Xcode unit testing should support Behaviour-Driven Development workflows
