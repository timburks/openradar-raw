apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34875723"
    labels:
        datastore_id: "6135499479580672"
data:
    classification: ""
    created: "2017-10-08T15:25:27.97507Z"
    description: "Okay so: matchers. Matchers are how developers write assertions in unit tests. Currently the matchers that ship with Xcode are fairly limited. They're a simple function that performs an assert under the hood (I think).\r\n\r\nXCTAssertEqual(objectA, objectB)\r\n\r\nThat's fine but it's not really expressive, and it doesn't take advantage of some really cool techniques used in other languages to unit test. For example, take Nimble. Nimble is a matcher library that can be used with XCTest that provides expressive and extensible matchers. It's open source, available here: https://github.com/Quick/Nimble\r\n\r\nexpect(objectA) == objectB\r\n\r\nHonestly I'd like it if Xcode just _shipped_ with Nimble included, but I get that Apple can't necessarily do that. So instead, I'd suggest copying all the features and capabilities of Nimble. I'm a Nimble maintainer, and it would be awesome if Nimble were completely sherlocked in the next release of Xcode. Here are some other examples from Nimble's readme:\r\n\r\nexpect(1.2).to(beCloseTo(1.1, within: 0.1))\r\nexpect(3) > 2\r\nexpect(\"seahorse\").to(contain(\"sea\"))\r\nexpect([\"Atlantic\", \"Pacific\"]).toNot(contain(\"Mississippi\"))\r\n\r\nLooming forward to hearing back."
    email: ash@ashfurrow.com
    modified: "2017-10-13T12:18:22.4483Z"
    number: "34875723"
    number_intvalue: 34875723
    originated: 8/10/2017
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Closed as dupe (27913646)
    title: Matchers that ship with Xcode's testing framework could be improved
