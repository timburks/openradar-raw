apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34669224"
    labels:
        datastore_id: "4970834942754816"
data:
    classification: Bug
    created: "2017-10-09T08:06:31.04335Z"
    description: "Summary:\r\nThe `no_weak_imports` option, as the man pages say, is used to error instead of weak linking, useful for configure based projects that check if specific functions are available and if they are, use them. With weak imports it would detect them as available, even if they are not, this options seems like the perfect solution to avoid this.\r\n\r\nUnfortunately it is not working correctly when using old deployment targets:\r\n\r\n```\r\ngcc -Wl,-no_weak_imports -Wl,-macosx_version_min -Wl,10.7 -mmacosx-version-min=10.7 conftest.c\r\n```\r\n\r\nsucceeds even though it should fail.\r\n\r\nSteps to Reproduce:\r\nCompile attached sample conftest.c with target set to 10.7:\r\n\r\ngcc -Wl,-no_weak_imports -Wl,-macosx_version_min -Wl,10.7 -mmacosx-version-min=10.7 conftest.c\r\n\r\nand a second time with target set to 10.11:\r\n\r\ngcc -Wl,-no_weak_imports -Wl,-macosx_version_min -Wl,10.11 -mmacosx-version-min=10.11 conftest.c\r\n\r\nExpected Results:\r\nBoth should fail.\r\n\r\nActual Results:\r\nOnly the second one fails as expected:\r\n\r\nUndefined symbols for architecture x86_64:\r\n  \"_mkostemp\", referenced from:\r\n      _main in conftest-ea0305.o\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\nVersion/Build:\r\nLLVM version 9.0.0, (clang-900.0.37) (static support for 21, runtime is 21)\r\n\r\nConfiguration:\r\nmacOS High Sierra 10.13 (17A365)"
    email: ePirat07@gmail.com
    modified: "2017-10-09T08:06:31.04354Z"
    number: "34669224"
    number_intvalue: 34669224
    originated: September 27 2017, 12:31 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Closed
    title: Linker flag no_weak_imports not working as expected
