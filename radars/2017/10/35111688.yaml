apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "35111688"
    labels:
        datastore_id: "4975282784043008"
data:
    classification: Other Bug
    created: "2017-10-21T19:34:54.32125Z"
    description: "Summary:\r\nWhen creating a derived font descriptor with a font family, existing traits such as italic or bold are overwritten or ignored. This can be very confusing. If the behavior is somehow deemed to be correct, then the documentation for [UIFontDescriptor fontDescriptorWithFamily] should be updated to describe this behavior.\r\n\r\nSteps to Reproduce:\r\nvar wrongFontDescriptor = UIFontDescriptor()\r\nwrongFontDescriptor = wrongFontDescriptor.withSymbolicTraits([.traitItalic])!\r\nwrongFontDescriptor = wrongFontDescriptor.withFamily(\"Avenir\")\r\nvar wrongFont = UIFont(descriptor: wrongFontDescriptor, size: 12)\r\n\r\nExpected Results:\r\nI Expect the resulting font to be “Avenir-BookOblique”\r\n\r\nActual Results:\r\nInstead, the resulting font is \"Avenir-Book\"\r\n\r\nVersion:\r\n11.0\r\n\r\nNotes:\r\nThe correct font can be achieved by changing the order of calls building up the font descriptor:\r\n\r\nvar rightFontDescriptor = UIFontDescriptor()\r\nrightFontDescriptor = rightFontDescriptor.withFamily(\"Avenir\")\r\nrightFontDescriptor = rightFontDescriptor.withSymbolicTraits([.traitItalic])!\r\nvar rightFont = UIFont(descriptor: rightFontDescriptor, size: 12)\r\nrightFont.fontName"
    email: fcanas@gmail.com
    modified: "2018-02-16T19:21:03.67271Z"
    number: "35111688"
    number_intvalue: 35111688
    originated: 21-Oct-2017 03:34 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: "11.0"
    reproducible: Always
    resolved: ""
    status: Duplicate of 18035399
    title: Font descriptor with family overrides symbolic traits
