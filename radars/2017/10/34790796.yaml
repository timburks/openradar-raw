apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34790796"
    labels:
        datastore_id: "4957784147755008"
data:
    classification: Other Bug
    created: "2017-10-03T16:01:59.55391Z"
    description: "Summary:\r\n\r\nFor Swift-based frameworks/modules, Xcode generates an Objective-C header named `Module-Swift.h`. Ordinarily this only includes public classes. But if you turn on the \"Allow app extension API only\" setting, then also internal classes are included.\r\n\r\nSteps to Reproduce:\r\n\r\n1. Build the Module scheme of the provided sample app with Xcode 9\r\n2. Inspect the Module-Swift.h contained in the produced Module.framework\r\n3. You will see only the public classes `CustomView` and `AncestorView` \r\n4. Now turn on \"Allow app extension API only\" in the Module target build settings and build again\r\n5. Inspect the same header as in step 1.\r\n\r\nExpected Results:\r\n\r\n- The generated Objective-C header should be identical regardless of the state of this setting\r\n\r\nActual Results:\r\n\r\n- With the setting off, only public classes are showing\r\n- With the setting on, you also see the internal class `SwiftViewController`\r\n\r\nVersion/Build:\r\n\r\nXcode 9.0 (9A235)\r\n\r\nConfiguration:\r\n\r\niMac or MacBook, with Xcode 9 and macOS 10.13\r\n\r\nThe mentioned sample is on my Radar Samples GitHub repo (https://github.com/Cocoanetics/RadarSamples), titled InterfaceTest."
    email: oliver.drobnik@gmail.com
    modified: "2017-10-03T16:01:59.55419Z"
    number: "34790796"
    number_intvalue: 34790796
    originated: 3 Oct 2017
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 9.0 (9A235)
    reproducible: Always
    resolved: ""
    status: Open
    title: Enabling Extension-safe API check changes generated ObjC-Header
