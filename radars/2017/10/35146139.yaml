apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "35146139"
    labels:
        datastore_id: "6718346540089344"
data:
    classification: Serious Bug
    created: "2017-10-26T13:57:20.73114Z"
    description: "Summary:\r\n\r\nAfter building a swift dynamic framework using Xcode9.1 beta 2 as binary and embedding it in another project on a different machine but still using the same Xcode version the build is failing.\r\n\r\nRelated to Github issue https://github.com/usabilla/usabilla-u4a-ios-swift-sdk/issues/66\r\n\r\nSteps to Reproduce:\r\n\r\n1 - Quick way: \r\n\r\n- Uncompress the attached zip file.\r\n- Open the folder DemoProject\r\n- Open the project DemoProject.xcodeproj with Xcode 9.1 beta 2\r\n- Choose a simulator device and build the project\r\n- The build should fail with one of the following messages:\r\n\r\n- cannot load underlying module for 'DemoFramework'\r\n- use of undefined identifier MyDemoFramework  (see screenshot)\r\n\r\nFYI: MyDemoFramework is a public class part of the DemoFramework\r\n\r\n------------------------------\r\n\r\n2 - Long way:\r\n\r\nBuilding the framework:\r\n\r\n- Uncompress the attached zip file\r\n- Open the folder DemoFramework\r\n- Open the project DemoFramework.xcodeproj with Xcode 9.1 beta 2\r\n- Select a generic device type and click Product -> Archive\r\n- After the build succeeds the Window organizer opens\r\n- Select the just built archive and click [export...]\r\n- Select [Built Products] and click [next]\r\n- Choose the export location and click [export]\r\n- In the exported folder, locate the DemoFramework.framework file\r\n\r\nImporting the framework\r\n\r\n- Create a new project on \"another machine\": this step is important because this is the one that is failing (If you embed the project on a project on the same machine that built the framework, the build will succeed).\r\n\r\n- Embed the framework built on the other machine \r\n- Add `import DemoFramework` to your AppDelegate\r\n- At this point, the build might fail (with the error: `cannot load underlying module`) or not\r\n- If the build succeeds then you can add `MyDemoFramework.printSomething()` in the application didFinishLaunchingWithOptions function\r\n- Here the build should fail with `use of undefined identifier MyDemoFramework` (if it has not previously failed at the import step)\r\n\r\n\r\nExpected Results:\r\n\r\nWhen embedding a dynamic framework binary built with Xcode 9.1 beta 2 in a project using the same Xcode version on a different machine, the build should not fail.\r\n\r\nActual Results:\r\n\r\nThe build is failing with one of the following reasons:\r\n\r\n- cannot load underlying module for 'DemoFramework'\r\n- use of undefined identifier MyDemoFramework\r\n\r\n\r\nVersion/Build:\r\nXcode 9 beta 2 (build 9B46)\r\n\r\n---\r\n\r\nResources available here : https://github.com/grimabe/radar-resources/tree/master/openradar-6718346540089344"
    email: benjamin@usabilla.com
    modified: "2017-10-26T14:11:21.41001Z"
    number: "35146139"
    number_intvalue: 35146139
    originated: 24 October 2017
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 9.1 Beta 2
    reproducible: Always
    resolved: ""
    status: ""
    title: '[Xcode 9.1 Beta 2] Build failing with embedded binary framework'
