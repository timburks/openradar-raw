apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "34861659"
    labels:
        datastore_id: "5612627073957888"
data:
    classification: Suggestion
    created: "2017-10-06T19:18:40.55804Z"
    description: "The `UIToolbar` provided by `UINavigationController` is used by lots of apps and interfaces because it is available since the beginning of iOS and also it provides lots of useful behavior using flags as `hidesBarsWhenVerticallyCompact`, `hidesBarsOnTap` and others. Using a custom `UIToolbar` when using a container like `UINavigationController` is quite rare.\r\n\r\nWhile the UITabBar always needs to be offset because it defaults to centralized elements, it is quite common to have toolbars with a single (small) button to the left or right, or two buttons separated by flexible space. The new iPhone X home handle will not overlap the buttons but the toolbar height gets the new sizing.\r\n\r\nI could change to a custom UIToolbar but I will be loosing most of the benefits already provided by the UINavigationController. Thus I see two possibilities:\r\n\r\n1) Provide an explicit flag (e.eg., `hidesBarsWhenVerticallyCompact`, `hidesBarsOnTap`) that I can safely enable to avoid the height change. I know that a single bar button to the left and/or right will not overlap with the home handle.\r\n\r\nOR: \r\n\r\n2) Not so good: Automatically detect that the home handle will not overlap the bar buttons and avoid the height change. While UITabBar tabs will always overlap, the UIToolbar bar buttons have many common cases where single buttons will not overlap resulting in a huge bar with a single button."
    email: felipekellermann@gmail.com
    modified: "2017-10-06T19:18:40.55827Z"
    number: "34861659"
    number_intvalue: 34861659
    originated: October 6 2017, 4:17 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: iOS 11.1b1 (15B5066e)
    reproducible: Always
    resolved: ""
    status: Open
    title: iPhone X - UINavigationController keeping UIToolbar normal heights using explicit setting
