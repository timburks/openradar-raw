apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "31375101"
    labels:
        datastore_id: "5009848378851328"
data:
    classification: ""
    created: "2017-03-31T18:49:26.44974Z"
    description: "The 'public func tableView(_ tableView: UITableView, canPerformAction action: Selector, forRowAt indexPath: IndexPath, withSender sender: Any?) -> Bool' method when implemented in a class that conforms UITableViewDelegate gets sometimes called by the system with nil for the 'indexPath' parameter.\r\n\r\nAs the indexPath parameter is bridged from Objective-C as implicitly unwrapped, this causes a crash and makes the test fail with the following error: \r\n\r\nAssertion Failure: UI Testing Failure - Failure getting snapshot Error Domain=XCTestManagerErrorDomain Code=9 \"Error -25204 getting snapshot for element AXUIElement 0x7f84b5c0ea40 {pid=32894}\" UserInfo={NSLocalizedDescription=Error -25204 getting snapshot for element AXUIElement 0x7f84b5c0ea40 {pid=32894}}\r\n\r\n\r\nApp's backtrace on crash:\r\n\r\n(lldb) thread backtrace\r\n* thread #1: tid = 0x128eaa, 0x000000010c776c3a libswiftFoundation.dylib`static Foundation.IndexPath._unconditionallyBridgeFromObjectiveC (Swift.Optional<__ObjC.NSIndexPath>) -> Foundation.IndexPath + 42, queue = 'com.apple.main-thread', stop reason = EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)\r\n  * frame #0: 0x000000010c776c3a libswiftFoundation.dylib`static Foundation.IndexPath._unconditionallyBridgeFromObjectiveC (Swift.Optional<__ObjC.NSIndexPath>) -> Foundation.IndexPath + 42\r\n    frame #1: 0x0000000108443241 Static`@objc DataSource.tableView(UITableView, canPerformAction : Selector, forRowAt : IndexPath, withSender : Any?) -> Bool + 97 at DataSource.swift:0\r\n    frame #2: 0x00000001095aea31 UIKit`-[UITableView _canPerformAction:forCell:sender:] + 169\r\n    frame #3: 0x00000001098017c6 UIKit`-[UITableViewCell canPerformAction:withSender:] + 86\r\n    frame #4: 0x00000001210a5fc9 UIKit`-[UIResponder(UITextAccessibilityUtilities) _accessibilityHasTextOperations] + 100\r\n    frame #5: 0x000000012107bb7c UIKit`-[UITableViewCellAccessibilityElement _accessibilityHasTextOperations] + 48\r\n    frame #6: 0x00000001211f09ec UIAccessibility`-[NSObject(AXPrivCategory) accessibilityAttributeValue:] + 5945\r\n    frame #7: 0x000000012120bc04 UIAccessibility`_accessibilityAttributesForObject + 767\r\n    frame #8: 0x000000012120b5e8 UIAccessibility`-[NSObject(UIAccessibilityAutomation) _accessibilityUserTestingSnapshotDescendantsWithAttributes:maxDepth:maxChildren:maxArrayCount:] + 1736\r\n    frame #9: 0x000000012120cf96 UIAccessibility`-[NSObject(UIAccessibilityAutomation) _accessibilityUserTestingSnapshotWithOptions:] + 557\r\n    frame #10: 0x00000001211eec0a UIAccessibility`-[NSObject(AXPrivCategory) accessibilityAttributeValue:forParameter:] + 7903\r\n    frame #11: 0x00000001211d8856 UIAccessibility`_copyParameterizedAttributeValueCallback + 211\r\n    frame #12: 0x0000000120869532 AXRuntime`_AXXMIGCopyParameterizedAttributeValue + 216\r\n    frame #13: 0x0000000120863f1c AXRuntime`_XCopyParameterizedAttributeValue + 440\r\n    frame #14: 0x0000000120872de5 AXRuntime`mshMIGPerform + 266\r\n    frame #15: 0x00000001064e93d9 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ + 41\r\n    frame #16: 0x00000001064e9351 CoreFoundation`__CFRunLoopDoSource1 + 465\r\n    frame #17: 0x00000001064e1435 CoreFoundation`__CFRunLoopRun + 2389\r\n    frame #18: 0x00000001064e0884 CoreFoundation`CFRunLoopRunSpecific + 420\r\n    frame #19: 0x000000010e5bda6f GraphicsServices`GSEventRunModal + 161\r\n    frame #20: 0x000000010943dc68 UIKit`UIApplicationMain + 159\r\n    frame #21: 0x000000010462c95f GoOut`main + 111 at AppDelegate.swift:47\r\n    frame #22: 0x000000010cb7e68d libdyld.dylib`start + 1\r\n    frame #23: 0x000000010cb7e68d libdyld.dylib`start + 1\r\n\r\n\r\nAdditional notes:\r\nInterestingly, on iOS 9 simulator this works just fine, no crashes. It's the iOS 10 and above that's problematic\r\n\r\nExpected results:\r\nThis problematic UITableViewDelegate's method should either not be called at all with indexPath=nil or the indexPath type should be marked as optional:\r\n\r\n'public func tableView(_ tableView: UITableView, canPerformAction action: Selector, forRowAt indexPath: IndexPath?, withSender sender: Any?) -> Bool'"
    email: kraina@goout.cz
    modified: "2017-03-31T18:49:26.45Z"
    number: "31375101"
    number_intvalue: 31375101
    originated: 31 March 2017
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "10.0"
    reproducible: ""
    resolved: ""
    status: open
    title: UITableViewDelegate method called with indexPath=nil when running UI tests
