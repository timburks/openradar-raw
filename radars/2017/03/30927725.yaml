apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "30927725"
    labels:
        datastore_id: "4956173568573440"
data:
    classification: ""
    created: "2017-03-08T20:49:49.73224Z"
    description: "Summary:\r\n\r\nThe dictionary returned by `UTTypeCopyDeclaration` used to contain a value for the `kUTTypeIconFileKey` key, for types with an associated icon file.\r\n\r\nOn Sierra, this key is no longer present in the dictionary, meaning we cannot retrieve icons for a specific file type.\r\n\r\nSome types actually contains a value for a key named `_LSIconPath`.\r\n\r\nAs an example, from `/System/Library/CoreServices/CoreTypes.bundle/Contents/Info.plist` and looking at the declaration for `public.data` in `UTExportedTypeDeclarations`, we can see the associated icon with the key `UTTypeIconFile` and the value `GenericDocumentIcon.icns`.\r\n\r\nSo the declaration is correct.\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nSteps to Reproduce:\r\n\r\nCFShow( UTTypeCopyDeclaration( kUTTypeData ) );\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nExpected Results:\r\n\r\nThe `UTTypeIconFile` key should be present in the dictionary.\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nActual Results:\r\n\r\nDictionary looks like:\r\n\r\n{\r\n    UTTypeConformsTo =     (\r\n        \"public.item\"\r\n    );\r\n    UTTypeDescription = data;\r\n    UTTypeIdentifier = \"public.data\";\r\n    UTTypeTagSpecification =     {\r\n        \"public.mime-type\" =         (\r\n            \"application/octet-stream\"\r\n        );\r\n    };\r\n    \"_LSIconPath\" = \"Contents/Resources/GenericDocumentIcon.icns\";\r\n}\r\n\r\nInstead of `UTTypeIconFile`, there's now a `_LSIconPath` key.\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nVersion:\r\n\r\nmacOS Sierra 10.12.4 Beta (16E183b)\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nUpdate from Developer Bug Reporting Team:\r\n\r\nWe have determined that this is an issue for you to resolve.\r\n\r\nTo get the icon for a UTI, use [[NSWorkspace sharedWorkspace] iconForFileType:@\"Your UTI Here\"]. You should not attempt to read the icon file directly as your process may not have read access at that location.\r\n\r\nWe are closing this bug report.\r\n\r\nIf you have questions about the resolution, or if this is still a critical issue for you, then please update your bug report with that information.\r\n\r\nPlease be sure to regularly check new Apple releases for any updates that might affect this issue.\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nUpdate from myself:\r\n\r\nSorry, but respectfully disagree. This is clearly a bug.\r\nI'm perfectly aware of NSWorkspace, and that does not solve the problem at all...\r\n\r\n - NSWorkspace is an Objective-C API, while UTIs can be used in C.\r\n - One can need an icon for a specific UTI, without knowing the exact file extension (same type may have multiple extensions).\r\n\r\nMore important, the official documentation still mentions kUTTypeIconFileKey can be used to retrieve the UTI's associated icon.\r\nIf you want to get rid of it, then officially deprecate this symbol, and give developers some time to react, rather than remove the feature on a minor macOS update...\r\nOtherwise, you just might break existing software that relies on features you advertise in your official documentation.\r\n\r\nRegards,\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nUpdate from Apple Developer Relations:\r\n\r\nThanks for your update.\r\n\r\nWe are reopening this report, and we'll see if any further action is possible.\r\n\r\nIf you have questions, please update your report at:\r\n\r\nhttp://bugreport.apple.com\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nUpdate from Apple Developer Relations:\r\n\r\nEngineering has provided the following information regarding this issue:\r\n\r\n>  - NSWorkspace is an Objective-C API, while UTIs can be used in C.\r\n\r\nMany Apple APIs are written in Objective-C. An app that is primarily written in C can still use them.\r\n\r\n> - One can need an icon for a specific UTI, without knowing the exact file extension (same type may have multiple extensions).\r\n\r\nThe API we suggested takes a UTI as input.\r\n\r\n> If you want to get rid of it, then officially deprecate this symbol, and give developers some time to react, rather than remove the feature on a minor macOS update...\r\n\r\nThis behaviour was changed in macOS Sierra GM, not a minor update.\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nUpdate from myself:\r\n\r\nWell, I was not aware this behaviour was changed as early as the Sierra GM.\r\nThen of course it is not a minor update.\r\n\r\nI know I can pass a UTI string to NSWorkspace, or I can use objc_msgSend from C.\r\nIt was just easier to have this information directly available from the UTI's declaration dictionary. Oh well...\r\n\r\nAnyway, this is obviously not critical.\r\nBut you should then really update the documentation accordingly if you don't want duplicate reports on this topic... : )"
    email: macmade@xs-labs.com
    modified: "2017-03-15T20:04:07.89652Z"
    number: "30927725"
    number_intvalue: 30927725
    originated: 08-Mar-2017 09:47 PM
    parent_number: '&{NULL_VALUE}'
    product: macOS + SDK
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: UTType - Missing kUTTypeIconFileKey
