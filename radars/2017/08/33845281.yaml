apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "33845281"
    labels:
        datastore_id: "4942252203835392"
data:
    classification: ""
    created: "2017-08-11T08:48:46.74416Z"
    description: "# Description:\r\nContrary to certain initial expectations, new instances of NSFileProviderExtension are created within a shared process space.\r\n\r\n# Steps to Repro:\r\n 1. Implement rudimentary support for a File Provider in the project\r\n 2. Add new NSFileProviderDomains via the NSFileProviderManager\r\n\r\n# Expected Results:\r\nNew process, with a separate memory limit, is created to host new, domain-specific, instances of the NSFileProviderExtension.\r\n\r\n# Observed Results:\r\nThe existing NSFileProviderExtension object relevant to the nil domain is abandoned. A new extension object that will host the newly added domain is instantiated in the same process. This is repeated for every new extension.\r\n\r\n# Additional Notes:\r\nHosting multiple extension objects within the same process, and thus within the same jetsam memory limit, is extremely issue prone. Each of the instantiated extensions requires independent access to local databases, current caches, and remote connection. Furthermore, very limited assumptions can be taken about the usage of static objects, including dispatch tokens."
    email: bogo@dropbox.com
    modified: "2017-08-11T08:49:15.44384Z"
    number: "33845281"
    number_intvalue: 33845281
    originated: "2017-08-10"
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: 11b6
    reproducible: ""
    resolved: ""
    status: Open
    title: Domain-specific instances of NSFileProviderExtension share the same process
