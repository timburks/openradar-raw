apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "33683103"
    labels:
        datastore_id: "4992108083544064"
data:
    classification: Bug
    created: "2017-08-02T21:00:27.33051Z"
    description: "Resolved:\r\nhttps://bugs.swift.org/browse/SR-5625\r\n\r\nPR:\r\nhttps://github.com/apple/swift/pull/11341\r\n\r\nSummary:\r\nWhen a Swift class contains an optional Enum property that is marked with @objc, and this same class also contains a mutable (var) array holding at least one element, there is an unexpected memory leak.\r\n\r\nSteps to Reproduce:\r\nSteps:\r\n1) Download the attachment project (EnumMemoryLeak.zip) OR clone if from: https://github.com/Giphy/ios-memory-leak-sample\r\n2) Open the project in XCode\r\n3) Command + I \r\n4) Select Leaks Instrument\r\n5) Record\r\n\r\nYou should now encounter leaks.\r\n\r\nExpected Results:\r\nNo leaks.\r\n\r\nObserved Results:\r\nMemory leaking.\r\n\r\nVersion:\r\nXCode:\r\n- Version 9.0 beta 4 (9M189t)\r\n(Same issue on 8.3.3 as well)\r\n\r\nDeployment Target:\r\n- 8.0+\r\n\r\nMacOS: \r\n- Version 10.12.5 (16F73)\r\n\r\nNotes:\r\nWork around:\r\n\r\nIf we convert the optional enum class property to a non-optional, leak will disappear.\r\n\r\n// Let's convert the optional property to a non-optional\r\nvar leakOptionalEnum: leakingObjCMarkedEnum = .memoryLeakCase"
    email: ckozinoglu@gmail.com
    modified: "2017-08-04T16:25:26.78545Z"
    number: "33683103"
    number_intvalue: 33683103
    originated: August 2 2017, 3:54 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: XCode 8.3.3 / 9.x+
    reproducible: Consistently
    resolved: August 2 2017, 10:00 PM
    status: Resolved
    title: Optional Enum (annotated with @objc) + Mutable Array Leak (Swift 3)
