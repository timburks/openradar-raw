apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10068037"
    labels:
        datastore_id: "5584149859532800"
data:
    classification: ""
    created: "2022-06-07T14:14:12.67556Z"
    description: "Summary:\r\nCurrently, many enterprise admins track device patch levels on macOS 11+, iOS, and iPadOS by simply referencing the version number, or on older versions of macOS by looking at the build number. Please provide an MDM method for determining the patch level of a device with respect to the RSR content if the version or build number methods are no longer the ultimate source of truth. Additionally, please provide documentation for how end users or support technicians could be able to tell on the device itself what the current patch level is.\r\n\r\nDetail:\r\nReporting on patch level for devices in a fleet is a basic and important function of enterprise endpoint management. Currently, many enterprise admins track patch levels using version numbers (macOS 11 and newer, all iOS versions) through a simple sort like you would in an Excel sheet. For older versions of macOS (10.15 and older), one could reference the build number and keep track of which security updates tracked to which build number. This was especially necessary after the OS was not the latest shipping OS, as many times no more minor releases would ever be published, meaning minor version numbers always stayed the same. Our security group collects data about patch levels about all our managed devices to ensure that the fleet is up to date and running the properly approved versions of macOS and iOS, and to submit to our auditors to satisfy controls around patching.\r\n\r\nPlease consider providing two separate pieces to address the need for us to audit and report on RSR patching, in addition to the allowRapidSecurityResponseInstallation and CriticalUpdateInstall keys that are mentioned in the existing documentation:\r\n\r\n1. An MDM command for devices that returns a patch status of some sort for processing and parsing by the MDM. Ideally, this would list all available RSR patches for the device’s current OS version and indicate which of those patches have been applied, and if any patches are installed but pending a restart of the device to apply. Having the full list is necessary for enterprises where the allowRapidSecurityResponseRemoval key is not set - other reporting methods such as build strings, log entries, or package receipts assume that RSR content is cumulative which is does not seem to be from initial documentation.\r\n\r\n2. Documentation for technicians and end users on how to determine the current RSR patch level. Our end users who are part of our BYOD program are required to understand the patch level of their devices. Having a documented and simple method that we can use to instruct employees where to check that their Apple device already has the latest RSR patches is critical to a successful BYOD program where “lighter touch” management is used instead of user enrolled or device enrolled MDM. For non-corporate end users, this documentation would also provide them a way to understand how patched their device is from security threats as they won’t have a system administrator tracking and enforcing this centrally for them."
    email: rick.heil@samsara.com
    modified: "2022-06-07T14:14:12.675699Z"
    number: "10068037"
    number_intvalue: 10068037
    originated: 6/7/22
    parent_number: '&{NULL_VALUE}'
    product: macOS 13
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Provide method of determining patch level of RSR content
