apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB11638212
    labels:
        datastore_id: "5543961355616256"
data:
    classification: ""
    created: "2022-10-02T22:27:06.767892Z"
    description: "I have included the shortest full example I could make that triggers an NSInternalConsistencyException error when the state in SwiftUI triggers a TextField that is the first responder to be removed from the screen.\r\n\r\nTo reproduce, run the attached sample, and then tap “Password” on the Picker, then select the new text entry that appears, and go back and tap on the original option “SSH Key” in the picker.  This produces the following crash:\r\n\r\n2022-10-02 18:17:31.182263-0400 BugSwiftUI[13782:47604798] *** Assertion failure in -[SwiftUI.UpdateCoalescingCollectionView _resignOrRebaseFirstResponderViewWithUpdateItems:indexPathMapping:], UICollectionView.m:11437\r\n2022-10-02 18:17:31.189597-0400 BugSwiftUI[13782:47604798] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Attempt to delete item containing first responder that refused to resign.\r\nFirst responder that was asked to resign (returned YES from -resignFirstResponder): <UITextField: 0x7ff0c183b000; frame = (0 0; 278.667 22); opaque = NO; autoresize = W+H; gestureRecognizers = <NSArray: 0x600000117f90>; placeholder = •••••••; borderStyle = None; background = <_UITextFieldNoBackgroundProvider: 0x600000d50a90: textfield=<UITextField 0x7ff0c183b000>>; layer = <CALayer: 0x600000fe1260>> inside containing view: <SwiftUI.ListCollectionViewCell: 0x7ff0c1821800; baseClass = UICollectionViewListCell; frame = (20 79; 353 44); clipsToBounds = YES; layer = <CALayer: 0x600000fe6a60>> at index path: <NSIndexPath: 0xbefe45162b4a51ac> {length = 2, path = 0 - 1}\r\nCurrent first responder: <_TtGC7SwiftUI15CellHostingViewGVS_15ModifiedContentVS_14_ViewList_ViewVS_26CollectionViewCellModifier__: 0x7ff0c1833400; frame = (0 0; 353 44); autoresize = W+H; gestureRecognizers = <NSArray: 0x6000001eff00>; layer = <CALayer: 0x600000fe6d00>> inside containing view: <SwiftUI.ListCollectionViewCell: 0x7ff0c1821800; baseClass = UICollectionViewListCell; frame = (20 79; 353 44); clipsToBounds = YES; layer = <CALayer: 0x600000fe6a60>> at index path: <NSIndexPath: 0xbefe45162b4a51ac> {length = 2, path = 0 - 1}'\r\n*** First throw call stack:\r\n(\r\n\t0   CoreFoundation                      0x000000010ef8c378 __exceptionPreprocess + 242\r\n\t1   libobjc.A.dylib                     0x000000010c958baf objc_exception_throw + 48\r\n\t2   Foundation                          0x000000010fdfa6ac _userInfoForFileAndLine + 0\r\n\t3   UIKitCore                           0x0000000121ba2c2f -[UICollectionView _resignOrRebaseFirstResponderViewWithUpdateItems:indexPathMapping:] + 1340\r\n\t4   UIKitCore                           0x0000000121ba09bc -[UICollectionView _updateWithItems:tentativelyForReordering:propertyAnimator:collectionViewAnimator:] + 226\r\n\t5   UIKitCore                           0x0000000121b9771b -[UICollectionView _endItemAnimationsWithInvalidationContext:tentativelyForReordering:animator:collectionViewAnimator:] + 14344\r\n\t6   UIKitCore                           0x0000000121ba514c -[UICollectionView _performBatchUpdates:completion:invalidationContext:tentativelyForReordering:animator:animationHandler:] + 577\r\n\t7   UIKitCore                           0x0000000121ba4e7d -[UICollectionView performBatchUpdates:completion:] + 34\r\n\t8   SwiftUI                             0x000000010cea5c4f block_destroy_helper + 25991\r\n\t9   SwiftUI                             0x000000010cea6453 block_destroy_helper + 28043\r\n\t10  SwiftUI                             0x000000010d4dc85e __swift_memcpy56_4 + 159666\r\n\t11  SwiftUI                             0x000000010d04c3be block_destroy_helper.23 + 66721\r\n\t12  SwiftUI                             0x000000010d04c3d4 block_destroy_helper.23 + 66743\r\n\t13  UIKitCore                           0x0000000122c84eff +[UIView(Animation) performWithoutAnimation:] + 84\r\n\t14  SwiftUI                             0x000000010d4ddaa0 __swift_memcpy56_4 + 164340\r\n\t15  SwiftUI                             0x000000010d3cc8f8 objectdestroy.136Tm + 41411\r\n\t16  SwiftUI                             0x000000010d0ed86f block_destroy_helper + 35480\r\n\t17  SwiftUI                             0x000000010d0ed1d0 block_destroy_helper + 33785\r\n\t18  SwiftUI                             0x000000010cdd8a78 __swift_assign_boxed_opaque_existential_1 + 70088\r\n\t19  SwiftUI                             0x000000010cdd89db __swift_assign_boxed_opaque_existential_1 + 69931\r\n\t20  SwiftUI                             0x000000010cdd8ad1 __swift_assign_boxed_opaque_existential_1 + 70177\r\n\t21  CoreFoundation                      0x000000010eeeafe5 __CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ + 23\r\n\t22  CoreFoundation                      0x000000010eee5952 __CFRunLoopDoObservers + 515\r\n\t23  CoreFoundation                      0x000000010eee5e9d __CFRunLoopRun + 1161\r\n\t24  CoreFoundation                      0x000000010eee5637 CFRunLoopRunSpecific + 560\r\n\t25  GraphicsServices                    0x0000000112e4c28a GSEventRunModal + 139\r\n\t26  UIKitCore                           0x000000012266a425 -[UIApplication _run] + 994\r\n\t27  UIKitCore                           0x000000012266f301 UIApplicationMain + 123\r\n\t28  SwiftUI                             0x000000010d97efa3 __swift_memcpy53_8 + 95801\r\n\t29  SwiftUI                             0x000000010d97ee50 __swift_memcpy53_8 + 95462\r\n\t30  SwiftUI                             0x000000010d09eafc __swift_memcpy195_8 + 12192\r\n\t31  BugSwiftUI                          0x000000010c46236e $s10BugSwiftUI0aB5UIAppV5$mainyyFZ + 30\r\n\t32  BugSwiftUI                          0x000000010c4623f9 main + 9\r\n\t33  dyld                                0x000000010c6b32bf start_sim + 10\r\n\t34  ???                                 0x000000011a46452e 0x0 + 4735780142\r\n)\r\n\r\n\r\nThe full text case is:\r\n\r\n//\r\n// Minimal SwiftUI crash sample\r\n//\r\n// To reproduce the crash:\r\n//   1. Run the app and select \"Password\" on the toggle\r\n//   2. Tap to focus the TextField\r\n//   3. Tap on the selector on \"SSH Key\", this causes the crash:\r\n//\r\n// Stack trace at the bottom:\r\n//\r\n//  Created by Miguel de Icaza on 10/2/22.\r\n//\r\n\r\nimport SwiftUI\r\n\r\nstruct HostEditView: View {\r\n    @State var password = \"\"\r\n    @State var usePassword = false\r\n    \r\n    func saveAndLeave () {}\r\n    var body: some View {\r\n        Form {\r\n            HStack {\r\n                Picker(selection: $usePassword, label: Text (\"Auth\")) {\r\n                    Text (\"Password\")\r\n                        .tag (true)\r\n                    Text (\"SSH Key\")\r\n                        .tag (false)\r\n                }\r\n                .pickerStyle(SegmentedPickerStyle())\r\n                .frame(width: 160)\r\n            }\r\n            if usePassword {\r\n                HStack {\r\n                    TextField (\"•••••••\", text: self.$password)\r\n                        .multilineTextAlignment(.trailing)\r\n                        .autocapitalization(.none)\r\n                    \r\n                    \r\n                    Button (action: {}, label: { Image(systemName: \"eye\") })\r\n                }\r\n            } else {\r\n                Text (\"SSH Key\")\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nstruct ContentView: View {\r\n    var body: some View {\r\n        HostEditView()\r\n    }\r\n}\r\n\r\n@main\r\nstruct BugSwiftUIApp: App {\r\n    var body: some Scene {\r\n        WindowGroup {\r\n            ContentView()\r\n        }\r\n    }\r\n}"
    email: miguel.de.icaza@gmail.com
    modified: "2022-10-02T22:27:06.768054Z"
    number: FB11638212
    number_intvalue: 11638212
    originated: "2022-10-02"
    parent_number: '&{NULL_VALUE}'
    product: SwiftUI Frameworks
    product_version: "16.0"
    reproducible: yes
    resolved: ""
    status: open
    title: SwiftUI internal state crash - minimal and complete repro case included
