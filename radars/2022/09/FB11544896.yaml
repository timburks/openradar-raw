apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB11544896
    labels:
        datastore_id: "5611475691372544"
data:
    classification: ""
    created: "2022-09-19T15:10:15.871281Z"
    description: "Please see https://gist.github.com/lewurm/48deb2ce67d6c93cff66965d6d770302\r\n\r\nCopy of the README.md here:\r\n\r\nReproducer for triggering the following assert with Xcode14.\r\n\r\n```sh\r\n$ xcodebuild -version\r\nXcode 14.0\r\nBuild version 14A309\r\n\r\n$ make hello_with_objc_selector_stubs\r\nld -o hello_with_objc_selector_stubs  -syslibroot /Applications/Xcode14.1-beta1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -lSystem -arch arm64 -platform_version macos 12.0.0 13.0  -U ___darwin_check_fd_set_overflow -ldl -lpthread -framework Foundation -lz /Applications/Xcode14-beta5.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/14.0.0/lib/darwin/libclang_rt.osx.a libdarwin_withstubs.a helloworld.o liblibchelper.a libnet.a libnio.a libjava.a libfdlibm.a libzip.a libjvm.a\r\n0  0x104e641a0  __assert_rtn + 140\r\n1  0x104e6d2ec  ld::tool::SymbolTableAtom<arm64>::classicOrdinalForProxy(ld::Atom const*) (.cold.2) + 0\r\n2  0x104d75598  ld::tool::LocalRelocationsAtom<arm64_32>::~LocalRelocationsAtom() + 0\r\n3  0x104d74ab8  ld::tool::SymbolTableAtom<arm64>::addImport(ld::Atom const*, ld::tool::StringPoolAtom*) + 204\r\n4  0x104d74150  ld::tool::SymbolTableAtom<arm64>::encode() + 420\r\n5  0x104d60c18  ___ZN2ld4tool10OutputFile20buildLINKEDITContentERNS_8InternalE_block_invoke_3 + 36\r\n6  0x1825325f0  _dispatch_call_block_and_release + 32\r\n7  0x1825341b4  _dispatch_client_callout + 20\r\n8  0x182545b14  _dispatch_root_queue_drain + 952\r\n9  0x182546104  _dispatch_worker_thread2 + 164\r\n10  0x1826f4324  _pthread_wqthread + 228\r\nA linker snapshot was created at:\r\n        /tmp/hello_with_objc_selector_stubs-2022-09-19-164512.ld-snapshot\r\nld: Assertion failed: (dylib != NULL), function classicOrdinalForProxy, file LinkEditClassic.hpp, line 495.\r\nmake: *** [hello_with_objc_selector_stubs] Error 1\r\n```\r\n\r\nI noticed that adding `-undefined dynamic_lookup` helps to avoid the assert:\r\n```sh\r\n$ LDFLAGS='-undefined dynamic_lookup' make hello_with_objc_selector_stubs\r\nld -o hello_with_objc_selector_stubs  -undefined dynamic_lookup -syslibroot /Applications/Xcode14.1-beta1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -lSystem -arch arm64 -platform_version macos 12.0.0 13.0  -U ___darwin_check_fd_set_overflow -ldl -lpthread -framework Foundation -lz /Applications/Xcode14-beta5.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/14.0.0/lib/darwin/libclang_rt.osx.a libdarwin_withstubs.a helloworld.o liblibchelper.a libnet.a libnio.a libjava.a libfdlibm.a libzip.a libjvm.a\r\nld: warning: -undefined dynamic_lookup may not work with chained fixups\r\n```\r\n\r\nHowever, trying to execute the final binary it fails with:\r\n```sh\r\n$ ./hello_with_objc_selector_stubs\r\ndyld[72323]: symbol not found in flat namespace (_objc_msgSend$UTF8String)\r\nzsh: abort      ./hello_with_objc_selector_stubs\r\n```\r\n\r\nWhich triggered a memory from a [WWDC22 talk](https://developer.apple.com/videos/play/wwdc2022/110363/) (section `Message send`).\r\n\r\nThe origin is this static library:\r\n```sh\r\n$ nm libdarwin_withstubs.a\r\n\r\nlibdarwin_withstubs.a(foundation.o):\r\n00000000000000c8 s _OBJC_CLASSLIST_REFERENCES_$_\r\n00000000000000d0 s _OBJC_CLASSLIST_REFERENCES_$_.3\r\n                 U _OBJC_CLASS_$_NSDictionary\r\n                 U _OBJC_CLASS_$_NSProcessInfo\r\n                 U ___CFConstantStringClassReference\r\n                 U _objc_msgSend$UTF8String\r\n                 U _objc_msgSend$dictionaryWithContentsOfFile:\r\n                 U _objc_msgSend$objectForKey:\r\n                 U _objc_msgSend$operatingSystemVersion\r\n                 U _objc_msgSend$processInfo\r\n0000000000000000 T _operatingSystemVersion\r\n                 U _strdup\r\n[...]\r\n```\r\n\r\nSo I compiled `foundation.o` with `-fno-objc-msgsend-selector-stubs`, the result is in `libdarwin_nostubs.a`.\r\n\r\n```sh\r\n$ make hello_without_objc_selector_stubs\r\nld -o hello_without_objc_selector_stubs   -syslibroot /Applications/Xcode14.1-beta1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -lSystem -arch arm64 -platform_version macos 12.0.0 13.0  -U ___darwin_check_fd_set_overflow -ldl -lpthread -framework Foundation -lz /Applications/Xcode14-beta5.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/14.0.0/lib/darwin/libclang_rt.osx.a libdarwin_nostubs.a helloworld.o liblibchelper.a libnet.a libnio.a libjava.a libfdlibm.a libzip.a libjvm.a\r\n$ ./hello_without_objc_selector_stubs\r\nnull\r\n```\r\n\r\nwhich works as expected.\r\n\r\nBy the way, sorry I didn't manage to come up with a source-only reproducer.\r\n\r\nAlso, please push a newer revision on GitHub: https://github.com/apple-opensource/ld64/issues/2"
    email: lewurm@gmail.com
    modified: "2022-10-24T11:36:26.940746Z"
    number: FB11544896
    number_intvalue: 11544896
    originated: 09/19/2022
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: Xcode 14.0 Build version 14A309
    reproducible: yes
    resolved: yes
    status: Closed
    title: 'Xcode14 Linker assert: ld: Assertion failed: (dylib != NULL), function classicOrdinalForProxy, file LinkEditClassic.hpp, line 495'
