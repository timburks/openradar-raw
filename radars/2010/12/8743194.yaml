apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8743194"
    labels:
        datastore_id: "953401"
data:
    classification: Enhancement
    created: "2010-12-08T10:48:45.910513Z"
    description: "08-Dec-2010 10:47 AM Adrian Ward:\r\nSummary:\r\nIt would save a lot of noodles and supporting infrastructure if Javascript patches within Quartz Composer documents supported composition-wide global variables, or even just a single global object that could be used for storing/setting/getting values between other JS patches.\r\n\r\nSteps to Reproduce:\r\nCurrently, imagine you have three distinct parts of a composition, each is encapsulated in it's own macro and each needs a JS patch to do some calculations in order to render (eg. a head, a torso, some legs). Now imagine we have a single global input the user can adjust (eg. amount of funk in motion). Because funk affects all three parts of the body, we have to expose three input variables on three JS patches, publish those three input and use a splitter just to get a single number to all three parts.\r\n\r\nExpected Results:\r\nIt would be nice to be able to use a single global variable within each JS patch, and maybe create a top-level controller JS that sets that value. eg. _root.funkValue = 0.5; Each individual body part would then just reference the same global variable (_root.funkValue) and this reduces the need for exposing inputs, publishing them, splitting them, etc.\r\n\r\nActual Results:\r\nn/a\r\n\r\nRegression:\r\nn/a\r\n\r\nNotes:\r\nAs well as making QTZ patches simpler and easier to build, this would reduce execution time too. Imagine each JS patch needs to calculate the delta time between frame renders, currently each JS patch needs it's own Time input, and needs to calculate the deltaTime between frames. With one overall Controller JS patch doing this calculation and passing the deltaTime in a global var, this cuts the execution time within JS.\r\n\r\nNote that this request is specifically for JS global vars. Other bug reports may be asking for a non-JS global var type solution, which satisfies similar concerns but introduces problems to do with execution order etc. I would argue that as a JS developer, it is my responsibility to consider execution order, therefore I would need to know to make my top-level Controller JS patch execution first (by attaching it to a low-numbered layer) so that it updates the global variable _before_ each macro patch's JS patches.\r\n\r\nAlso consider that this technique could help encourage a MVC paradigm within Quartz Composer. Moving computation and control to a separate top-level helps ensure the individual macro parts are kept focussed on the job they're supposed to (eg. bouncing head, gyrating body and dancing legs)."
    email: signwave@gmail.com
    modified: "2011-08-28T05:38:44.573176Z"
    number: "8743194"
    number_intvalue: 8743194
    originated: 08-Dec-2010
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Quartz Composer 4.0
    reproducible: n/a
    resolved: ""
    status: Open
    title: Composition-wide global object or variables in QC JS patches
