apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8534665"
    labels:
        datastore_id: "728401"
data:
    classification: Enhancement
    created: "2010-10-11T03:36:19.194769Z"
    description: "My iOS app, Instapaper, relies on the installation of a Javascript bookmarklet to be effective, because it needs a way for users to easily send URLs from Mobile Safari to Instapaper.\r\n\r\nMany other iOS apps have similar needs:\r\n\r\n* Blogging and publishing apps can accept URLs that users want to include in a post.\r\n* Social networking, instant messaging, and Twitter apps can accept URLs that users want to share or send to friends.\r\n* Task-management apps can accept URLs to be used for new tasks.\r\n* Note-taking apps can accept URLs to include in notes or save as references.\r\n* News readers can accept URLs for new feed subscriptions.\r\n* Bookmarking apps can accept URLs to save for archival or search.\r\n* File-management apps can accept URLs to download.\r\n\r\nThere are only three ways to send URLs from Mobile Safari to apps today:\r\n\r\n* Copy the URL to the pasteboard, then launch the app and either have it auto-detect or have the user Paste it in. But this is complex, especially since there's no Copy button anywhere in Mobile Safari except the standard handling while editing the URL field, so most users won't do this. \r\n\r\n* Mail the link to a special email address. This works, but is tedious for users, and requires both a special email address to be installed in the user's Contacts and a corresponding web service to receive the email and synchronize with the app on next launch.\r\n\r\n* Use a Javascript bookmarklet to launch the app with a local URL scheme or send it to a corresponding web service.\r\n\r\nInstapaper supports all three, but very few people use the first two. Customers prefer the workflow that the bookmarklet offers.\r\n\r\nMost Instapaper customers install the bookmarklet directly in Mobile Safari. The process of doing this is extremely complex and user-hostile, and a large percentage of them abandon the process and are extremely dissatisfied with Safari, my app, and me as a result. I get angry emails from customers every day about this.\r\n\r\nThe current procedure:\r\n\r\n1. Send the user to a placeholder web page, with the Javascript code in a textarea. The user must Select All of the text in it and Copy it.\r\n\r\n2. The user must Add Bookmark for that page, then tap Done.\r\n\r\n3. The user must then open their Bookmarks, locate the newly created placeholder bookmark, tap Edit, and tap the bookmark (but not in the \"delete\" or \"move\" accessory areas) to select it for editing.\r\n\r\n4. The user must tap the Address line (which is not labeled as such when it is populated), tap the X \"clear-contents\" accessory, tap again in the Address line to invoke the pasteboard menu, tap Paste.\r\n\r\n5. The user must tap Done to dismiss the editing sheet, then tap Done again to leave the Bookmarks editing mode, and then tap Done a third time to dismiss the Bookmarks sheet.\r\n\r\nNeedless to say, this is extremely error-prone and tedious, and even skilled users often miss a step.\r\n\r\n### Proposed solutions that make bookmarklets unnecessary\r\n\r\nThe best way to solve this problem is to eliminate the need for hacky bookmarklets entirely:\r\n\r\n* Add a proper registry of apps that can accept URLs from Safari, recognized by an Info.plist key, and add a \"Share\" or \"Send To\" panel to Safari that allows users to easily send the current page's URL to any capable apps.\r\n\r\nBut I recognize that such a system would require major changes and is unlikely. Other potential solutions would still be incredibly helpful:\r\n\r\n* Add a public iOS API method for apps to prompt users to add a bookmark to Mobile Safari, e.g. in UIApplication:  \r\n    - (void)addSafariBookmarkWithURL:(NSURL *)url title:(NSString *)title\r\n\r\n* Alternately, add a Safari-handled URL scheme that apps can invoke to prompt users to add a bookmark, e.g.:  \r\n    safari:///addBookmark?url=&title=\r\n\r\nIn both cases, the user would be prompted by the OS and given an opportunity to decline.\r\n\r\nThese require changes to the public iOS APIs, so I recognize that they're still less likely to be implemented than simpler fixes. So here are some alternatives that I assume are even simpler and therefore more likely to be implemented:\r\n\r\n### Proposed solutions, still using bookmarklets\r\n\r\nInstalling bookmarklets could be dramatically improved with any of these simple changes:\r\n\r\n* Implement a Javascript method or URL scheme to prompt the user to add a bookmark with an arbitrary URL, specified in the code, like the old IE window.external.AddFavorite(url, title) method. If a web page could call such a method to bookmark an arbitrary javascript: URL, this entire process can be avoided.\r\n\r\n* Alternately, allowing window.location.href to be set to a javascript: URL, and then having that be the logical URL added when someone taps Add Bookmark, could eliminate almost the entire complex procedure. (Today, doing this just executes the Javascript but doesn't change the current page's URL for bookmarking.)\r\n\r\n* A less-desirable (but still helpful) alternative would be to make the Address field editable in the Add Bookmark sheet for new, unsaved bookmarks. Currently, it's only editable on edits of existing bookmarks, necessitating many extra steps in this process.\r\n\r\nAgain, any of these would be a huge help. Relevant bug reports so far:\r\n\r\nrdar://7636942\r\nrdar://6589436\r\nrdar://5935641\r\n\r\nThank you for reading this. I appreciate your consideration."
    email: me@marco.org
    modified: "2011-08-28T05:39:38.630966Z"
    number: "8534665"
    number_intvalue: 8534665
    originated: 2010/10/10
    parent_number: "5901647"
    product: iPhone SDK
    product_version: "4.2"
    reproducible: Not Applicable
    resolved: ""
    status: Duplicate/5901647
    title: User-friendly URL sharing from Safari to apps or better bookmarklet installation
