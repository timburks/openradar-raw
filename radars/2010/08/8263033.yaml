apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8263033"
    labels:
        datastore_id: "547402"
data:
    classification: ""
    created: "2010-08-02T19:56:27.100869Z"
    description: "02-Aug-2010 02:41 PM Vincent Gable:\r\nSummary:\r\nXcode's Refactor… -> Rename command will rename method calls, but not rename all method calls inside a struct initialization statement. In such cases the transformed code is invalid (won't compile and/or has different meaning), but there are no warnings.\r\n\r\nSteps to Reproduce:\r\n(1) In Xcode load put the following code in a project:\r\n\r\n\"\r\n@interface Test : NSObject\r\n{\r\n\t;\r\n}\r\n- (CGFloat) ex;\r\n- (CGFloat) why;\r\n- (CGPoint) point;\r\n@end\r\n@implementation Test\r\n- (CGFloat) ex;\r\n{\r\n\treturn 1.0;\r\n}\r\n- (CGFloat) why;\r\n{\r\n\treturn 2.0;\r\n}\r\n- (CGPoint) point;\r\n{\r\n\treturn (CGPoint){[self ex], [self why]};\r\n}\r\n@end\r\n\"\r\n\r\n(2) Change the \"cute\" names \"ex\" and \"why\" to \"x\" and \"y\", by right clicking on the method declarations and using Xcode's Refactor… command.\r\n\r\nExpected Results:\r\n(1) [self ex] becomes [self x] and [self why] becomes [self y], everywhere they are used.\r\n\r\n(2) If a transformation isn't safe, Xcode should give a warning.\r\n\r\nActual Results:\r\n(1) [self ex] is NOT renamed inside -[Test point], but [self why]/[self y] is.\r\n\r\n(2) There is no warning, even though the transformed code won't run, since there is no (longer) a -[Test ex] method.\r\n\r\nRegression:\r\nUnknown\r\n\r\nNotes:\r\nXcode Version 3.2.3\r\nComponent versions\r\nXcode IDE: 1688.0\r\nXcode Core: 1691.0\r\nToolSupport: 1591.0"
    email: vincent.gable@gmail.com
    modified: "2011-08-28T05:40:23.290265Z"
    number: "8263033"
    number_intvalue: 8263033
    originated: 02-Aug-2010 02:41 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode Version 3.2.3
    reproducible: Always
    resolved: ""
    status: Open
    title: Xode's Refactor->Rename misses method calls in struct initializations
