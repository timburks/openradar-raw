apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8704479"
    labels:
        datastore_id: "923401"
data:
    classification: Enhancement
    created: "2010-11-28T21:37:57.090081Z"
    description: "NSError provides a great deal of flexibility in describing errors. Constructing NSErrors exposes all this flexibility in the form of a dictionary, which does the job but is rather inconvenient and results in quite large chunks of error handling code.\r\n\r\nIn many cases, the only properties in the dictionary will be a localized description and localized failure reason, which say effectively the same thing and are static for a given error type.\r\n\r\nIt would be helpful if this could be simplified, for instance by providing the strings for error domain/error code pairs out of band. A sketch of an API would be:\r\n\r\n\r\n@interface NSError (NSSimpleError)\r\n\r\n+ (void) registerDescriptions:(NSDictionary *)descriptions forDomain:(NSString *)errorDomain;\r\n+ (void) registerDescriptionsFile:(NSString *)file forDomain:(NSString *)errorDomain;\r\n\r\n- (id) initWithDomain:(NSString *)domain code:(NSInteger)code;\r\n+ (id) errorWithDomain:(NSString *)domain code:(NSInteger)code;\r\n\r\n@end\r\n\r\nThe first method would take a dictionary whose keys are error codes and whose values are either strings or dictionaries. If they are strings, the string value is taken to be the localizedFailureReason appropriate for the error. If they are dictionaries, they can contain entries for failureReason, description and recoverySuggestion.\r\n\r\nThe second method takes either a file name or a path specifying a property list file. if it is a name, the path is resolved using [[NSBundle mainBundle] pathForResourceâ€¦.\r\n\r\nThe third and fourth methods produce NSError objects, looking up userInfo values in the registered dictionaries."
    email: jens.ayton@gmail.com
    modified: "2011-08-28T05:38:52.467066Z"
    number: "8704479"
    number_intvalue: 8704479
    originated: "2010-11-28"
    parent_number: '&{NULL_VALUE}'
    product: Other
    product_version: n/a
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: 'Req (Foundation): NSError conveniences'
