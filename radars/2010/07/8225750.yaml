apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8225750"
    labels:
        datastore_id: "473403"
data:
    classification: UI/Usability
    created: "2010-07-23T02:46:49.589575Z"
    description: "Summary: \r\n    While discussing the necessary steps to prepare apps for high-resolution displays, Apple's developer documentation makes two incorrect assertions: \r\n    (assertion 1) \"On devices with high-resolution screens, the imageNamed:, imageWithContentsOfFile:, and initWithContentsOfFile: methods automatically looks for a version of the requested image with the @2x modifier in its name.\" This is incorrect. initWithContentsOfFile: does *NOT* presently look for an image with an @2x modifier when told to load a given resource, regardless of whether the file extension is present. \r\n    (assertion 2) \"CFBundleIconFile (String - iOS, Mac OS X) identifies the file containing the icon for the bundle. The filename you specify does not need to include the extension, although it may. The system looks for the icon file in the main resources directory of the bundle.\" This is incorrect because if the file extension is omitted, Application Loader will reject the binary. Adding the (in my case) .png extension makes the file submission successful. \r\n\r\nSteps to Reproduce:\r\nVisit this URL for assertion 1...\r\nhttp://developer.apple.com/iphone/library/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/SupportingResolutionIndependence/SupportingResolutionIndependence.html\r\n\r\nAnd this URL for assertion 2:\r\nhttp://developer.apple.com/iphone/library/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102043\r\n\r\nExpected Results:\r\nI expected my @2x icons and resources to be automatically loaded.\r\n\r\nActual Results:\r\nMy app was rejected by Application Loader, and the iPhone 4 Simulator is not loading my high-resolution assets.\r\n\r\nRegression:\r\nOne odd exception to assertion 1 is that if an @2x resource is explicitly loaded by name in initWithContentsOfFile:, then the resultant UIImage instance will have its scale factor set to 2.0. So, there is obviously some checking being done, but it is neither complete nor correct.\r\n\r\nNotes:"
    email: khakionion@gmail.com
    modified: "2011-08-28T05:40:32.603298Z"
    number: "8225750"
    number_intvalue: 8225750
    originated: 22-Jul-2010 09:23 PM
    parent_number: '&{NULL_VALUE}'
    product: Documentation
    product_version: Latest at Apple.com
    reproducible: Yes
    resolved: ""
    status: Open
    title: iOS Developer Docs Are Incorrect About "@2x" Images
