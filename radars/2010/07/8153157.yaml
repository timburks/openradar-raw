apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8153157"
    labels:
        datastore_id: "470402"
data:
    classification: Serious Bug
    created: "2010-07-01T23:29:38.42439Z"
    description: "Summary: \r\nThe bounding box computed by -sizeWithFont:constrainedToSize: is larger than the text drawn by -drawInRect:withFont:\r\n\r\nSteps to Reproduce:\r\n1) Open the enclosed project and build it.\r\n2) Run the app in the simulator using the \"iPhone\" device. Note how the black bounding rectangle closely matches the text that's drawn.\r\n3) Run the app in the simulator using the \"iPhone 4\" device. Note how the black bounding rectangle does not match the text that's drawn.\r\n\r\nExpected Results:\r\nOn both devices, the black bounding rectangle should closely match the text.\r\n\r\nActual Results:\r\nThe black bounding rectangle on the iPhone 4 is larger than it needs to be. This affects further view layout based on these metrics.\r\n\r\nRegression:\r\nNew in iOS 4 on the Retina Display.\r\n\r\nNotes:\r\nN/A\r\n\r\nAdditional Notes:\r\n\r\nThe problems with size metrics are not limited to just the Retina Display. The bounding box returned by -sizeWithFont:constrainedToSize: can cause some of the text to not render in -drawInRect:withFont:.\r\n\r\nA new sample project is attached. The #define SHOW_TOO_SMALL shows how the bounding box causes the text to be cropped when running on the iPhone (it's fine on the iPhone 4). Also, note that changing the size of the constraint rectangle causes different behavior.\r\n\r\n\r\nUpdated Sample Project: http://files.iconfactory.net/craig/bugs/TextSizeRadar.zip"
    email: craig.hockenberry@gmail.com
    modified: "2011-08-28T05:40:51.449248Z"
    number: "8153157"
    number_intvalue: 8153157
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: 8A293
    reproducible: Always
    resolved: ""
    status: Open
    title: NSString UIKit Additions metrics inaccurate on Retina Display
