apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8248416"
    labels:
        datastore_id: "546403"
data:
    classification: Enhancement
    created: "2010-07-29T00:16:45.017076Z"
    description: "Summary:\r\nIn Quartz Composer, it is often necessary to pass values from a deeply nested macro back up to the root level (or, at least, a couple levels up).  Currently this can be accomplished by publishing the output port --- but publishing outputs is not allowed if the macro contains a Consumer patch.\r\n\r\nThis could be solved by adding a \"Local Send\" patch, which, when executed, could store named values in a buffer to later (i.e., next frame) be read by name using a \"Local Receive\" patch instance.  This would be equivalent to Global Variables in other programming languages.\r\n\r\nAdditionally, to aid with modularity and code reuse, variable scope could be restricted, perhaps using something analogous to Unix path names.  For example, the scope of a value named \"ButtonClicked\" could default to be only visible to Receivers within the current macro.  If the value were instead named \"../ButtonClicked\", the value \"ButtonClicked\" would be stored within the parent macro's scope, and would be accessible within all child macros.\r\n\r\nSee also:\r\n   - kineme.net's \"Spooky Send/Receive\" patches --- http://kineme.net/QuartzComposerPatches/SpookyPatch/0.2\r\n   - this thread on the quartzcomposer-dev list --- http://www.mail-archive.com/quartzcomposer-dev@lists.apple.com/msg05174.html"
    email: smokris@gmail.com
    modified: "2015-04-10T18:11:04.115229Z"
    number: "8248416"
    number_intvalue: 8248416
    originated: 2010.07.28
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Mac OS 10.6
    reproducible: Always
    resolved: nope
    status: Closed, won't fix
    title: Quartz Composer lacks the notion of Variable Scope / Global Variables
