apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8250671"
    labels:
        datastore_id: "532402"
data:
    classification: Enhancement
    created: "2010-07-29T16:28:04.469125Z"
    description: "There is no -positionOfDividerAtIndex: method; it seems it should exist given the following related methods:\r\n\r\n- (CGFloat) maxPossiblePositionOfDividerAtIndex:(NSInteger)dividerIndex\r\n- (CGFloat) minPossiblePositionOfDividerAtIndex:(NSInteger)dividerIndex\r\n- (void) setPosition:(CGFloat)position ofDividerAtIndex:(NSInteger)dividerIndex\r\n\r\nWhen programmatically changing divider positions, there isn't a method that provides a way to find current divider positions, which is guaranteed to be consistent with the methods above. This is especially annoying when using split views with more than one divider.\r\n\r\nOne possible workaround is to just ask for the max X coordinate of the subview at index N.\r\n\r\nCGFloat position = NSMaxX([[[splitView subviews] objectAtIndex:index] frame]);\r\n\r\nHowever, this obviously wouldn't work correctly if the split bars are horizontal, since their positions will be in terms of Y. Thus, an equivalent which supports both orientations becomes more complex...\r\n\r\nNSRect frame = [[[splitView subviews] objectAtIndex:index] frame];\r\nCGFloat position = [splitView isVertical] ? NSMaxX(frame) : NSMaxY(frame);\r\n\r\nNOTE: This is na√Øve untested code which doesn't even try to handle -isFlipped, and there might be other lurking issues. Developers shouldn't have to write or maintain such code just to get the current position of a divider; it should ideally be abstracted as part of NSSplitView."
    email: quinntaylor@mac.com
    modified: "2011-08-28T05:40:25.727487Z"
    number: "8250671"
    number_intvalue: 8250671
    originated: "2010-07-29"
    parent_number: '&{NULL_VALUE}'
    product: NSSplitView
    product_version: X
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: 'ER: Add -[NSSplitView positionOfDividerAtIndex:]'
