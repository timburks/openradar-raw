apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7657565"
    labels:
        datastore_id: "156403"
data:
    classification: Enhancement
    created: "2010-02-17T16:49:28.710123Z"
    description: "17-Feb-2010 11:48 AM Eric Vitiello:\r\nNOTE: This is a duplication of #7657369 for the purposes of expressing my interest in this bug.\r\n\r\nSummary:\r\n======\r\n\r\nJudging from the demonstration videos of the Apple iPad, the page curl animation used by the Contacts and Maps applications on the iPad is also used to very good effect in the iBooks application, which is an App Store product, not built-in iPhone OS functionality. However, iBooks gains a competitive advantage over competing App Store book reader titles by making extensive use of the private APIs which implement the page curl animation.\r\n\r\nRegression:\r\n=======\r\n\r\nThe CAFilter class and kCAFilterPageCurl symbols are visible by running 'nm' over the QuartzCore framework dylib back to version 2.0; in that version however it only appeared to be used by the Maps application, which is shipped with the device therefore not subject to the same expectations of using only public APIs as are App Store-distributed applications.\r\n\r\nNotes:\r\n====\r\n\r\nInformation on the use of the page curl animation was found by Steve Troughton-Smith and published here:\r\nhttp://blog.steventroughtonsmith.com/2010/02/apples-ibooks-dynamic-page-curl.html\r\n\r\nHe's also filed a bug, of which I expect this report to be marked a duplicate:\r\nrdar://problem/7616859\r\n\r\nThe main issue at hand is the actual page curl animation facility, not so much the use of the CAFilter class. If Apple were to provide a more user-friendly implementation of the page curl code that would in fact be preferable to having users manage the fiddly little details themselves. I will likely be working on a nice covering API myself as a technical exercise, which I would probably publish at some point.\r\n\r\nIdeally a public page curl API would be a form of transition triggered as a result of receiving a touch in a certain area. In the touch handling call, a view might set up the transition from itself to another view specifying a 'page curl' constant, setting the current touch/event as specific properties of the transition. The transition code would then take over the touch input handling until the finger lifts, at which point it would call back to a designated delegate to ask whether the page should uncurl (reverse the transition, showing the original view again) or complete (curl the page right off the screen). There might also be a simple one-shot version of the transition, with no event/touch handling and no delegate, which simply performs a static form of the page-curl for the purpose of single-tap transitions."
    email: eric@perceive.net
    modified: "2011-08-28T05:42:37.910947Z"
    number: "7657565"
    number_intvalue: 7657565
    originated: 2/17/2010
    parent_number: "7657369"
    product: IPhone SDK
    product_version: "3.2"
    reproducible: Not Applicable
    resolved: ""
    status: Duplicate/7657369
    title: CAFilter and kCAFilterPageCurl private APIs should be opened
