apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7295168"
    labels:
        datastore_id: "158404"
data:
    classification: Other Bug
    created: "2010-02-18T06:07:45.836853Z"
    description: "The only init methods in NSMutableDictionary that don't seem to call -initWithObjects:forKeys:count: are those dealing with file I/O:\r\n\r\n+dictionaryWithContentsOfFile: / -initWithContentsOfFile:\r\n+dictionaryWithContentsOfURL: / -initWithContentsOfURL:\r\n\r\nSee <rdar://problem/7046209> for background on the (undocumented) designated initializer issue.\r\n\r\nThis behavior seems counterintuitive, and can leave developers that subclass NS(Mutable)Dictionary guessing as to if/when their own initializer(s) will actually be called. (I maintain custom subclasses of NSMutableDictionary in a third-party framework, and now I'm totally uncertain of how my code will actually respond in such situations.) These methods are ones that third-party developers should never have to tamper with, even to override and call the original implementation. My instinct is that these methods should call to -initWithObjects:forKeys:count: like the rest of their counterparts do (at least in NSMutableDictionary).\r\n\r\nIt's certainly possible that there's a good reason why these initializers are not implemented in terms of the de facto (but undocumented) designated initializer, -initWithObjects:forKeys:count: â€” if so, shouldn't the reason be documented so anyone who subclasses NS(Mutable)Dictionary can know and write their code accordingly?"
    email: quinntaylor@mac.com
    modified: "2011-08-28T05:44:06.161596Z"
    number: "7295168"
    number_intvalue: 7295168
    originated: "2009-10-24"
    parent_number: '&{NULL_VALUE}'
    product: Foundation
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: 'NS(Mutable)Dictionary file/URL initializers should call -initWithObjects:forKeys:count:'
