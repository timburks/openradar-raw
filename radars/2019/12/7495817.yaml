apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7495817"
    labels:
        datastore_id: "5046607330410496"
data:
    classification: Incorrect/Unexpected Behavior
    created: "2019-12-16T12:23:47.483494Z"
    description: "We are developing an app targeting iOS10.3 as the minimum deployment target.\r\n\r\nOn devices running iOS13 and higher we would like to make use of CryptoKit framework.\r\n\r\nFor that purpose we put all of the code that makes use of CryptoKit behind if #available(iOS 13.0, *) { … }\r\n\r\nHowever, if we build our app for Release, CryptoKit module cannot be found. In Debug configuration all works fine.\r\n\r\nSteps to Reproduce:\r\n\r\n Open the attached sample project.\r\n- From the Xcode menu choose Product -> Build For -> Profiling (to make it build for Release).\r\n- Observe the error “No such module 'CryptoKit’”\r\n- Change the minimum deployment target to iOS11 (under General tab for the TestCryptoKit target)\r\n- From the Xcode menu choose Product -> Build For -> Profiling (to make it build for Release).\r\n- Observe that there are no more errors about missing module.\r\n\r\nI tried explicitly setting Swift import paths or copying the framework elsewhere, all to no avail. Apparently, Xcode explicitly forbids importing the module for some reason.\r\n\r\nWhat did you expect to happen:\r\n\r\nI expected the behavior to be the same for IOS10.3 and iOS11 minimum deployment targets.\r\n\r\nIf the minimum deployment target was iOS10.3, compilation did NOT succeed, and the error “No such module 'CryptoKit’” was shown."
    email: serieuxchat@gmail.com
    modified: "2019-12-16T12:23:47.483693Z"
    number: "7495817"
    number_intvalue: 7495817
    originated: December 18, 2019
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 11.3 (11C29)
    reproducible: Always
    resolved: ""
    status: Open
    title: Cannot import CryptoKit if minimum deployment target is less than iOS11
