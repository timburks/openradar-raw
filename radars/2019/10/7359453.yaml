apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7359453"
    labels:
        datastore_id: "5031201551155200"
data:
    classification: ""
    created: "2019-10-08T17:28:35.576718Z"
    description: "Basic Information\r\nPlease provide a descriptive title for your feedback:\r\nDuplicate file handles created by FSEventStreamCreate\r\nWhich area are you seeing an issue with?\r\nCore Foundation API\r\nWhat type of issue are you reporting?\r\nIncorrect/Unexpected Behavior\r\nDescription\r\nPlease describe the issue and what steps we can take to reproduce it:\r\nI couldn't find Core Services as a category, so I guessed the best place to put it was under Core Foundation.\r\n\r\nThere is a hard limit (by default) for macOS apps for 256 file handles per process. But this limit can easily be reached via FSEventStreamCreate, as it duplicates handles for every directory segment under the path we're watching.\r\n\r\nGiven an application that has to deal with user environments, having event streams created for a few deeply nested directories can easily exhaust the number of handles an app can possibly create, leading to undefined behaviour on the application from then on.\r\n\r\nThe initial assumption was that migrating from multiple FSEventStreams with one root path - to one FSEventStream with multiple root paths would deduplicate the file handles being used. It seems to not be the case.\r\n\r\nA sample source file attached below can reproduce this issue, where watching something in the lines of:\r\n```\r\n~/Documents\r\n~/Documents\r\n~/Applications\r\n```\r\n\r\nCreates this set of file handles:\r\n```\r\n fw  8417 therzok    4r     DIR    1,4     4544     625235 /Users/therzok/Documents\r\n fw  8417 therzok    5r     DIR    1,4     4896     625234 /Users/therzok\r\n fw  8417 therzok    6r     DIR    1,4      192     170037 /Users\r\n fw  8417 therzok    7r     DIR    1,4     4544     625235 /Users/therzok/Documents\r\n fw  8417 therzok    8r     DIR    1,4     4896     625234 /Users/therzok\r\n fw  8417 therzok    9r     DIR    1,4      192     170037 /Users\r\n fw  8417 therzok   10r     DIR    1,4      384    1138601 /Users/therzok/Applications\r\n fw  8417 therzok   11r     DIR    1,4     4896     625234 /Users/therzok\r\n fw  8417 therzok   12r     DIR    1,4      192     170037 /Users\r\n```\r\n\r\nThe expected set of handles should be something like:\r\n```\r\n fw  8417 therzok    4r     DIR    1,4     4544     625235 /Users/therzok/Documents\r\n fw  8417 therzok    5r     DIR    1,4     4896     625234 /Users/therzok\r\n fw  8417 therzok    6r     DIR    1,4      192     170037 /Users\r\n fw  8417 therzok    7r     DIR    1,4     4544     625235 /Users/therzok/Applications\r\n```\r\n\r\nA workaround I've also tried was using a larger cone of watching, such as, \"~\", but that causes a huge spike in the amount of notifications received for the app, causing high energy consumptions and overall having a big toll on the user machine.\r\n\r\nCode attachment:\r\n#import <Foundation/Foundation.h>\r\n\r\nstatic void cb(ConstFSEventStreamRef streamRef,\r\n                       void *pClientCallBackInfo,\r\n                       size_t numEvents,\r\n                       void *pEventPaths,\r\n                       const FSEventStreamEventFlags eventFlags[],\r\n                       const FSEventStreamEventId eventIds[]) {\r\n}\r\n\r\nint main(int argc, const char * argv[]) {\r\n    @autoreleasepool {\r\n        // Get the current user documents directory\r\n        NSArray<NSString *> *pathArray =\r\n            NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\r\n        NSString *documentsPath = [pathArray firstObject];\r\n\r\n        pathArray = NSSearchPathForDirectoriesInDomains(NSApplicationDirectory, NSUserDomainMask, YES);\r\n        NSString *applicationDirectory = [pathArray firstObject];\r\n\r\n        // Append the documents directory twice and the directory's parent once\r\n        NSArray<NSString *> *pathsToWatch = [NSArray arrayWithObjects:\r\n                                             documentsPath,\r\n                                             documentsPath,\r\n                                             applicationDirectory,\r\n                                             nil];\r\n\r\n        FSEventStreamRef stream =\r\n            FSEventStreamCreate(NULL,\r\n                                &cb,\r\n                                NULL,\r\n                                (__bridge CFArrayRef)pathsToWatch,\r\n                                kFSEventStreamEventIdSinceNow,\r\n                                0,\r\n                                kFSEventStreamCreateFlagWatchRoot | kFSEventStreamCreateFlagFileEvents);\r\n\r\n        dispatch_queue_t queue = dispatch_queue_create(\"fw\", DISPATCH_QUEUE_SERIAL);\r\n        FSEventStreamSetDispatchQueue(stream, queue);\r\n\r\n        FSEventStreamStart(stream);\r\n\r\n        // now run lsof -p on the process to see open handles\r\n        // At this point, we have a lot of duplicate handles:\r\n        /*\r\n         fw  8417 therzok    4r     DIR    1,4     4544     625235 /Users/therzok/Documents\r\n         fw  8417 therzok    5r     DIR    1,4     4896     625234 /Users/therzok\r\n         fw  8417 therzok    6r     DIR    1,4      192     170037 /Users\r\n         fw  8417 therzok    7r     DIR    1,4     4544     625235 /Users/therzok/Documents\r\n         fw  8417 therzok    8r     DIR    1,4     4896     625234 /Users/therzok\r\n         fw  8417 therzok    9r     DIR    1,4      192     170037 /Users\r\n         fw  8417 therzok   10r     DIR    1,4      384    1138601 /Users/therzok/Applications\r\n         fw  8417 therzok   11r     DIR    1,4     4896     625234 /Users/therzok\r\n         fw  8417 therzok   12r     DIR    1,4      192     170037 /Users\r\n         */\r\n        sleep(100000);\r\n    }\r\n    return 0;\r\n}"
    email: therzok@gmail.com
    modified: "2019-10-08T17:28:35.576886Z"
    number: "7359453"
    number_intvalue: 7359453
    originated: Oct 8, 2019 at 7:51 PM
    parent_number: '&{NULL_VALUE}'
    product: macOS
    product_version: 10.14.4
    reproducible: Yes
    resolved: ""
    status: Open
    title: Duplicate file handles created by FSEventStreamCreate
