apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "48722421"
    labels:
        datastore_id: "4994836398604288"
data:
    classification: ""
    created: "2019-03-08T20:55:47.748066Z"
    description: "Summary:\r\nI've created a simple Playground code demonstrating the issue.\r\n\r\nHaving a string, for example:\r\n\"abc def ghi jklmno\"\r\n\r\nWhen attempting to call a split – filter – join chain, like:\r\n\r\n\"abc def ghi jklmno\"\r\n.split(separator: \" \")\r\n.filter({(substr) -> Bool in return substr.count == 3})\r\n.joined(separator: \", \")\r\n\r\nSwift 5 fails to compile the code, stating use of `count` as ambiguous.\r\n\r\nWeird behaviours:\r\n\r\n• When using an intermediate variable after `split` (thus breaking into two parts — let a = \"…\".split(…); a.filter(…).joined(…)), compilation succeeds with a correct output.\r\n\r\n• When invoking the `substr` block variable before calling `substr.count` (even by putting it on a separate line to only be printed in the variable pane in the Playgrounds), the compilation succeeds with a correct output — acts as a work-around.\r\n\r\n• When omitting the `.joined` operation, the compilation succeeds, but `.filter` block incorrectly outputs a result of [[Character]] ( [[\"a\",\"b\",\"c\"], [\"d\"… ) instead of correct [Substring] ( [\"abc\",\"def\",… ).\r\n\r\nSteps to Reproduce:\r\nSee the attached Playground code.\r\n\r\nVersion/Build:\r\nXcode 10.2 Beta 4 (10P107d)"
    email: misacek@misacek.net
    modified: "2019-03-08T20:55:47.748252Z"
    number: "48722421"
    number_intvalue: 48722421
    originated: March 8 2019, 9:51 PM
    parent_number: '&{NULL_VALUE}'
    product: Xcode 10.2 / Swift 5
    product_version: ""
    reproducible: Always
    resolved: ""
    status: ""
    title: '`Substring.count` is ambiguous inside a `[Substring].filter` block [Swift 5][Xcode 10P107d]'
