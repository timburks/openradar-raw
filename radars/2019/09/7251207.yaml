apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7251207"
    labels:
        datastore_id: "4935384857313280"
data:
    classification: ""
    created: "2019-09-24T11:41:04.688812Z"
    description: "When access control is specified (with biometrics), iOS13 Simulator fails to read data from the Keychain.\r\n\r\n    // If run on iOS12 Simulator, status2 will be 0\r\n    // If run on iOS13 Simulator, status2 will be -25300\r\n    func testKeychain() {\r\n        let tag = \"com.flockoffiles.testkeychain.value\"\r\n        let savedData = \"testString\".data(using: .utf8)!\r\n        var aclError: Unmanaged<CFError>?\r\n        let accessControl =\r\n            SecAccessControlCreateWithFlags(kCFAllocatorDefault,\r\n                                            kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly,\r\n                                            SecAccessControlCreateFlags.biometryCurrentSet,\r\n                                            &aclError)!\r\n        \r\n        let query: [String : Any] = [kSecClass as String: kSecClassGenericPassword,\r\n                                     kSecAttrAccount as String: tag,\r\n                                     kSecAttrService as String: tag,\r\n                                     kSecAttrAccessControl as String: accessControl,\r\n                                     kSecValueData as String: savedData]\r\n        \r\n        var status = SecItemAdd(query as CFDictionary, nil)\r\n        if status == errSecDuplicateItem {\r\n            let updateQuery: [String: Any] = [kSecValueData as String: savedData]\r\n            status = SecItemUpdate(query as CFDictionary, updateQuery as CFDictionary)\r\n        }\r\n        \r\n        let query2: [String : Any] = [kSecClass as String: kSecClassGenericPassword,\r\n                                      kSecAttrAccount as String: tag,\r\n                                      kSecAttrService as String: tag,\r\n                                      kSecReturnData as String: kCFBooleanFalse!,\r\n                                      kSecUseAuthenticationUI as String: kSecUseAuthenticationUIFail]\r\n        \r\n        var result: CFTypeRef?\r\n        let status2 = SecItemCopyMatching(query2 as CFDictionary, &result)\r\n        \r\n        // If run on iOS12 Simulator, status2 will be 0\r\n        // If run on iOS13 Simulator, status2 will be -25300\r\n        print(\"Query2 status: \\(status2)\")\r\n        \r\n    }"
    email: serieuxchat@gmail.com
    modified: "2019-09-24T11:41:04.691147Z"
    number: "7251207"
    number_intvalue: 7251207
    originated: 11-09-2019
    parent_number: '&{NULL_VALUE}'
    product: iOS Simulator
    product_version: "13"
    reproducible: Always
    resolved: ""
    status: Open
    title: Failure to read the Keychain on iOS 13 Simulator
