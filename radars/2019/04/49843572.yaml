apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "49843572"
    labels:
        datastore_id: "4928089989578752"
data:
    classification: ""
    created: "2019-04-14T01:21:59.104862Z"
    description: "Summary:\r\nThere always has tips issue when I typing in variableness's initialization close and use  another close inside, it display <<error type>> in the inside close when I typing variableness, even the bulid system already finish all job and can show warning about it type  \r\n\r\nSteps to Reproduce:\r\ncreate a variableness and initialize it with a close like this(here use a third party framework: snapkit):\r\n\tlazy var imageView: UIImageView = {\r\n\t\tlet view = UIImageView()\r\n\t\taddSubview(view)\r\n\t\tview.snp.makeConstraints { (make) in\r\n\t\t\tmake.width.equalTo(10) \r\n\t\t}\r\n\t\treturn view\r\n\t}()\r\n\r\nExpected Results:\r\nin the close of view.snp.makeConstraints,\"make\" can be prompted rightly , and it's property \"width\" can be prompted, and the \"equalTo\" too.\r\n\r\nActual Results:\r\n\"make\" is prompted \"<<error type>>\" in Xcode 10.1, or prompted nothing in Xcode 10.2, and \"width\", \"equalTo\" never be prompted.\r\n\r\nand also I try to bring a configurator to UIResponder:\r\nprotocol ViewConfigProtocol {}\r\nextension ViewConfigProtocol where Self: UIResponder {\r\n\tfunc config(_ config: ((Self) -> Void)) -> Self {\r\n\t\tconfig(self)\r\n\t\treturn self\r\n\t}\r\n}\r\nextension UIResponder: ViewConfigProtocol { }\r\n\r\nso I can initialize a variableness like this: \r\n\tlazy var shareImageContentView = UIScrollView().config { (view) in\r\n\t\tview.alpha\r\n\t}\r\nHowever it does't work either, the \"view\" is  prompted wrongly and \"alpha\" never be prompted.\r\nInterestingly, the build system can show tips \"Expression of type 'CGFloat' is unused\" rightly\r\n\r\nBy the way, this legacy bug already existed when I use Swift 2 years ago. And Objective-C basically has  similar  issue witch still did't been fixed all these years...."
    email: v.v1958@qq.com
    modified: "2019-04-14T01:33:39.797224Z"
    number: "49843572"
    number_intvalue: 49843572
    originated: April 12 2019, 3:50 PM
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "10.2"
    reproducible: Always
    resolved: ""
    status: ""
    title: Intelligent prompt issue of Swift
