apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "50144082"
    labels:
        datastore_id: "4936169225715712"
data:
    classification: Serious Bug
    created: "2019-04-23T21:49:05.923817Z"
    description: "Dear AppKitterinos,\r\n\r\nYou probably know that, to show an NSPopover, we must set its contentViewController property to an NSViewController.\r\n\r\nAnd you probably know that, to detach a popover into a custom window, we must implement detachableWindowForPopover: in the popover’s delegate, and the detached window cannot share the popover’s contentViewController.\r\n\r\nSo the logical approach is to create an NSViewController subclass to manage the popover’s content and the detached window’s content, and create separate instances of this subclass for the popover and for the detached window.\r\n\r\nThe problem arises when we create an NSWindow, set its contentViewController to a new instance, and then return the NSWindow from detachableWindowForPopover:. AppKit temporarily replaces the new window’s contentView. It restores the window’s contentView but does not restore the window’s contentViewController. The original contentViewController of the new window is lost.\r\n\r\nI will attach a test project. To reproduce the problem in the test project:\r\n\r\n1. Launch the test app.\r\n2. Click the “Show Popover” button.\r\n3. Drag the popover to detach it.\r\n4. As soon as we begin the drag, we see a message in the main window showing the description of the newly created ContentViewController.\r\n5. When we release the drag, the detached window shows a message put there by the detached window’s ContentViewController when it was destroyed.\r\n\r\nThat ContentViewController should not have been destroyed!\r\n\r\nApparently bugreport.apple.com now limits the description field to 3000 characters, so I will continue this report in comments…\r\n\r\nChecking the console output, we can see what happened: our detachableWindowForPopover set the window’s contentViewController, which also set the window’s contentView:\r\n\r\n    2019-04-23 16:00:54.127720-0500 popover-bug[3575:200709] detachableWindowForPopover: initialized <MyPanel: 0x600003e06c00> with <ContentViewController: 0x600002c27a00> and <NSView: 0x600003306080>\r\n\r\nThen AppKit replaced the new window’s contentView by sending it setContentView:, which set the new window’s contentViewController to nil:\r\n\r\n    2019-04-23 16:00:54.148743-0500 popover-bug[3575:200709] setContentView: replaced <ContentViewController: 0x600002c27a00> with (null); replaced <NSView: 0x600003306080> with <NSView: 0x600003309cc0>\r\n    2019-04-23 16:00:54.149825-0500 popover-bug[3575:200709] (\r\n    \t0   popover-bug                         0x0000000100001648 -[MyPanel setContentView:] + 328\r\n    \t1   AppKit                              0x00007fff45fafe8b __28-[NSPopover _dragWithEvent:]_block_invoke + 149\r\n    \t2   AppKit                              0x00007fff45552c44 NSPerformVisuallyAtomicChange + 132\r\n    \t3   AppKit                              0x00007fff45faf4f3 -[NSPopover _dragWithEvent:] + 1909\r\n    \t4   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t5   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t6   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t7   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t8   AppKit                              0x00007fff4574fc17 -[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] + 5724\r\n    \t9   AppKit                              0x00007fff45686482 -[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] + 2295\r\n    \t10  AppKit                              0x00007fff45685943 -[NSWindow(NSEventRouting) sendEvent:] + 478\r\n    \t11  AppKit                              0x00007fff4552511f -[NSApplication(NSEvent) sendEvent:] + 331\r\n    \t12  AppKit                              0x00007fff45513944 -[NSApplication run] + 755\r\n    \t13  AppKit                              0x00007fff45502e4c NSApplicationMain + 777\r\n    \t14  popover-bug                         0x0000000100000f52 main + 34\r\n    \t15  libdyld.dylib                       0x00007fff73d663d5 start + 1\r\n    )\r\n\r\nLater, AppKit restored the new window's contentView, but it did not restore the contentViewController:\r\n\r\n    2019-04-23 16:00:54.154460-0500 popover-bug[3575:200709] setContentView: replaced (null) with (null); replaced <NSView: 0x600003309cc0> with <NSView: 0x600003306080>\r\n    2019-04-23 16:00:54.155426-0500 popover-bug[3575:200709] (\r\n    \t0   popover-bug                         0x0000000100001648 -[MyPanel setContentView:] + 328\r\n    \t1   AppKit                              0x00007fff45faff44 __28-[NSPopover _dragWithEvent:]_block_invoke + 334\r\n    \t2   AppKit                              0x00007fff45552c44 NSPerformVisuallyAtomicChange + 132\r\n    \t3   AppKit                              0x00007fff45faf4f3 -[NSPopover _dragWithEvent:] + 1909\r\n    \t4   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t5   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t6   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t7   AppKit                              0x00007fff4574b313 forwardMethod + 211\r\n    \t8   AppKit                              0x00007fff4574fc17 -[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] + 5724\r\n    \t9   AppKit                              0x00007fff45686482 -[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] + 2295\r\n    \t10  AppKit                              0x00007fff45685943 -[NSWindow(NSEventRouting) sendEvent:] + 478\r\n    \t11  AppKit                              0x00007fff4552511f -[NSApplication(NSEvent) sendEvent:] + 331\r\n    \t12  AppKit                              0x00007fff45513944 -[NSApplication run] + 755\r\n    \t13  AppKit                              0x00007fff45502e4c NSApplicationMain + 777\r\n    \t14  popover-bug                         0x0000000100000f52 main + 34\r\n    \t15  libdyld.dylib                       0x00007fff73d663d5 start + 1\r\n    )\r\n\r\nI am experimenting with a workaround for this bug. The workaround is, in ContentViewController's viewWillAppear method, to set self.view.window.contentViewController = self (if it's not already self). This works in the test program, but it seems *very* fishy to change the window's contentViewController in viewWillAppear. You can enable this workaround in the test program by turning on the “Enable Workaround” checkbox.\r\n\r\nPlease restore the detached window's contentViewController so we don't have to test fishy workarounds.\r\n\r\nThanks,\r\nRob"
    email: mayoff@dqd.com
    modified: "2019-04-23T21:49:05.924037Z"
    number: "50144082"
    number_intvalue: 50144082
    originated: "2019-04-23"
    parent_number: '&{NULL_VALUE}'
    product: macOS + SDK
    product_version: 10.14.5 Beta (18F118d)
    reproducible: Always
    resolved: ""
    status: open
    title: NSPopover detached window loses contentViewController
