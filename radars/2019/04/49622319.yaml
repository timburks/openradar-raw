apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "49622319"
    labels:
        datastore_id: "6112083624067072"
data:
    classification: UI
    created: "2019-04-04T21:20:28.548589Z"
    description: "Summary:\r\n\r\nIn particular cases, selector validity checking isn't working as expected – warning about unimplemented methods.\r\n\r\nSpecifically, when defining some protocol with required and optional methods:\r\n\r\n– required methods which are not implemented by the class are handled by a non-conforming warning\r\n– non-existing methods are handled by `undeclared selector` warning\r\n– an implemented optional method is okay\r\n\r\nBUT\r\n\r\n– unimplemented optional methods throw no warning at all – they are hypothetically declared (by the protocol), but not actually implemented (as these don't need to be because of optionality), but once one attempts to reference using a @selector(), no warning (f.e. `unimplemented` warning) is given. Calling such selector via `-canPerformSelector:`/`-performSelector` may prevent the issue (but only silently), calling the `-selector` directly throws an error, but using it when binding f.e. via `-addTarget:action:` using a @selector() remains silent, eventually leading to `unrecognized selector sent to instance` runtime error.\r\n\r\nSee the attached files for details.\r\n\r\nStrict selector checking is set ON.\r\n\r\nExpected Results:\r\nBetter selector checking in optional case.\r\n\r\nActual Results:\r\nUncaught cases which may result in `unrecognized selector sent to instance` crashes.\r\n\r\nVersion/Build:\r\nXcode 10.2\r\n\r\nConfiguration:\r\nmacOS Mojave 10.14.5 beta @ MacBook Air 2012\r\nmacOS Mojave 10.14.4 @ Mac mini 2012"
    email: misacek@misacek.net
    modified: "2019-04-04T21:20:28.548816Z"
    number: "49622319"
    number_intvalue: 49622319
    originated: April 4 2019
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "10.2"
    reproducible: Always
    resolved: ""
    status: Open
    title: ObjC selector checking not working sufficiently
