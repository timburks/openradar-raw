apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "47150688"
    labels:
        datastore_id: "4938196639023104"
data:
    classification: dupe
    created: "2019-01-09T18:46:10.987601Z"
    description: "Summary: It seems that playgrounds hold on to weak instances unnecessarily. Attached is a sample playground to demonstrate what I'm talking about.\r\n\r\nIf you copy the `Weak` enum definition and do this in a sample project, it deallocates properly.\r\n\r\nContents of the playground:\r\n\r\n```\r\nimport Foundation\r\n\r\nenum Weak<T> {\r\n    class Box {\r\n        weak var object: AnyObject?\r\n        init(_ object: AnyObject) { self.object = object }\r\n    }\r\n\r\n    case reference(Box)\r\n    case value(T)\r\n\r\n    init(_ instance: T) {\r\n        if type(of: instance) is AnyClass {\r\n            self = .reference(Box(instance as AnyObject))\r\n        } else {\r\n            self = .value(instance)\r\n        }\r\n    }\r\n\r\n    var instance: T? {\r\n        switch self {\r\n        case .reference(let box):\r\n            return box.object as? T\r\n        case .value(let instance):\r\n            return instance\r\n        }\r\n    }\r\n}\r\n\r\nclass A {}\r\nlet two = Weak(A())\r\ntwo.instance   // should be `nil`, but is `A`\r\n```"
    email: jared.sorge@gmail.com
    modified: "2019-02-13T21:42:26.662042Z"
    number: "47150688"
    number_intvalue: 47150688
    originated: 1/9/2019
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "10.1"
    reproducible: ""
    resolved: ""
    status: closed
    title: Playgrounds holding on to weak reference unnecessarily
