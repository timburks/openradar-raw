apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "47774257"
    labels:
        datastore_id: "5017553340465152"
data:
    classification: Crash/Hang/Data Loss
    created: "2019-02-03T22:11:26.524394Z"
    description: "Summary:\r\nSCNIKConstraint provides two initialization mechanisms: an initializer and a class method (i.e. factory method). The factory method works, and the initializer fails with EXC_BAD_ACCESS, but the documentation doesn’t mention this.\r\n\r\nSteps to Reproduce:\r\n1. Run this code in an iOS playground or app. I’m using iOS 12.1.\n\nimport SceneKit\n\nlet node1 = SCNNode()\nlet ikConstraint1 = SCNIKConstraint.inverseKinematicsConstraint(chainRootNode: node1)\n\nlet node2 = SCNNode()\nlet ikConstraint2 = SCNIKConstraint(chainRootNode: node2) // EXC_BAD_ACCESS\r\n\r\nExpected Results:\r\nNo crash. The lines behave identically.\r\n\r\nActual Results:\r\nEXC_BAD_ACCESS when using the initializer. In all the examples I’ve tried, replacing the initializer with the class function makes everything start working.\r\n\r\nVersion:\r\nXcode 10.1 (10B61) on macOS 10.14.2 (18C54)\r\n\r\nNotes:\r\nThe declarations are basically identical, and the docs don’t mention anything that might be amiss. Here’s the generated Swift interface for iOS 12.1:\n\n    /*!\n     @method initWithChainRootNode:\n     @abstract Creates and returns a SCNIKConstraint object with the specified parameter.\n     @param chainRootNode The root node of the kinematic chain.\n     @discussion \"chainRootNode\" must be an ancestor of the node on which the constraint is applied.\n     */\n    @available(watchOS 2.0, *)\n    public init(chainRootNode: SCNNode)\n\n    \n    /*!\n     @method inverseKinematicsConstraintWithChainRootNode:\n     @abstract Creates and returns a SCNIKConstraint object with the specified parameter.\n     @param chainRootNode The root node of the kinematic chain.\n     @discussion \"chainRootNode\" must be an ancestor of the node on which the constraint is applied.\n    */\n    open class func inverseKinematicsConstraint(chainRootNode: SCNNode) -> Self"
    email: igeek1@gmail.com
    modified: "2019-02-03T22:11:26.524587Z"
    number: "47774257"
    number_intvalue: 47774257
    originated: 03-Feb-2019 05:11 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: Xcode 10.1 (10B61) on macOS 10.14.2 (18C54)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'SCNIKConstraint: convenience function succeeds, initializer crashes'
