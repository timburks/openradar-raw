apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "36663633"
    labels:
        datastore_id: "4951296733872128"
data:
    classification: Crash/Hang/Data Loss
    created: "2018-01-19T18:47:07.13789Z"
    description: "Summary:\r\nWe just released an update to our app compiled with the Swift 4 compiler (Xcode 9.2, all code in Swift 3.2 mode) for the first time, and we started seeing crashes in code that uses the AVPlayerLayer API, which didn’t change at all in this release. The only thing that changed is we switched from Xcode 8.3.3 (Swift 3) to Xcode 9.2 (Swift 4), which introduced the new Swift KVO API.\n\nUpon further analysis, we noticed that in all the crashes, the main thread is always blocked on a mutex adding a Swift 4 KVO observer to something else. On this release we did start using the new Swift 4 syntax for KVO (just not on any AVFoundation code)\r\n\r\nSteps to Reproduce:\r\nWe don’t have specific retro steps to hit this. It doesn’t happen continuously, but with our volume of users it’s enough to see hundreds of crashes after less than 24h with the build out in the AppStore.\r\n\r\nExpected Results:\r\nApp doesn’t crash when using the Swift KVO API in an unrelated location.\r\n\r\nActual Results:\r\nWe get crashes in AVPlayerLayer’s internal KVO code when we started using the Swift 4 compiler and the new KVO syntax.\r\n\r\nVersion:\r\n11\r\n\r\nNotes:\r\nSee attached screenshot for crash logs."
    email: javier.api@gmail.com
    modified: "2018-01-19T18:47:07.13807Z"
    number: "36663633"
    number_intvalue: 36663633
    originated: 19-Jan-2018 10:47 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: "11"
    reproducible: Sometimes
    resolved: ""
    status: Open
    title: Crash in AVPlayerLayer KVO code, showing Swift 4.0's internal KVO machinery at the top of the stack
