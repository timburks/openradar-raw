apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "36902658"
    labels:
        datastore_id: "4976563959365632"
data:
    classification: Bug
    created: "2018-01-26T09:30:04.08112Z"
    description: "Summary:\r\n\r\nXCTest expectations must be fulfilled at most once. Since Xcode 8.3, expectation notifications can be fulfilled more than once, though. This was not the case until Xcode 8.2.1, and can lead to subtle issues.\r\n\r\nSteps to Reproduce:\r\n\r\nI attached a test case implementation file. You can simply add it to any test target to run the single test it contains.\r\n\r\nHere is how the test works:\r\n\r\n1. A built-in XCTest notification expectation is registered at the beginning for \"clock\" notifications. This expectation is fulfilled (`YES` is returned) once a clock notification has been received.\r\n1. A similar custom-made notification is also registered in parallel. This custom implementation uses standard XCTest expectations in its implementation.\r\n1. Another expectation, fulfilled after 5 seconds, is also registered. This way we are able to watch what happens during 5 seconds.\r\n1. With all these expectations set, a timer is created, emitting one \"clock\" notification each second. We then wait until all expectations are fulfilled.\r\n\r\nFor each notification expectation version (built-in and custom), we check how many times the expectation handler is called. After all expectations have been fulfilled, we check how many times each handler was called.\r\n\r\nExpected Results:\r\n\r\nSince the example notification expectation handlers return `YES` and are therefore fulfilled the first time they are executed, we expect that each handler has been called once once the test finishes.\r\n\r\nActual Results:\r\n\r\nOn Xcode 8.3 and above, the built-in notification expectation handler is called 5 times. On Xcode 8.2.1, the handler is called only once.\r\n\r\nThe problem also occurs with the newest Xcode 9.3 beta 1.\r\n\r\nVersion/Build:\r\n\r\nXcode 8.3.\r\n\r\nConfiguration:\r\n\r\n-\r\n\r\nCode sample:\r\n\r\n#import <XCTest/XCTest.h>\r\n\r\nstatic NSString * const ClockNotification = @\"ClockNotification\";\r\n\r\n@interface NotificationExpectationBugTestCase : XCTestCase\r\n\r\n@end\r\n\r\n@implementation NotificationExpectationBugTestCase\r\n\r\n// An expectation which is fulfilled after some time interval has elapsed.\r\n- (XCTestExpectation *)expectationForElapsedTimeInterval:(NSTimeInterval)timeInterval withHandler:(void (^)(void))handler\r\n{\r\n    XCTestExpectation *expectation = [self expectationWithDescription:[NSString stringWithFormat:@\"Wait for %@ seconds\", @(timeInterval)]];\r\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(timeInterval * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\r\n        [expectation fulfill];\r\n        handler ? handler() : nil;\r\n    });\r\n    return expectation;\r\n}\r\n\r\n// Custom expectation for notification. Based on standard exceptations.\r\n- (XCTestExpectation *)customExpectationForNotification:(NSNotificationName)notificationName object:(id)objectToObserve handler:(XCNotificationExpectationHandler)handler\r\n{\r\n    NSString *description = [NSString stringWithFormat:@\"Expectation for notification '%@' from object %@\", notificationName, objectToObserve];\r\n    XCTestExpectation *expectation = [self expectationWithDescription:description];\r\n    __block id observer = [[NSNotificationCenter defaultCenter] addObserverForName:notificationName object:objectToObserve queue:nil usingBlock:^(NSNotification * _Nonnull notification) {\r\n        void (^fulfill)(void) = ^{\r\n            [expectation fulfill];\r\n            [[NSNotificationCenter defaultCenter] removeObserver:observer];\r\n        };\r\n        \r\n        if (handler) {\r\n            if (handler(notification)) {\r\n                fulfill();\r\n            }\r\n        }\r\n        else {\r\n            fulfill();\r\n        }\r\n    }];\r\n    return expectation;\r\n}\r\n\r\n// Test that exception notifications are fulfilled at most once. This proves that the built-in notification expectation can\r\n// be incorrectly fulfilled several times.\r\n- (void)testIncorrectDoubleExpectation\r\n{\r\n    __block NSInteger builtInTestNotificationEpectationFulfilledCount = 0;\r\n    [self expectationForNotification:ClockNotification object:nil handler:^BOOL(NSNotification * _Nonnull notification) {\r\n        ++builtInTestNotificationEpectationFulfilledCount;\r\n        return YES;\r\n    }];\r\n    \r\n    __block NSInteger customInTestNotificationEpectationFulfilledCount = 0;\r\n    [self customExpectationForNotification:ClockNotification object:nil handler:^BOOL(NSNotification * _Nonnull notification) {\r\n        ++customInTestNotificationEpectationFulfilledCount;\r\n        return YES;\r\n    }];\r\n    \r\n    [self expectationForElapsedTimeInterval:5 withHandler:nil];\r\n    \r\n    [NSTimer scheduledTimerWithTimeInterval:1. repeats:YES block:^(NSTimer * _Nonnull timer) {\r\n        [[NSNotificationCenter defaultCenter] postNotificationName:ClockNotification object:nil];\r\n    }];\r\n    \r\n    [self waitForExpectationsWithTimeout:10. handler:nil];\r\n    \r\n    XCTAssertEqual(builtInTestNotificationEpectationFulfilledCount, 1);         // Fails, 5 != 1\r\n    XCTAssertEqual(customInTestNotificationEpectationFulfilledCount, 1);        // Succeeds, 1 == 1\r\n}\r\n\r\n@end"
    email: defagos@gmail.com
    modified: "2018-06-15T08:17:51.08822Z"
    number: "36902658"
    number_intvalue: 36902658
    originated: January 26 2018
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "8.3"
    reproducible: Always
    resolved: Won't fix
    status: Closed
    title: XCTest notification expectations incorrectly fulfilled more than once
