apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "45304590"
    labels:
        datastore_id: "5038636571557888"
data:
    classification: ""
    created: "2018-11-02T12:52:58.785354Z"
    description: "Area:\r\nScreen Saver & desktop\r\n\r\nSummary:\r\nThe ScreenSaverView class is missing NSGraphicsContext when calling the animateOneFrame method. The context does exist for drawRect, but animateOneFrame prior to Mojave used to support drawing methods in that function. Many example projects also now fail to render. Using drawRect requires redrawing an entire portion rather than just drawing on top of an existing buffer (desired behavior).\r\n\r\nDrawing (2d) in the animateOneFrame method was working prior to Mojave, and appears to be supported by the current documentation. \r\n\r\nFrom https://developer.apple.com/documentation/screensaver/screensaverview/1512471-animateoneframe?language=objc:\r\n\"It is guaranteed that the focus is locked when this method is called, so subclasses may do drawing in this method.\"\r\n\r\nSteps to Reproduce:\r\n(1) Create a new ScreenSaver project with X Code. New->Project->macOS->Other->Screen Saver\r\n\r\n(2) Replace the default methods with:\r\n- (void)drawRect:(NSRect)rect\r\n{\r\n    if ([NSGraphicsContext currentContext] == nil){\r\n        NSLog(@\"drawRect: Missing graphics context. Unable to draw.\");\r\n        @throw [NSException exceptionWithName:@\"NoGraphicsContext\" reason:@\"currentContext is nil\" userInfo:nil];\r\n    } else {\r\n        NSLog(@\"drawRect: Graphics context exists! Everything is fine.\");\r\n    }\r\n    [super drawRect:rect];\r\n}\r\n\r\n- (void)animateOneFrame\r\n{\r\n    if ([NSGraphicsContext currentContext] == nil){\r\n        NSLog(@\"animateOneFrame: Missing graphics context. Unable to draw.\");\r\n        @throw [NSException exceptionWithName:@\"NoGraphicsContext\" reason:@\"currentContext is nil\" userInfo:nil];\r\n    } else {\r\n        NSLog(@\"animateOneFrame: Graphics context exists! Everything is fine.\");\r\n    }\r\n    return;\r\n}\r\n\r\n(3) Install the screensaver you built and debug the preference pane or screensaverengine and observe the Exception thrown in animateOneFrame, but not in drawRect.\r\n\r\nExpected Results:\r\nNo exception is thrown.\r\n\r\nActual Results:\r\nExceptions is thrown:\r\n...\r\n2018-10-15 10:18:45.388379-0700 ScreenSaverEngine[772:15734] drawRect: Graphics context exists! Everything is fine.\r\n2018-10-15 10:18:45.411356-0700 ScreenSaverEngine[772:15734] animateOneFrame: Missing graphics context. Unable to draw.\r\n2018-10-15 10:18:45.411534-0700 ScreenSaverEngine[772:15734] [General] currentContext is nil\r\n2018-10-15 10:18:45.414369-0700 ScreenSaverEngine[772:15734] [General] (\r\n    0   CoreFoundation                      0x00007fff2b6f343d __exceptionPreprocess + 256\r\n...\r\n\r\nAdditional information not in the original radar:\r\n\r\nThe following work-around appears to be working well, albeit at a cost of adding a buffer, but I'm not expert at Apple's CG framework, so there maybe some issues with doing this. The following functions are excerpts from the implementation of the class derived from ScreenSaverView for my application. The bitmapBuffer and ctx vars were declared private on the interface, and the original animateOneFrame function code was moved to a newly declared updateAnimation method (which does not exist in the parent ScreenSaverView class). Also ARC is enabled now for memory management. Functionally, with these changes the application behavior matches execution on pre-Mojave installations.\r\n\r\n- (void)drawRect:(NSRect)rect\r\n{\r\n    [super drawRect:rect];\r\n    if (bitmapBuffer != nil){\r\n        CGContextDrawImage([[NSGraphicsContext currentContext] CGContext], [self bounds], [bitmapBuffer CGImage]);\r\n    }\r\n}\r\n\r\n- (void)animateOneFrame\r\n{\r\n    if (bitmapBuffer == nil){\r\n        bitmapBuffer = [self bitmapImageRepForCachingDisplayInRect:[self bounds]];\r\n    }\r\n    ctx = [NSGraphicsContext graphicsContextWithBitmapImageRep:bitmapBuffer];\r\n    [NSGraphicsContext saveGraphicsState];\r\n    [NSGraphicsContext setCurrentContext:ctx];\r\n    [self updateAnimation];\r\n    [ctx flushGraphics];\r\n    [NSGraphicsContext restoreGraphicsState];\r\n    [self setNeedsDisplayInRect:[self bounds]];\r\n}"
    email: eric@classg.net
    modified: "2018-11-02T12:57:10.868897Z"
    number: "45304590"
    number_intvalue: 45304590
    originated: 10/16/2018
    parent_number: '&{NULL_VALUE}'
    product: macOS
    product_version: "10.14"
    reproducible: Yes
    resolved: ""
    status: Open
    title: 'Mojave 10.14 Regression: Missing NSGraphicsContext in animateOneFrame'
