apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "38525842"
    labels:
        datastore_id: "4967861550317568"
data:
    classification: Bug
    created: "2018-03-16T00:53:05.04514Z"
    description: "Area:\r\nCore Data\r\n\r\nSummary:\r\n\r\nI find it difficult to interpret and differentiate the documentation descriptions of NSMergePolicy.mergeByPropertyObjectTrump and NSMergePolicy.mergeByPropertyStoreTrump in order to determine which I should use.\r\n\r\nCurrent documentation:\r\n\r\n`class var mergeByPropertyObjectTrump: NSMergePolicy`\r\n\r\n> A policy that merges conflicts between the persistent store's version of the object and the current in-memory version by individual property, with the external changes trumping in-memory changes.\r\n\r\n`class var mergeByPropertyStoreTrump: NSMergePolicy`\r\n\r\n> A policy that merges conflicts between the persistent store's version of the object and the current in-memory version by individual property, with the in-memory changes trumping external changes.\r\n\r\nThe phrase \"in-memory\" seems to be used to refer to both the context (as opposed to the persistent store) in the first half, and then to the persistent store (as opposed to the context) in the second half. The second half also introduces the term \"external\". I'm assuming this is referring to the context which would be external from the perspective of the store. It's unclear though, when mergePolicy is a property on NSManagedObjectContext, and \"external\" could also refer to a system external to all of the Core Data components such as when merging data from an API.\r\n\r\nI would suggest using the same terms throughout the descriptions. It's perhaps too late for this but it would be even better to change the name of one of the policies slightly, if I'm understanding how it works correctly. It's very likely I'm missing some subtlety that would make this change inappropriate though. :)\r\n\r\nEasier suggestion:\r\n\r\n`class var mergeByPropertyObjectTrump: NSMergePolicy`\r\n\r\n> A policy that merges conflicts between the persistent store's version of the object and the current context's version by individual property, with the context's changes trumping the store's changes.\r\n\r\n`class var mergeByPropertyStoreTrump: NSMergePolicy`\r\n\r\n> A policy that merges conflicts between the persistent store's version of the object and the current context's version by individual property, with the store's changes trumping the context's changes.\r\n\r\nIdeal suggestion:\r\n\r\nThe above description changes as well as aliasing `mergeByPropertyObjectTrump` to `mergeByPropertyContextTrump `\r\n\r\nSteps to Reproduce:\r\n\r\nRead the documentation.\r\n\r\nExpected Results:\r\n\r\nThat the descriptions use canonical terms for the involved components and the difference between these two similar policies is easy to understand.\r\n\r\nActual Results:\r\n\r\nI found it difficult to rely on the documentation's descriptions and 3rd party resources found online were required in order to confirm how the policies work.\r\n\r\nVersion/Build:\r\n\r\niOS 11.2 SDK\r\n\r\nConfiguration:\r\n\r\nVersion 9.2 (9C40b)"
    email: brandon@brandonevans.ca
    modified: "2018-03-16T00:53:05.04544Z"
    number: "38525842"
    number_intvalue: 38525842
    originated: 2018/03/15
    parent_number: '&{NULL_VALUE}'
    product: Core Data
    product_version: iOS 11.2 SDK
    reproducible: Always
    resolved: ""
    status: Open
    title: Documentation for NSMergePolicy.mergeByProperty* policies is difficult to interpret and differentiate
