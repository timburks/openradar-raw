apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "42712580"
    labels:
        datastore_id: "5051890303762432"
data:
    classification: ""
    created: "2018-09-01T21:35:46.36655Z"
    description: "The Swift compiler in Xcode 9.4.1 (9F2000) and in Xcode 10 beta 4 (10L213o) reliably crashes in the MergeSwiftModule phase when building the attached project.  \r\n\r\n[The project contains both Objective-C and Swift code. The Objective-C code declares an enum type, using NS_ENUM(int, ...); the Swift code imports this type. The Swift code then declares a FixedLengthVector type (that implements Collection); the goal is that the only valid subscripts of this collection are the elements of the enum type, but note that their raw type is CInt = UInt32 and not Int, as indexes are now presumed to be (since Swift 4.1).  The underlying code may no longer be the best way to achieve this, but the compiler shouldn't crash.]\r\n\r\n0  swift                    0x00000001113ddfea PrintStackTraceSignalHandler(void*) + 42\r\n1  swift                    0x00000001113dd3a6 SignalHandler(int) + 966\r\n2  libsystem_platform.dylib 0x00007fff76703f5a _sigtramp + 26\r\n3  libsystem_platform.dylib 0x00007ffee2237c88 _sigtramp + 1806908744\r\n4  swift                    0x000000010eb1bfea swift::ModuleFile::getTypeChecked(llvm::PointerEmbeddedInt<unsigned int, 31>) + 778\r\n5  swift                    0x000000010eb1c72e swift::ModuleFile::getTypeChecked(llvm::PointerEmbeddedInt<unsigned int, 31>) + 2638\r\n6  swift                    0x000000010eb1ccd2 swift::ModuleFile::getTypeChecked(llvm::PointerEmbeddedInt<unsigned int, 31>) + 4082\r\n7  swift                    0x000000010eb1ccf6 swift::ModuleFile::getTypeChecked(llvm::PointerEmbeddedInt<unsigned int, 31>) + 4118\r\n8  swift                    0x000000010eb19cb5 swift::ModuleFile::getDeclCheckedImpl(llvm::PointerEmbeddedInt<unsigned int, 31>, llvm::Optional<swift::DeclContext*>) + 51605\r\n9  swift                    0x000000010eb0d1ef swift::ModuleFile::getDeclChecked(llvm::PointerEmbeddedInt<unsigned int, 31>, llvm::Optional<swift::DeclContext*>) + 79\r\n10 swift                    0x000000010eb26ef4 swift::ModuleFile::loadAllMembers(swift::Decl*, unsigned long long) + 916\r\n11 swift                    0x000000010edc295f swift::IterableDeclContext::loadAllMembers() const + 207\r\n12 swift                    0x000000010ee2ad79 swift::NominalTypeDecl::lookupDirect(swift::DeclName, bool) + 1433\r\n13 swift                    0x000000010eb15cbb swift::ModuleFile::getDeclCheckedImpl(llvm::PointerEmbeddedInt<unsigned int, 31>, llvm::Optional<swift::DeclContext*>) + 35227\r\n14 swift                    0x000000010eb0d1ef swift::ModuleFile::getDeclChecked(llvm::PointerEmbeddedInt<unsigned int, 31>, llvm::Optional<swift::DeclContext*>) + 79\r\n15 swift                    0x000000010eb1bf5e swift::ModuleFile::getTypeChecked(llvm::PointerEmbeddedInt<unsigned int, 31>) + 638\r\n16 swift                    0x000000010eb131ef swift::ModuleFile::getDeclCheckedImpl(llvm::PointerEmbeddedInt<unsigned int, 31>, llvm::Optional<swift::DeclContext*>) + 24271\r\n17 swift                    0x000000010eb0d1ef swift::ModuleFile::getDeclChecked(llvm::PointerEmbeddedInt<unsigned int, 31>, llvm::Optional<swift::DeclContext*>) + 79\r\n18 swift                    0x000000010eb1bf5e swift::ModuleFile::getTypeChecked(llvm::PointerEmbeddedInt<unsigned int, 31>) + 638\r\n19 swift                    0x000000010eb28237 swift::ModuleFile::finishNormalConformance(swift::NormalProtocolConformance*, unsigned long long) + 2359\r\n20 swift                    0x000000010ee35ce6 swift::NormalProtocolConformance::getTypeWitnessAndDecl(swift::AssociatedTypeDecl*, swift::LazyResolver*, swift::SubstOptions) const + 70\r\n21 swift                    0x000000010ee3559f swift::ProtocolConformance::getTypeWitnessAndDecl(swift::AssociatedTypeDecl*, swift::LazyResolver*, swift::SubstOptions) const + 463\r\n22 swift                    0x000000010ee4a977 getMemberForBaseType(llvm::function_ref<llvm::Optional<swift::ProtocolConformanceRef> (swift::CanType, swift::Type, swift::ProtocolType*)>, swift::Type, swift::Type, swift::AssociatedTypeDecl*, swift::Identifier, swift::SubstOptions) + 1207\r\n23 swift                    0x000000010ee4a1e8 llvm::Optional<swift::Type> llvm::function_ref<llvm::Optional<swift::Type> (swift::TypeBase*)>::callback_fn<substType(swift::Type, llvm::function_ref<swift::Type (swift::SubstitutableType*)>, llvm::function_ref<llvm::Optional<swift::ProtocolConformanceRef> (swift::CanType, swift::Type, swift::ProtocolType*)>, swift::SubstOptions)::$_18>(long, swift::TypeBase*) + 1384\r\n24 swift                    0x000000010ee43389 swift::Type::transformRec(llvm::function_ref<llvm::Optional<swift::Type> (swift::TypeBase*)>) const + 137\r\n25 swift                    0x000000010ee493b3 substType(swift::Type, llvm::function_ref<swift::Type (swift::SubstitutableType*)>, llvm::function_ref<llvm::Optional<swift::ProtocolConformanceRef> (swift::CanType, swift::Type, swift::ProtocolType*)>, swift::SubstOptions) + 211\r\n26 swift                    0x000000010e854b09 (anonymous namespace)::SILTypeSubstituter::visitType(swift::CanType) + 89\r\n27 swift                    0x000000010e854eb2 (anonymous namespace)::SILTypeSubstituter::substSILFunctionType(swift::CanTypeWrapper<swift::SILFunctionType>) + 754\r\n28 swift                    0x000000010e8553b3 swift::SILFunctionType::substGenericArgs(swift::SILModule&, llvm::ArrayRef<swift::Substitution>) + 275\r\n29 swift                    0x000000010dc3fb58 swift::SILBuilder::createApply(swift::SILLocation, swift::SILValue, llvm::ArrayRef<swift::Substitution>, llvm::ArrayRef<swift::SILValue>, bool, swift::GenericSpecializationInformation const*) + 184\r\n30 swift                    0x000000010eb3cccf swift::SILDeserializer::readSILInstruction(swift::SILFunction*, swift::SILBasicBlock*, swift::SILBuilder&, unsigned int, llvm::SmallVectorImpl<unsigned long long>&) + 53327\r\n31 swift                    0x000000010eb2f450 swift::SILDeserializer::readSILFunction(llvm::PointerEmbeddedInt<unsigned int, 31>, swift::SILFunction*, llvm::StringRef, bool, bool) + 5712\r\n32 swift                    0x000000010eb423cd swift::SILDeserializer::getAllSILFunctions() + 893\r\n33 swift                    0x000000010ebdac54 swift::SerializedSILLoader::getAllForModule(swift::Identifier, swift::FileUnit*) + 196\r\n34 swift                    0x000000010da3c48b performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&, swift::FrontendObserver*, swift::UnifiedStatsReporter*) + 30459\r\n35 swift                    0x000000010da33304 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) + 7908\r\n36 swift                    0x000000010d9e7ce5 main + 18917\r\n37 libdyld.dylib            0x00007fff763f5015 start + 1\r\n38 libdyld.dylib            0x0000000000000047 start + 2311106611\r\nStack dump:\r\n1.\tWhile reading from 'VectorEngine'\r\n2.\tWhile finishing conformance for type 'Partnership'\r\n3.\tWhile ... to 'Strideable' in module 'Swift'\r\n4.\tWhile deserializing 'Stride' (TypeAliasDecl #20) in 'VectorEngine'\r\n5.\tWhile deserializing decl #34 (XREF) in 'VectorEngine'\r\n6.\tCross-reference to module 'VectorEngine'\r\n\t... Partnership\r\n\t... RawValue\r\n7.\tWhile loading members for extension of Partnership in module 'VectorEngine'\r\n8.\tWhile deserializing 'advanced' (FuncDecl #29) in 'VectorEngine'"
    email: rsfinn@gmail.com
    modified: "2018-09-07T02:09:28.44697Z"
    number: "42712580"
    number_intvalue: 42712580
    originated: "2018-07-29"
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: Xcode 9.4.1 (9F2000)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode 9.4.1 & 10.0 beta: Segmentation fault in MergeSwiftModule in Incremental compilation mode'
