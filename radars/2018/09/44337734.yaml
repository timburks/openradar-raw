apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "44337734"
    labels:
        datastore_id: "4967542514778112"
data:
    classification: Enhancement
    created: "2018-09-11T10:40:52.564061Z"
    description: "Summary:\r\nThis is a duplicate of radar #43036095\n\nCurrently privacy controls (e.g. access to location, calendar, â€¦) are available in System Preferences and are structured by type. When a user decides to trust an application and authorize or pre-authorize an application, she has to browse through all types and add the application to the list.\r\n\r\nFor the user it would be more natural to have privacy controls structured by application. Then she can decide to trust (or not) an application and decide to which information to extend that trust.\r\n\r\nIdeally these privacy controls should be available right from within the application. E.g. as standard menu item in the Application menu. A standard item in a standard location. Like the Quit menu item.\r\n\r\nThis would open a UI that lists all privacy sensitive data and service the application has voiced interest in by way of Info.plist. This UI would also show the reason strings provided in Info.plist. This information is currently missing from System Preferences.\r\n\r\nThe user can then toggle application access to all privacy sensitive areas in a single place. She can find that place from the Application menu. She can trust that UI since (like NSOpenPanel) it is provided by the OS in a tamperproof way.\r\n\r\nSuch streamlined UI also allows the user to start cautiously and allow more data access as trust has been built. On first launch, an application may explain what features may be limited by restricted data access and then invoke the privacy UI for the user to make an initial choice. That choice may be restrictive. Later after trust has been established and the user has established the usefulness of the application, she can decide to allow the application access to more information. For that she only needs to turn to the Application menu and make adjustments.\r\n\r\nThe same works the other way around. The application may request access to a system service for a specific task and the user may decide to grant that access to complete the task. She may not want to give the application indefinite access. A quick trip to the privacy controls in the Application menu can revoke access starting with the next application launch. \r\n\r\nTL;DR;\r\n- Organize privacy controls by application\r\n- Always show Info.plist reason strings\r\n- Make privacy controls available from within each application\r\n- Thus allow for workflows where the user can effortlessly upgrade or downgrade data and service access\n\r\n\r\nSteps to Reproduce:\r\n \r\n\r\nExpected Results:\r\n \r\n\r\nActual Results:\r\n \r\n\r\nVersion:\r\n \r\n\r\nNotes:"
    email: Daniel.Alexander.Alm@gmail.com
    modified: "2018-09-11T10:40:52.564227Z"
    number: "44337734"
    number_intvalue: 44337734
    originated: 11-Sep-2018 12:40 PM
    parent_number: '&{NULL_VALUE}'
    product: macOS + SDK
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Request: Standardized per-app privacy control UI'
