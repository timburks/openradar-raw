apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "40554795"
    labels:
        datastore_id: "6176349114859520"
data:
    classification: Suggestion
    created: "2018-05-25T15:19:51.36079Z"
    description: "Filing this radar for reference so a coworker can ask about it in person at the WWDC labs.\r\n\r\nWhat is the best way to include the CommonCrypto headers in an iOS modulemap? This seems like a good way at first blush:\r\n\r\nhttps://github.com/soffes/CommonCrypto/pull/7/files#diff-3c791a23fd3c0fa2dd79b396aab323d4\r\n\r\nmodule CommonCrypto [system] {\r\n    header \"/usr/include/CommonCrypto/CommonCrypto.h\"\r\n    export *\r\n}\r\n\r\nHowever, some people have reported problems with this approach, since that file may apparently not always exist, as reported in this GitHub issue: https://github.com/soffes/CommonCrypto/issues/8\r\n\r\nA more fragile solution is to do it like this:\r\n\r\nheader \"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/include/CommonCrypto/CommonCrypto.h\"\r\n\r\nThe problem is that this relies on /Applications/Xcode.app existing, which it does not on many machines where multiple Xcode versions are managed by naming them like /Applications/Xcode_9.3.app or /Applications/Xcode/9.3/Xcode.app.\r\n\r\nOne could write a run script build phase that injects the output of `xcode-select -p` into the modulemap. This is the most robust solution I can think of, but I was wondering if thereâ€™s a simpler, supported way to do it?"
    email: igeek1@gmail.com
    modified: "2018-07-22T20:13:55.73437Z"
    number: "40554795"
    number_intvalue: 40554795
    originated: May 25 2018, 11:19 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: June 18 2018, 2:29 AM
    status: Duplicate of 18256932
    title: What is the best way to include CommonCrypto in an iOS modulemap?
