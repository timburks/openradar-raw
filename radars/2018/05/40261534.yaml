apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "40261534"
    labels:
        datastore_id: "4955659279794176"
data:
    classification: Other Bug
    created: "2018-05-15T17:36:15.73679Z"
    description: "Summary:\r\nIt looks like the CLANG_ENABLE_MODULES build setting doesn't enable the -fmodules flag in Obj-C++ files. This is problematic because it means I can't import my \"ModuleName-Swift.h\" bridging header in Obj-C++ as the header generated by Swift requires modules if I'm pulling in any external frameworks (which I am).\r\n\r\nAs best as I can tell, the -fmodules flag doesn't actually enable the experimental C++ modules feature anyway, that uses a separate -fcxx-modules flag, so it's unclear to me why Xcode doesn't pass -fmodules to Obj-C++ files.\r\n\r\nSteps to Reproduce:\r\n1. Set up an Xcode project with CLANG_ENABLE_MODULES set to Yes\r\n2. Add an Obj-C++ file to the project\r\n3. In the Obj-C++ file try to use an @import statement.\r\n\r\nExpected Results:\r\nIt should compile.\r\n\r\nActual Results:\r\nIt complains that modules are disabled.\r\n\r\nVersion/Build:\r\nXcode 9.2 (9C40b)\r\n\r\nNotes:\r\nIf there's backwards compatibility concerns you could change CLANG_ENABLE_MODULES into a trinary build setting (like some of the warning settings are), so that way people still have to opt in to it."
    email: kevin@sb.org
    modified: "2018-05-15T17:36:15.73701Z"
    number: "40261534"
    number_intvalue: 40261534
    originated: May 15 2018, 10:35 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: CLANG_ENABLE_MODULES doesn't enable -fmodules in Obj-C++ files
