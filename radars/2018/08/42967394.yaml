apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "42967394"
    labels:
        datastore_id: "5016743781072896"
data:
    classification: Serious Bug
    created: "2018-08-06T14:18:32.35044Z"
    description: "Summary:\r\nSwift 4 introduced a new Key-Value Observing API which uses generic KeyPath objects in order to work better with the Swift type system. These APIs seem to work fine for observing objects and primitives, but if you observe an Objective-C enum, the NSKeyValueObservedChange object always contains nil values.\r\n\r\nSteps to Reproduce:\r\nCreate an observation on a KVO-compliant Objective-C enum using the new Swift KVO API. One such example is AVPlayer.timeControlStatus, which is a AVPlayerTimeControlStatus. In the change handler closure, try to unwrap the timeControlStatus.\r\n\r\n    let observation = player.observe(\\AVPlayer.timeControlStatus, options: [.initial, .new], changeHandler: { (player: AVPlayer, change: NSKeyValueObservedChange<AVPlayerTimeControlStatus>) in\r\n      if let newStatus = change.newValue {\r\n        // handle new\r\n      } else if let oldStatus = change.oldValue {\r\n        // handle old\r\n      } else {\r\n        // neither value is present\r\n      }\r\n    })\r\n\r\nExpected Results:\r\nWhen the value of the KVO-compliant property changes and the change handler is executed, `change.newValue` should be non-nil.\r\n\r\nActual Results:\r\nWhen the value of the KVO-compliant property changes and the change handler is executed, `change.newValue` is nil.\r\n\r\nVersion/Build:\r\nXcode 9.4.1 (9F2000) and Swift 4.1"
    email: daltonclaybrook@gmail.com
    modified: "2018-08-06T14:18:32.35073Z"
    number: "42967394"
    number_intvalue: 42967394
    originated: 8/6/2018
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: "4"
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift 4 Generic KVO API sends nil change object
