apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "42562585"
    labels:
        datastore_id: "4988302507638784"
data:
    classification: Other Bug
    created: "2018-07-24T23:58:58.2879Z"
    description: "Summary:\r\nIn a Swift project with static libraries, if you enable whole module optimizations, code coverage may not include your source files, only your test files.\r\n\r\nSteps to Reproduce:\r\n1. Create a new Swift static library project\n2. Create a test target for your library\n3. Create 2 source files Foo and Bar, add a top level function to each\n4. Create 2 test files FooTests and BarTests, add a test to both, don't call Foo from FooTests, but call Bar from BarTests\n5. Setup your scheme to test the target and collect coverage\n6. Enable whole module optimizations project wide by setting SWIFT_COMPILATION_MODE to wholemodule at the top level\n7. Run the tests\n8. View the coverage report\r\n\r\nExpected Results:\r\nYou see Foo.swift included in the report with 0% coverage, you see Bar.swift in the report with 100% coverage\r\n\r\nActual Results:\r\nNeither Foo.swift or Bar.swift appear in the coverage report, only FooTests.swift and BarTests.swift do\r\n\r\nVersion:\r\nXcode 10.0 beta 4 (10L213o)\r\n\r\nNotes:\r\n- If you change FooTests to call Foo, you see both files (this makes me think it's related to rdar://42562307)\n- See the attached project for an example\n- See screenshot.png for the view from Xcode, as well as output.txt for the text representation from `xccov` and the `test.xccovreport`"
    email: keithbsmiley@gmail.com
    modified: "2018-07-24T23:58:58.28834Z"
    number: "42562585"
    number_intvalue: 42562585
    originated: 24-Jul-2018 04:58 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 10.0 beta 4 (10L213o)
    reproducible: Always
    resolved: ""
    status: Open
    title: Code coverage is not correctly reported for Swift projects with whole module optimization enabled
