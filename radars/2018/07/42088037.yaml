apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "42088037"
    labels:
        datastore_id: "5016024197890048"
data:
    classification: UI/Usability
    created: "2018-07-11T21:00:17.53199Z"
    description: "Summary:\r\nCurrently if you have a project that links a pre-compiled Swift module (a static framework in the attached example project), that you use a relative FRAMEWORK_SEARCH_PATH for, when you try and jump to definition, Xcode fails and shows the question mark pop-up.\r\n\r\nSteps to Reproduce:\r\n1. Pre-compile a Swift static framework in a project\n2. Create a new project, copy the pre-compiled framework into the root of the new project\n3. Add `.` to `FRAMEWORK_SEARCH_PATHS`\n4. Add `-framework MODULE` to `OTHER_LDFLAGS`\n5. Import the pre-compiled framework in your project, and reference a symbol\n6. Build (this should be successful)\n7. Jump to definition on either the symbol or the import\r\n\r\nExpected Results:\r\nYou see the generated interface of the Swift module\r\n\r\nActual Results:\r\nXcode shows the question mark modal\r\n\r\nVersion:\r\nXcode 9.4.1 (9F2000)\r\n\r\nNotes:\r\n- You can work around this by using an absolute path in `FRAMEWORK_SEARCH_PATHS`, in the sample project change this to `$(SRCROOT)` to see jump to definition work\n- You also don't have syntax highlighting of the referenced symbols in this case, and when you try to jump to definition it shows \"No such module 'MODULE'\"\n- In Xcode 10 beta 3 syntax highlighting is correct, but regardless of relative or absolute path, there is an error, see rdar://42087654 for a repro case, so I cannot tell if this is fixed or not\n- The attached project's binary was built with Xcode 9.4.1, so you'll need to use the same version of Xcode"
    email: keithbsmiley@gmail.com
    modified: "2018-07-11T21:00:17.53226Z"
    number: "42088037"
    number_intvalue: 42088037
    originated: 11-Jul-2018 02:00 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 9.4.1 (9F2000)
    reproducible: Always
    resolved: ""
    status: Open
    title: Jump to definition doesn't work with precompiled Swift frameworks and relative FRAMEWORK_SEARCH_PATHS
