apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "41893481"
    labels:
        datastore_id: "4953259894636544"
data:
    classification: ""
    created: "2018-07-06T15:44:07.51676Z"
    description: "Summary: \r\nWhen setting a `let` variable in a `guard` statement conditionally on an optional `var` previously set, and accessing that `let` from within a function, that is called from a closure, `libd-rpc-server` crashes.\r\n\r\nWorkarounds that do not crash the compiler:\r\nSetting the variable normally (not in a guard)\r\nPassing the variable in to the function as an additional parameter from the closure\r\nAccessing the original optional var from within the function instead\r\nMoving the guard statement inside the function\r\nCalling the function from outside a closure\r\n\r\nSteps to Reproduce:\r\nAttempt to run the attached playground\r\n\r\nExpected Results:\r\nCompiler is able to use the `'let` variable from within the function called from a closure\r\n\r\nActual Results:\r\nCompiler crash\r\n\r\n\r\nCode that Crashes:\r\n\r\nimport Foundation\r\n\r\nvar optionalStr: String? = \"Hello, playground\"\r\n\r\nguard let str = optionalStr else {\r\n\tfatalError(\"FatalError\")\r\n}\r\n\r\nfunc appendHello(_ prefix: String) {\r\n\tprint(prefix + str)\r\n}\r\n\r\nlet prefixes = [\"Well \", \"Hey \", \"Um \", \"Say \"]\r\n\r\nprefixes.forEach({ appendHello($0) })"
    email: erwinmaza@gmail.com
    modified: "2018-07-06T15:44:07.51695Z"
    number: "41893481"
    number_intvalue: 41893481
    originated: July 6, 2018
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 10
    reproducible: Always
    resolved: ""
    status: Open
    title: LLDB crash when accessing variable set in guard statement
