apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "46784549"
    labels:
        datastore_id: "5029062242205696"
data:
    classification: Other Bug
    created: "2018-12-17T19:43:41.309297Z"
    description: "Summary:\r\nWe are currently developing an application that uses a short background video. As our target is iOS 11+ we decided to use AVPlayerLooper to gracefully handle looping our video stream.\n\nThis stream is a 15 seconds h264 video, doesnâ€™t contain a sound track, and has been created using mediafilesegmenter and variantplaylistcreator with segments of 4 seconds. \n\nWe reduced our player logic to the attached example project. \n\nImpacted devices:\n- AppleTV 4, iOS 12.1.1\n- Simulator gen. 4 + 4K, tvOS 11.4 + 12.1 \n\nFixes we tried:\n- as some of the segments do not start with a key frame with also tried generating them using ffmpeg, by encoding each segment from the source, to obtain valid files. Alas the issue persists.\n- recreating AVPlayerLooper with an AVQueuePlayer subclass, re-adding and item once it has ended. This fails in the same way. Calling seek(to:completion:) after re-adding an item does not work either\n- change the segment length, while this does change something in the behaviour (instead of resuming from say 13s it might resume from 14s or 10s) it does not solve the issue\n- AVQueuePlayer subclass that creates a new AVPlayerItem from the template once the currentItem has ended. This works, but network cache is not leveraged properly\n- using a single .mp4 file instead of an HLS stream while keeping native AVPlayerLooper. This works\n\nThe attachement contains:\n- a demo project that recreates the issue every time\n- a source stream, script to generate the HLS segments, and script output files\n- the log generated by the demo app\n- a sysdiagnose\r\n\r\nSteps to Reproduce:\r\n0. Create the HLS files, upload to an accessible host\n1. Create an AVPlayerItem with the stream index.m3u8 URL\n2. Create an AVPlayerLayer, AVQueuePlayer and AVPlayerLooper\n3. Start the player\n4. Watch closely the video once it has played 3/4 times\r\n\r\nExpected Results:\r\nThe video loop should be seamless, and each loop should start from the beginning and play until the current item end\r\n\r\nActual Results:\r\nOnce each items in the AVPlayerLooper queue has played once the player becomes jumpy. For instance, as we finish item #0 in the looper, it will advance to item #1 but at 13 or 14secs, instead of restarting from the beginning.\r\n\r\nVersion:\r\n12.1.1\r\n\r\nNotes:\r\nWe also noted the following issues, possibly related. We would not expect either as the next stream should already be cached when an item finishes.\n1. intermittent black screen between the first loops\n2. resolution jumps when multiple variants varying in dimension are available"
    email: stan.chevallier@gmail.com
    modified: "2018-12-17T19:43:41.30945Z"
    number: "46784549"
    number_intvalue: 46784549
    originated: 17-Dec-2018 08:43 PM
    parent_number: '&{NULL_VALUE}'
    product: tvOS + SDK
    product_version: 12.1.1
    reproducible: Always
    resolved: ""
    status: Open
    title: AVQueuePlayer does not seek already played HLS streams properly, causing AVPlayerLooper to jump to wrong time
