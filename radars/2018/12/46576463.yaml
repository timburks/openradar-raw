apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "46576463"
    labels:
        datastore_id: "4983636856143872"
data:
    classification: ""
    created: "2018-12-08T20:09:36.746936Z"
    description: "Summary:\r\nCrash reports of binaries generated with Xcode 10.1 using Swift generics have missing information, where the stack trace entries of specialized generic types contain \"(<compiler-generated>:0)\" as the symbol's type and location. \r\n\r\nIt is obvious that this greatly limits the usefulness of crash reports, and makes analyzing and tracing issues much harder.\r\n\r\nPlease find attached an example of a raw crash report, its symbolicated version, the respective .ipa and zipped dSYM files.\r\n\r\nSteps to Reproduce:\r\nForce a crash on an app build with Xcode 10, where the stack trace uses Swift generics, and symbolicate it.\r\n\r\nExpected Results:\r\nThe symbolicated crash report would contain correct type information and line number for all types (generic or not). Even though previously (Xcode 9) only the type name and line were reported (i.e. not the specialized generic types themselves), the ideal scenario would be that the base type and all specialized types were reported, together with the line number.\r\n\r\nActual Results:\r\nThe symbolicated crash report doesn't contain correct type information and line number for generic types (i.e. has \"(<compiler-generated>:0)\" entries on the stack).\r\n\r\nVersion/Build:\r\nVersion 10.1 (10B61)\r\niOS 12.1\r\n\r\nConfiguration:\r\nmacOS 10.14.1 (18B75)"
    email: p4checo@gmail.com
    modified: "2018-12-26T19:42:36.659848Z"
    number: "46576463"
    number_intvalue: 46576463
    originated: December 8 2018
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 10.1 (10B61)
    reproducible: Always
    resolved: December 11, 2018
    status: Closed
    title: Incomplete crash reports when Swift generics are used
