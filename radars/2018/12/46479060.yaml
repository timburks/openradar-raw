apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "46479060"
    labels:
        datastore_id: "4925891893264384"
data:
    classification: Enhancement
    created: "2018-12-05T07:45:48.204459Z"
    description: "Summary:\r\nNSPredicates currently only support passing in strings with formatted values. There is not presently a compile-time way to validate that: \n\na) The key you’re looking for even exists on the thing you’re using the predicate to find\nb) The name of the key hasn’t changed\nc) The name of the key is spelled the same as the actual property*\nd) The value you’re searching for is actually a valid one for the expected type\n\nThis leads to stuff like `NSPredicate(format: “value == 1”), which is extremely fragile, and super easy to screw up without realizing it. \n\nAdding KeyPath support to NSPredicate would allow type-safe querying, particularly with but not limited to CoreData. I pulled together something (and tested the crap out of it) that seems to do this pretty well: https://github.com/UseSweet/SweetFoundation/pull/34 but have been directed to Radar rather than open-source since this is an Apple-owned API. \n\nCan we have this please? :)\n\n*- I am partial to this reason because I am an absolutely garbage speller, but this would also help developers who are developing in a language that is not their primary language.\r\n\r\nSteps to Reproduce:\r\n1. Use NSSortDescriptor with Swift KeyPaths, rejoice at not having to have Stringly-typed code anymore\n2. Try to use NSPredicate with Swift KeyPaths, realize that doesn’t exist\n3. Have sad\r\n\r\nExpected Results:\r\nAbility to use a Predicate something like `NSPredicate(keyPath: \\Object.isSomething, operatorType: .equals, value: true)`, where the predicate validates that the value of the object at the keyPath `isSomething` actually is a boolean. \r\n\r\nActual Results:\r\n`NSPredicate(“isSomething == 1”)` instead of something type safe.\r\n\r\nVersion:\r\n12.1\r\n\r\nNotes:\r\nAgain, my stab at doing this open source: https://github.com/UseSweet/SweetFoundation/pull/34\nThat’s based on Katsuwi Kishikama’s Kuery, but stripped of any dependencies on core data: https://github.com/kishikawakatsumi/Kuery\n\nOther things I’ve found: \nExisting Swift bug: https://bugs.swift.org/browse/SR-5220\nStab someone took at a spec on adding Predicates to Swift: https://bugs.swift.org/browse/SR-5220"
    email: designatednerd@gmail.com
    modified: "2018-12-05T07:45:48.204571Z"
    number: "46479060"
    number_intvalue: 46479060
    originated: 05-Dec-2018 08:45 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: "12.1"
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Enhancement Request: NSPredicates with Swift KeyPaths'
