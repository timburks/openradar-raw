apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "41200666"
    labels:
        datastore_id: "4960594062999552"
data:
    classification: ""
    created: "2018-06-20T00:54:13.896062Z"
    description: "SourceKit's 'indexsource' request type requires swiftc compiler arguments in order to compile the given source file on demand (I assume). However, the exact arguments required are numerous, not documented and highly specific to the requested source file.\r\n\r\nAdvanced users of 'indexsource' do not typically attempt to construct this set of arguments manually, and instead 'spy' on Xcode in order to determine the necessary arguments. Both SourceKitten[1] and Periphery[2] rely upon parsing the output from xcodebuild to identify the appropriate swiftc call, parse the argument set, and then remove specific arguments that 'indexsource' does not appear to accept[3].\r\n\r\nThis approach is problematic for a number of reasons:\r\n* Building a project simply to obtain the swiftc arguments is extremely inefficient. With regard to Periphery, the xcodebuild step accounts for over 95% of total runtime.\r\n* xcodebuild must also perform a 'clean' build, since the output log will not include swiftc calls for targets which do not need to be rebuilt.\r\n* The format of the arguments as they're used in a swiftc call can be tricky to parse.\r\n* Using xcodebuild is a \"hack\", the log output may change without notice in future Xcode releases.\r\n* Obtaining swiftc arguments for XCTest target requires extra logic, in that xcodebuild's 'build-for-testing' action must be used instead of 'build'.\r\n\r\nIn order to provide a faster and more stable experience to our users, we would like the ability to request build plans without the need to perform an actual build. An ideal solution might look something like this:\r\n\r\n* For a given workspace/project, scheme and target, output an easily parsable build plan.\r\n* XCTest targets should be supported just as normal build targets.\r\n* Optionally, an additional flag would restrict the argument set to those that are compatible with 'indexsource' so that they may be used verbatim.\r\n\r\nThis generic approach would also aid other use-cases which do not intended to use the arguments with SourceKit.\r\n\r\n1. https://github.com/jpsim/SourceKitten\r\n2. https://peripheryapp.com\r\n3. This is not necessarily an exhaustive list, they're just the ones identified during the development of Periphery:\r\n  * \"-Xfrontend\"\r\n  * \"-output-file-map\"\r\n  * \"-parseable-output\"\r\n  * \"-serialize-diagnostics\"\r\n  * \"-incremental\"\r\n  * \"-emit-dependencies\""
    email: port001@gmail.com
    modified: "2018-06-20T00:54:13.896227Z"
    number: "41200666"
    number_intvalue: 41200666
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: ""
    status: ""
    title: Identifying compiler arguments for SourceKit's 'indexsource' request type
