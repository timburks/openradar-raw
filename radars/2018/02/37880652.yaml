apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "37880652"
    labels:
        datastore_id: "4989787626799104"
data:
    classification: Suggestion
    created: "2018-02-26T01:23:01.34121Z"
    description: "I'd like to generate localised string from the following code:\r\n```\r\nlet skills = [\"nunchuck\", \"bow hunting\", \"computer hacking\"]\r\nlet notLocalizedJoined = skills.joined(separator: \", \")\r\n```\r\n\r\nLooking at the wikipedia article for \"comma\", not only is there different kinds of separators, but the elements are ordered differently or some languages mightn't have a separator at all.\r\n\r\nAnd this is to say nothing about generating a list where optionally, say in English, the word \"and\" could precede the final element:\r\n```\r\n\"nunchuck, bow hunting and computer hacking\"\r\n```\r\n\r\nTurns out there's an `icu::ListFormatter` class in the ICU libraries, maybe it's time for an `NSListFormatter`?\r\n\r\nI would have loved to submit a pull request implementing this in the Swift Foundation project but I quickly realised CoreFoundation should be consistent and offer the same functionality upon which the Swift Foundation project should bridge. If only CoreFoundation was open source *hint*!\r\n\r\nhttps://en.m.wikipedia.org/wiki/Comma#In_other_languages\r\nhttp://icu-project.org/apiref/icu4c/classicu_1_1ListFormatter.html\r\nhttps://forums.swift.org/t/localised-string-array-join/10241"
    email: kiel.gillard@gmail.com
    modified: "2018-02-26T23:33:22.94085Z"
    number: "37880652"
    number_intvalue: 37880652
    originated: 6/2/2018
    parent_number: '&{NULL_VALUE}'
    product: Foundation
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Duplicate/12306012/Open
    title: Localised concatenation of strings
