apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "45710119"
    labels:
        datastore_id: "5000025176276992"
data:
    classification: Enhancement
    created: "2018-10-31T20:30:28.494875Z"
    description: "Summary:\r\nUIDocumentBrowserViewController lets the user add custom actions that are executed on selected items in the file browser. However, these actions are provided just once and are expected to work for all the items being presented in the view controller. \n\nI see how there could be an expectation that all the custom actions should be able to work with all the items in the file browser based on the file types that the browser can display. However, this is not always true. \n\nA concrete example would be that our application, PDF Viewer, displays PDF files, but a PDF file has internal flags that control a bunch of features — printing, sharing, and editing, to name a few. A user can tap and hold a PDF on the file browser to reveal a list of actions to execute on that file. \n\nAt this point, it would be useful for us to be able to filter out the custom actions that don’t make sense in the context of the item that’s selected. Say, if the document (which we already have on disk and can parse to get its features) can’t be printed based on permissions, then we could hide the Print action from that menu.\n\nAlthough we can easily work around this API limitation by adding a bunch of checks in our custom sharing UI to see if the document is locked or not and then offer the user the option to unlock it, I think it could be really useful to offer this via a delegate call so that the UI/UX could be tailored more efficiently depending on the file that’s given as a context for the custom action.\n\r\n\r\nSteps to Reproduce:\r\n1. Implement a custom UIDocumentBrowserViewController subclass and instantiate it with a desired type identifier.\n2. Add a set of UIDocumentBrowserAction with availability set to .menu to the view controller’s .customActions property.\n3. Run the app, tap and hold on an item on the file browser to reveal the action menu.\n4. Notice how all the actions are available for every item, and there’s no way to filter out those actions that don’t make sense for the current item being selected.\r\n\r\nExpected Results:\r\nThere is a way to filter out custom actions from the UIMenuController that are not relevant for the current item that’s showing that menu. Ideally through a delegate callback or an NSPredicate that can be defined on the UIDocumentBrowserAction at instantiation time.\r\n\r\nActual Results:\r\nThere is not a way to filter out custom actions from the UIMenuController that are not relevant for the current item that’s showing that menu.\r\n\r\nVersion:\r\n12.1\r\n\r\nNotes:"
    email: oscar@swanros.com
    modified: "2018-10-31T20:30:28.495238Z"
    number: "45710119"
    number_intvalue: 45710119
    originated: 31-Oct-2018 02:30 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS + SDK
    product_version: "12.1"
    reproducible: Always
    resolved: ""
    status: Open
    title: UIDocumentBrowserViewController.customActions can't be filtered on a per-file basis
