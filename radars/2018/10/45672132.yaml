apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "45672132"
    labels:
        datastore_id: "5048874255253504"
data:
    classification: Performance
    created: "2018-10-30T17:20:36.549604Z"
    description: "Summary:\r\nThis is a duplicate of radar #45648013\n\nArea:\r\nSomething not on this list\r\n\r\nSummary: Calling readdir() from multiple threads apparently acquires a global kernel lock, making directory traversal operations from multiple processes extremely slow as the number of parallel I/O operations increases.\r\n\r\n\r\nSteps to Reproduce:\r\n\r\nI have a Gist at https://gist.github.com/indygreg/a50e187f5372807cdcab5ac12bc2feea that demonstrates the issue using Python.\r\n\r\n\r\nExpected Results:\r\n\r\nIt would be nice if read-only parallel I/O scaled linearly (within reason). Other filesystems (like EXT4) don't exhibit excessive kernel CPU time performing the same type of I/O operations in parallel.\r\n\r\nIn addition, it would be useful if the APFS developer documentation documented which I/O operations are subject to global locks so developers know how to optimize parallel I/O under APFS.\r\n\r\nActual Results:\r\n\r\nParallel I/O performing readdir() results in excessive CPU time being spent in the kernel acquiring locks.\r\n\r\nVersion/Build:\r\n\r\nI've reproduced on macOS 10.13.6 and 10.14 on a MacBook Pro 15.1. Others have reproduced on other devices running macOS. I assume the issue is intrinsic to APFS.\r\n\r\nPerformance on 10.14 is noticeably better than 10.13. But performance is still slower lagging, especially when compared to Linux/EXT4.\r\n\r\nConfiguration:\r\n\r\nNothing special. Was able to reproduce on a fresh 2018 MacBook Pro straight from Apple.\n\r\n\r\nSteps to Reproduce:\r\nI have a Gist at https://gist.github.com/indygreg/a50e187f5372807cdcab5ac12bc2feea that demonstrates the issue using Python.\r\n\r\nExpected Results:\r\nIt would be nice if read-only parallel I/O scaled linearly (within reason). Other filesystems (like EXT4) don't exhibit excessive kernel CPU time performing the same type of I/O operations in parallel.\r\n\r\nIn addition, it would be useful if the APFS developer documentation documented which I/O operations are subject to global locks so developers know how to optimize parallel I/O under APFS.\r\n\r\nActual Results:\r\nParallel I/O performing readdir() results in excessive CPU time being spent in the kernel acquiring locks.\r\n\r\nVersion/Build:\r\n\r\nI've reproduced on macOS 10.13.6 and 10.14 on a MacBook Pro 15.1. Others have reproduced on other devices running macOS. I assume the issue is intrinsic to APFS.\r\n\r\nPerformance on 10.14 is noticeably better than 10.13. But performance is still slower lagging, especially when compared to Linux/EXT4.\r\n\r\nVersion:\r\n 10.14.0\r\n\r\nNotes:"
    email: steipete@gmail.com
    modified: "2018-10-30T17:20:36.549729Z"
    number: "45672132"
    number_intvalue: 45672132
    originated: 30-Oct-2018 06:20 PM
    parent_number: '&{NULL_VALUE}'
    product: macOS + SDK
    product_version: 10.14.0
    reproducible: Always
    resolved: ""
    status: Open
    title: APFS acquires (apparant global) lock in kernel for readdir(), making parallel I/O slow
