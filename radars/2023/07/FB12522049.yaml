apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB12522049
    labels:
        datastore_id: "5531820447760384"
data:
    classification: Bug
    created: "2023-07-05T09:24:19.821739Z"
    description: "## URL Fragment Text Directives specification\r\n\r\nhttps://wicg.github.io/scroll-to-text-fragment/#textdirectiveexplicitchar \r\n\r\nA TextDirectiveExplicitChar is any URL code point that is not explicitly used in the TextDirective syntax, that is \"&\", \"-\", and \",\". If a text fragment refers to a \"&\", \"-\", or \",\" character in the document, it will be percent-encoded in the fragment.\r\n\r\n\r\n## Reproduction\r\n\r\n1. Open any web page.\r\n2. Copy the text fragment you want to link to from the page text. A few words including punctuation.\r\n3. Open the address bar.\r\n4. At the end of the URL is there is no anchor link yet add `#:~:text=` if there is an anchor link already just add `:~:text=`\r\n5. Paste your text string.\r\n6. Hit ENTER.\r\n\r\n**Expected**: Safari correctly encoded the text fragment into the URL.\r\n\r\n**Actual**: Safari does not correct escape hyphens and ampersands in the pasted strings\r\n\r\n- ✅ `one two` gets `one%20two`\r\n- ℹ️ `one, two` in the address bar shows as `one,%20two` in the UI which would fail, but I guess \"behind the scenes\" the comma actually is encoded as `one%2C%20two`. Because Safari correctly jumps to and highlights the full string.\r\n- ❌ `one & two` gets `one%20&%20two` so falsely will only match `one%20`.\r\n- ❌ `one-two` remains `one-two` so falsely will only match `one`.\r\n- See in the attached videos\r\n\r\n## Environment\r\n\r\n- Safari 16.5 on macOS 11.7.7 Big Sur"
    email: p.org@gmx.at
    modified: "2023-07-05T09:24:19.821868Z"
    number: FB12522049
    number_intvalue: 12522049
    originated: "2023-07-05"
    parent_number: '&{NULL_VALUE}'
    product: Safari
    product_version: "16.5"
    reproducible: Yes
    resolved: ""
    status: Open
    title: 'Safari performs string escaping of text fragment in address bar partially wrong: Hyphen and Ampersand MUST be escaped but are NOT.'
