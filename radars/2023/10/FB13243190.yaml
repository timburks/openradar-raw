apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB13243190
    labels:
        datastore_id: "5535393164296192"
data:
    classification: Bug
    created: "2023-10-07T02:42:43.25535Z"
    description: "When multiple nested views are wrapped inside Link, it causes excessive CPU and memory usage. \r\n\r\nThe attached sample code reproduces this issue. \r\n- Open the project\r\n- Run the `widgetsExtension` scheme from the project as-is (pre-configured to use the Release build config)\r\n- Observe spike in CPU and memory usage (this causes a excessive memory usage crash in production builds)\r\n- Stop the run cycle\r\n- Comment out all `Link` declarations, leaving the `Link.Label` as-is, so the content continues to render \r\n- Run the `widgetsExtension` scheme, and observe no spike in CPU or memory usage \r\n\r\nWhile the outermost `Link` should always take precedence (this behaviour is correctly observed), SwiftUI should then smartly skip evaluating inner `Link` declarations on only evaluate their labels, at-least for Widgets and complications. \r\n\r\nBuilt using Xcode Version 15.0 (15A240d) (also observed with XC 15.1 Beta 1) on macOS 14.0 (23A344)\r\n\r\nSample Code at: https://github.com/dezinezync/FB13207951.git"
    email: nikhil@dezinezync.com
    modified: "2023-10-07T02:42:43.255504Z"
    number: FB13243190
    number_intvalue: 13243190
    originated: 07/10/2023
    parent_number: '&{NULL_VALUE}'
    product: SwiftUI
    product_version: iOS 17 RC Seed (21A329)
    reproducible: Yes
    resolved: ""
    status: Open
    title: Nested views wrapped in Link cause excessive CPU and memory usage
