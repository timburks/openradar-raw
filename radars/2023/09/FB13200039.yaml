apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB13200039
    labels:
        datastore_id: "5552274289983488"
data:
    classification: ""
    created: "2023-09-23T16:10:59.156444Z"
    description: "I've been stuck on this one for quite a while now, and I'm starting to become more and more convinced this is an issue with Xcode 15 Beta RC.\r\n\r\nJust to give you some context I seem to be getting the following crash after modifying my schema (adding new properties) for the the second time. Below is the crash that is occurring on my device & simulator.\r\n\r\n```\r\nUnresolved error loading container Error Domain=NSCocoaErrorDomain Code=134130 \"Persistent store migration failed, missing source managed object model.\" UserInfo={URL=file:///Users/xxxxx/Library/Developer/CoreSimulator/Devices/23B8CDDD-CC5F-4A1C-B0F4-CF89C77B7ECF/data/Containers/Data/Application/235A14D7-6492-439F-BB4D-B18498D80970/Library/Application%20Support/default.store, metadata={\r\n    NSPersistenceFrameworkVersion = 1327;\r\n    NSStoreModelVersionChecksumKey = \"dia3s8Q2+lqw669j9+RcPLQ+06yu0x6BBTZ4cXoQ1os=\";\r\n    NSStoreModelVersionHashes =     {\r\n        Category = {length = 32, bytes = 0x187754bb 36c51a62 85ede16f 4b2a3912 ... 57326030 2de7ef77 };\r\n        Item = {length = 32, bytes = 0xa7e4be4d ddd86d36 f71799b0 bc69dcb4 ... 83d47dfe d433fc01 };\r\n    };\r\n    NSStoreModelVersionHashesDigest = \"G/Tk4lzyeNBXzf5+7qxbd+isF8uFnSaC5LtUCCkC8GQwaG1d9Di0eJ10NQEyPgwRczoYeYAMYG8ai4RooEhH9w==\";\r\n    NSStoreModelVersionHashesVersion = 3;\r\n    NSStoreModelVersionIdentifiers =     (\r\n        \"1.2.0\"\r\n    );\r\n    NSStoreType = SQLite;\r\n    NSStoreUUID = \"A99894EA-FA7B-4CA7-AEB7-6DEE42843EC0\";\r\n    \"_NSAutoVacuumLevel\" = 2;\r\n}, reason=Can't find model for source store}\r\n```\r\n\r\nI currently have 5 versions of my Schemas there's two of them\r\n\r\n- Item\r\n- Category\r\n\r\nBelow is a minified changelog of what has changed between versions.\r\n\r\n- Version 1 (Initial Version)\r\n- Version 2 (Lightweight Migration - Property is renamed in Item)\r\n- Version 3 (Custom Migration - New Property is added to Item both are bools)\r\n- Version 4 (Custom Migration - New Property is added to Category which is a transformable)\r\n- Version 5 (Custom Migration - New Property is added to Item which is a string)\r\n\r\nIt's quite a large file with all of the version schema's etc so i've created a gist [here](https://gist.github.com/tunds/7f45a4c815ea85e1721f52859e161388) for you to see all of the changes that have been made between Version 1 up until Version 5.\r\n\r\nThe problem that I'm seeing is that between migration for V1 up until V4 everything is fine. It's only until SwiftData attempt to migrate V4 to V5 and I get the crash that I have provided above, and V5 only has a new string property which shouldn't be causing a crash since I've done 2 custom migrations that were all fine before V5 so this seems really strange even tho my migration plan is setup properly which you can see below.\r\n\r\n```\r\nenum ToDosMigrationPlan: SchemaMigrationPlan {\r\n    static var schemas: [VersionedSchema.Type] {\r\n        [ToDosSchemaV1.self,\r\n         ToDosSchemaV2.self,\r\n         ToDosSchemaV3.self,\r\n         ToDosSchemaV4.self,\r\n         ToDosSchemaV5.self]\r\n    }\r\n    \r\n    static var stages: [MigrationStage] {\r\n        [\r\n            migrateV1toV2,\r\n            migrateV2toV3,\r\n            migrateV3toV4,\r\n            migrateV4toV5\r\n        ]\r\n    }\r\n    \r\n    // V1 to V2\r\n    static let migrateV1toV2 = MigrationStage.lightweight(\r\n        fromVersion: ToDosSchemaV1.self,\r\n        toVersion: ToDosSchemaV2.self\r\n    )\r\n    \r\n    // V2 to V3\r\n    static let migrateV2toV3 = MigrationStage.custom(\r\n        fromVersion: ToDosSchemaV2.self,\r\n        toVersion: ToDosSchemaV3.self,\r\n        willMigrate: nil,\r\n        didMigrate: { context in\r\n            \r\n            let items = try? context.fetch(FetchDescriptor<ToDosSchemaV3.Item>())\r\n            \r\n            items?.forEach { item in\r\n                item.isFlagged = false\r\n                item.isArchived = false\r\n            }\r\n            \r\n            try? context.save()\r\n        })\r\n    \r\n    static let migrateV3toV4 = MigrationStage.custom(\r\n        fromVersion: ToDosSchemaV3.self,\r\n        toVersion: ToDosSchemaV4.self,\r\n        willMigrate: nil,\r\n        didMigrate: { context in\r\n            \r\n            let categories = try? context.fetch(FetchDescriptor<ToDosSchemaV4.Category>())\r\n            categories?.forEach { category in\r\n                category.color = UIColor(possibleColors.randomElement()!)\r\n            }\r\n            \r\n            try? context.save()\r\n            \r\n        })\r\n    \r\n    static let migrateV4toV5 = MigrationStage.custom(\r\n        fromVersion: ToDosSchemaV4.self,\r\n        toVersion: ToDosSchemaV5.self,\r\n        willMigrate: nil,\r\n        didMigrate: { context in\r\n            \r\n            // TODO: Handle setting some custom data here with defaults\r\n\r\n        })\r\n}\r\n```\r\n\r\nHas anyone come across this or got any ideas as to what the problem may be?\r\n\r\n\r\nI've tried the following:\r\n\r\n- Making sure the model container is only created once\r\n- Testing out each migration phase from V1 up until V4 and this is fine\r\n- On a real device which is the same as the simulator\r\n\r\nDeleting the app off the device and/or sim and running it fresh is all fine. But I can't tell peeps to delete the app of their device. Since the whole point of a migration is to help me migrate the data which it seems be failing on after a 3rd change to the Schema.\r\n\r\n\r\nI’ve also attached 3 Versions of the project so you can test out migrations and see the issue that I’m having pls run the builds in the stages that I’ve labelled them in."
    email: minimaappslimited@gmail.com
    modified: "2023-09-23T16:10:59.156613Z"
    number: FB13200039
    number_intvalue: 13200039
    originated: 23/09/2023
    parent_number: '&{NULL_VALUE}'
    product: SwiftData
    product_version: iOS 17
    reproducible: ""
    resolved: ""
    status: Open
    title: SwiftData Crashes After Modifying The VersionedSchema More Than Once
