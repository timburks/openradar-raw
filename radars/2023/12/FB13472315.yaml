apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB13472315
    labels:
        datastore_id: "5538922419453952"
data:
    classification: Incorrect/Unexpected Behavior
    created: "2023-12-16T19:49:21.056945Z"
    description: "I have attached a sample project demonstrating the use of `ModelContext.registeredModel(for:)` to get already-fetched models. The method crashes when the generic type does not match the actual type as shown in the sample project:\r\n```\r\nprivate func track(for trackID: PersistentIdentifier) -> Track? {\r\n   // Crashes when `registeredModel` tries to force cast a `MusicVideo` instance to `Song`.\r\n   if let song: Song = modelContext.registeredModel(for: trackID) {\r\n      return .song(song)\r\n   }\r\n\r\n   if let musicVideo: MusicVideo = modelContext.registeredModel(for: trackID) {\r\n      return .musicVideo(musicVideo)\r\n   }\r\n\r\n   return nil\r\n}\r\n```\r\n\r\n`ModelContext.registeredModel(for:)` tries to force cast the model instance to the generic type. This is unnecessary since the method returns an optional. Rather than crashing, the method should just return `nil` if the type did not match by using a conditional cast instead of a force cast."
    email: darren.mo@me.com
    modified: "2023-12-16T19:49:21.057061Z"
    number: FB13472315
    number_intvalue: 13472315
    originated: "2023-12-16"
    parent_number: '&{NULL_VALUE}'
    product: SwiftData
    product_version: iOS 17.2 RC Seed (21C62)
    reproducible: Always
    resolved: ""
    status: Open
    title: '`ModelContext.registeredModel(for:)` crashes when generic type does not match actual type'
