apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11261944"
    labels:
        datastore_id: "1646412"
data:
    classification: Enhancement
    created: "2012-04-17T07:02:18.002882Z"
    description: "17-Apr-2012 04:57 PM Nathan de Vries:\r\nSummary:\r\n\r\nThe public WebKit.framework that ships on Mac OS X allows you to access the JavaScriptCore context of a WebView's top-level frame like so:\r\n\r\nWebView* webView = ...;\r\nWebFrame* webFrame = [webView mainFrame];\r\nJSGlobalContextRef globalContextRef = [webFrame globalContext];\r\n\r\nOnce you have access to the globalContext, writing bindings between your native application wrapper and the web content is trivial.\r\n\r\nOn iOS, these APIs are private. The only way to write a bridge between native and web content with UIWebViews is to use stringByEvaluatingJavaScriptFromString: and custom URL handlers, both of which are limited to string-based protocols. This is error prone, slow, and cumbersome.\r\n\r\nMaking these APIs private does not prevent data being passed back & forth, it simply creates more work for the developer.\r\n\r\nExpected Results:\r\n\r\nAccessing the JSGlobalContextRef of a UIWebView's top-level frame should be supported with a public API.\r\n\r\nActual Results:\r\n\r\nThe API is private.\r\n\r\nRegression:\r\n\r\nN/A\r\n\r\nNotes:\r\n\r\nN/A"
    email: nathan@atnan.com
    modified: "2012-04-17T07:02:18.003258Z"
    number: "11261944"
    number_intvalue: 11261944
    originated: 17-Apr-2012 04:57 PM
    parent_number: '&{NULL_VALUE}'
    product: Safari
    product_version: 7534.48.3
    reproducible: Yes
    resolved: No
    status: Open
    title: Expose the JSGlobalContextRef of a UIWebView's top-level frame
