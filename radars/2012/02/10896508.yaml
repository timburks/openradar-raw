apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10896508"
    labels:
        datastore_id: "1517414"
data:
    classification: ""
    created: "2012-02-20T18:44:44.656618Z"
    description: "21-Feb-2012 02:43 AM Jeremy Foo:\r\nSummary:\r\nNSKeyedUnarchiverDelegate specifies a method (unarchiver:didDecodeObject:) that allows for an object to be substituted for the one that was decoded.\r\n\r\nThis object, if newly created with a retain count of 1 cannot be autoreleased. This is so because the unarchiver doesn't seem to retain this new substitute object but will release it upon deallocation.\r\n\r\nAttached is sample open source project that currently makes extensive use of this replacement system.\r\n\r\nIn particular refer to the MNUnarchiver.m file on line 134. By removing the \"autorelease\" this project no longer crashes.\r\n\r\nSteps to Reproduce:\r\n1. Run Mac/iOS project of the attached workspace.\r\n2. Archive something.\r\n3. Unarchive something.\r\n\r\nExpected Results:\r\nThe attributed string will unarchive without problems.\r\n\r\nActual Results:\r\nThe project crashes citing an EXEC_BAD_ACCESS. Further investigation will reveal that the decoded object has become a zombie prior to the final deallocation of the MNUnarchiver class.\r\n\r\nRegression:\r\n\r\nNotes:\r\nChecking for leaks with Instruments shows that despite removing the autorelease, no leaks occur which supports the hypothesis that somewhere down the line, the substitute object sent by the delegate is not being retained.\r\n\r\n21-Feb-2012 02:43 AM Jeremy Foo:\r\n'MNcoder.zip' was successfully uploaded\r\n(http://www.github.com/echoz/MNcoder)"
    email: jeremyfoo@gmail.com
    modified: "2014-10-06T21:33:11.055947Z"
    number: "10896508"
    number_intvalue: 10896508
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: Other
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Closed
    title: NSKeyedUnarchiver is not retaining replacement object from delegate
