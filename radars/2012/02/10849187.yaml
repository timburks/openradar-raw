apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10849187"
    labels:
        datastore_id: "1513402"
data:
    classification: Enhancement
    created: "2012-02-11T21:26:21.164689Z"
    description: "Summary:\r\n\r\ninstancetype is a keyword to allow return-type covariance in Objective-C. It cannot, however, be decorated with protocols.\r\n\r\nSteps to Reproduce:\r\n\r\n@protocol Decorated\r\n- (instancetype <Decorated>)operation:(id)operand;\r\n@end\r\n \r\n\r\nExpected Results:\r\n\r\nFor every class T which implements <Decorated>, -[T operation:] should return a value of type `T <Decorated>*`. At first glance, this may not seem that useful. However, in cases where we do not wish the interface of a protocol to pollute all objects in all contexts (even though it is implemented universally), we may wish to return objects that are promised to implement a protocol.\r\n\r\nCurrently, we have two paths that we can follow. Lose covariance (and thus safety):\r\n\r\n@protocol Decorated\r\n- (id <Decorated>)operation:(id)operand;\r\n@end\r\n\r\nor require more casting upfront for API consumers:\r\n\r\n@protocol Decorated\r\n- (instancetype)operation:(id)operand;\r\n@end\r\n\r\nvoid example(NSString <Decorated> *input) {\r\n  [(NSString<Decorated>*)[input operation:@\"hi\"] operation:operand];\r\n}\r\n\r\nNo bueno.\r\n\r\n\r\nActual Results:\r\n\r\nParse error: “Expected ')'”."
    email: jonsterling@gmail.com
    modified: "2012-02-11T21:26:21.165502Z"
    number: "10849187"
    number_intvalue: 10849187
    originated: 11-Feb-2012
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: It should be possible to decorate instancetype with protocols
