apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "12761147"
    labels:
        datastore_id: "2344401"
data:
    classification: Other Bug
    created: "2012-11-27T22:39:00.585589Z"
    description: "Summary:\r\nThe GLKTextureLoader method -textureWithContentsOfFile:options:error: options dictionary has a key, GLKTextureLoaderGenerateMipmaps, which the documentation says is \"an NSNumber object that specifies a boolean value\".\r\n\r\nIf I use the following code to call this method, mipmaps are not generated as requested:\r\n\r\n    BOOL generateMipmaps = YES;\r\n    options = @{ GLKTextureLoaderGenerateMipmaps : @(generateMipmaps) };\r\n    tex = [GLKTextureLoader textureWithContentsOfFile:path\r\n                                              options:options\r\n                                                error:NULL];\r\n\r\nThe method *does* generate mipmaps if I instead use the following options dictionary:\r\n\r\n    options = @{ GLKTextureLoaderGenerateMipmaps : @YES };\r\n\r\nThe reason for this appears to be that @(YES) evaluates to an __NSCFNumber, and our guess is that -textureWithContentsOfFile:options:error: compares this value using \"== kCFBooleanTrue\", instead of sending the message -boolValue.  This method should use -boolValue or some similar mechanism to check the value in order to make it less susceptible to compiler subtleties."
    email: preble@gmail.com
    modified: "2013-03-13T15:16:24.404034Z"
    number: "12761147"
    number_intvalue: 12761147
    originated: 11/27/2012
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X SDK
    product_version: 10.8.2
    reproducible: Always
    resolved: 3/13/2013
    status: Closed
    title: '-textureWithContentsOfFile:options:error: incorrectly compares options values'
