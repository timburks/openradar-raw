apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11541549"
    labels:
        datastore_id: "1755402"
data:
    classification: Other bug
    created: "2012-05-27T00:39:06.513063Z"
    description: "Summary:\r\nNSURLRequestUseProtocolCachePolicy is the default cache policy used by NSURLRequest. The documentation for NSURLRequestUseProtocolCachePolicy states that it follows the process documented in http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.\r\n\r\nUnfortunately, section 13.2.4 of this documentation (http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.4) does not cover what happens when a server does not provide expiration details as a part of its response to the client. What it says instead is:\r\n\r\n\"If none of Expires, Cache-Control: max-age, or Cache-Control: s- maxage (see section 14.9.3) appears in the response, and the response does not include other restrictions on caching, the cache MAY compute a freshness lifetime using a heuristic.\"\r\n\r\nThe caching behavior in this instance is not documented for NSURLRequest. Empirical evidence from furious users suggests that the data is cached for somewhere between 4 and 24 hours, but not indefinitely.\r\n\r\nSteps to Reproduce:\r\nN/A\r\n\r\nExpected Results:\r\nDocumentation would at least describe how long data is cached in an absence of server-defined expiration data and display this information prominently along with the enumeration comments.\r\n\r\nActual Results:\r\nI have not found anything or anyone that can state how long this data is cached.\r\n\r\nRegression:\r\nN/A\r\n\r\nNotes:\r\nOw."
    email: daniel@blackpixel.com
    modified: "2012-05-27T00:39:06.513295Z"
    number: "11541549"
    number_intvalue: 11541549
    originated: 5/26/2012
    parent_number: '&{NULL_VALUE}'
    product: Documentation
    product_version: N/A
    reproducible: N/A
    resolved: No
    status: Open
    title: NSURLRequestUseProtocolCachePolicy default expiration handling not documented
