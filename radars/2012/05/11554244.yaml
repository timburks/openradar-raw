apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11554244"
    labels:
        datastore_id: "1756402"
data:
    classification: Crash/Hang/Data Loss
    created: "2012-05-30T03:25:18.878016Z"
    description: "29-May-2012 08:24 PM Nico Weber:\r\nSummary:\r\ndlopen() crashes in sandboxed binary with LC_RPATH load commands\r\n\r\nSteps to Reproduce:\r\nBuild a program that is sandboxed and that calls dlopen() with -Wl,-rpath,@executable_path/foo. Run it.\r\n\r\nFor example this program:\r\n\r\n#include <dlfcn.h>\r\n#include <sandbox.h>\r\nint main() {\r\n  char* err;\r\n  sandbox_init(kSBXProfilePureComputation, SANDBOX_NAMED, &err);\r\n dlopen(\"/System/Library/Frameworks/ApplicationServices.framework/Frameworks/ATS.framework/Resources/libFontRegistry.dylib\", RTLD_LAZY | RTLD_LOCAL);\r\n}\r\n\r\nThis doesn't crash:\r\nclang  foo.c -o foo   && ./foo\r\n\r\nThis does crash:\r\nclang  foo.c -o foo -Wl,-rpath,@loader_path/foo  && ./foo\r\nfoo(47269) malloc: *** error for object 0x10000062c: pointer being freed was not allocated\r\n*** set a breakpoint in malloc_error_break to debug\r\n\r\n\r\n\r\nExpected Results:\r\ndlopen() should fail, but not crash.\r\n\r\nActual Results:\r\nIt crashes.\r\n\r\nRegression:\r\nNo.\r\n\r\nNotes:\r\n\r\n29-May-2012 08:24 PM Nico Weber:\r\n'foo.c' was successfully uploaded"
    email: thakis@chromium.org
    modified: "2012-05-30T03:25:18.878154Z"
    number: "11554244"
    number_intvalue: 11554244
    originated: May 29, 2012
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.6.8
    reproducible: Always
    resolved: ""
    status: Open
    title: dlopen() crashes in sandboxed binary with LC_RPATH load commands
