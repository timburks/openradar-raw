apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11417364"
    labels:
        datastore_id: "1686408"
data:
    classification: Other bugs
    created: "2012-05-09T19:58:47.313414Z"
    description: "Summary:\r\n\r\nNSNumberFormatter's method \r\n\r\n- (NSNumber *)numberFromString:(NSString *)string\r\n\r\nGiven a string which contains a decimal number, such as \"1.0\" returns NSNumber object with wrong value. \r\n\r\nSteps to Reproduce:\r\n\r\n1. Create a new NSNumberFormatter object instance using alloc-init\r\n2. Call the newly created object instance's numberFromString: method and provide it with an NSString argument which has a decimal number, for instance \"1.0\"\r\n3. Log the result of newly created NSNumber's intValue method into the console: NSLog(@\"%d\", [number intValue]);\r\n\r\nExpected Results:\r\n\r\nConsole logs the number representation of given string, in this case, the console output should be \"1\"\r\n\r\nActual Results:\r\n\r\nThe console output is \"0\"\r\n\r\nNotes:\r\n\r\nI tested this on iOS 4.3 and 5.1 devices and the results are the same. But when I tested it on iOS Simulator with iOS 5.1, the result was correct which is somewhat confusing. There's a sample piece of code in attachment which reproduces the bug on the device. Right now, the only workaround this is to use NSScanner.\r\n\r\n09-May-2012 09:52 PM Michal Tuszynski:\r\n'number_formatter.m' was successfully uploaded\r\n\r\n//Contents of number_formatter.m:\r\nNSString *sampleString = @\"1.0\";\r\nNSNumberFormatter *formatter = [[NSNumberFormatter alloc] init];\r\nNSNumber *number = [formatter numberFromString:sampleString];\r\n    \r\n//The output in console should be 1, but is 0\r\nNSLog(@\"%d\", [number intValue]);"
    email: srgtuszy@gmail.com
    modified: "2012-05-09T20:01:02.208234Z"
    number: "11417364"
    number_intvalue: 11417364
    originated: 09.05.2012
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 4.3.2 (4E2002)
    reproducible: Always
    resolved: No
    status: Open
    title: NSNumberFormatter fails to convert NSString with a decimal number to NSNumber
