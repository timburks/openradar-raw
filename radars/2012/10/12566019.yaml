apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "12566019"
    labels:
        datastore_id: "2197402"
data:
    classification: UI/Usability
    created: "2012-10-24T18:41:52.624219Z"
    description: "Summary:\r\nWhen linking to a particular static library (included with attached project), the linker fails to report which symbols are involved in link errors triggered by unrelated files.\r\n\r\nSteps to Reproduce:\r\nBuild both targets (shylinker and happylinker) in the attached project.\r\n\r\nExpected Results:\r\nBoth targets should fail to build with a linker error along the lines of:\r\nUndefined symbols for architecture x86_64:\r\n  \"_ThisFunctionIsNotDefined\", referenced from:\r\n      _main in main.o\r\nld: symbol(s) not found for architecture x86_64\r\n\r\nActual Results:\r\nhappylinker produces the expected error message. shylinker produces a much less helpful message:\r\nld: '_main' in /.../shylinker.build/Objects-normal/x86_64/main.o contains undefined reference for architecture x86_64\r\n\r\nRegression:\r\nI believe this happened in Xcode 4.5.0. I don't remember if I saw it in 4.4.\r\n\r\nNotes:\r\nBoth targets have the same link error, and both link to the static library. The difference is that only shylinker contains a separate source file which contains a function that calls into the static library. That file is not involved in any link errors. The setup is described in more detail in the included README.txt file.\r\n\r\n\r\n\r\nAttachment:\r\nhttp://jens.ayton.se/code/files/shylinker.zip"
    email: google.j@ayton.se
    modified: "2012-10-24T18:41:52.624571Z"
    number: "12566019"
    number_intvalue: 12566019
    originated: "2012-10-24"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: 4.5.1/4G1004
    reproducible: Always
    resolved: ""
    status: Open
    title: Linker fails to report link errors clearly when linking against specific library
