apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "12799771"
    labels:
        datastore_id: "2414401"
data:
    classification: ""
    created: "2012-12-11T20:06:08.473934Z"
    description: "We have an application that implemented GKSession to pass data between iOS devices. Starting with iOS 6, we're starting to see an odd problem where the application hangs when sending data to or disconnecting from peers. Here's a sample stack trace from our application when it is frozen (occurred when attempting to send data):\r\n#0 0x3485e0fc in __psynch_mutexwait ()\r\n#1 0x32537128 in pthread_mutex_lock ()\r\n#2 0x3833f89c in AGPSessionBroadcast ()\r\n#3 0x38360a62 in -[GKSessionInternal sendDataToAllPeers:withDataMode:error:] ()\r\n#4 0x38d22bac in -[GKSession sendDataToAllPeers:withDataMode:error:] ()\r\n#5 0x000e8130 in -[RootViewController sendThisChat:peer:] at /Users/gauthamnookala/Developer/RabbleBrowser/RabbleBrowser/RabbleBrowser/RabbleBrowser/RootViewController.m:169\r\n#6 0x000f8590 in -[ChatViewController sendThisChat:] at /Users/gauthamnookala/Developer/RabbleBrowser/RabbleBrowser/RabbleBrowser/RabbleBrowser/ChatViewController.m:280\r\n#7 0x000f8af8 in -[ChatViewController textView:shouldChangeTextInRange:replacementText:] at /Users/gauthamnookala/Developer/RabbleBrowser/RabbleBrowser/RabbleBrowser/RabbleBrowser/ChatViewController.m:320\r\n#8 0x33fb03d6 in -[UITextView keyboardInput:shouldInsertText:isMarkedText:] ()\r\n#9 0x33f61922 in -[UIWebDocumentView keyboardInput:shouldInsertText:isMarkedText:] ()\r\n#10 0x33f256ee in -[UIKeyboardImpl callShouldInsertText:] ()\r\n#11 0x3403c5a4 in __48-[UIKeyboardImpl addInputString:fromVariantKey:]_block_invoke_0 ()\r\n#12 0x33f24e06 in -[UIKeyboardImpl addInputString:fromVariantKey:] ()\r\n#13 0x33f22f84 in -[UIKeyboardImpl handleKeyEvent:] ()\r\n#14 0x33f228ae in -[UIKeyboardLayoutStar sendStringAction:forKey:isPopupVariant:] ()\r\n#15 0x33f213a4 in -[UIKeyboardLayoutStar touchUp:] ()\r\n#16 0x33f2072e in -[UIKeyboardLayout touchesEnded:withEvent:] ()\r\n#17 0x33e085f0 in -[UIWindow sendTouchesForEvent:] ()\r\n#18 0x33df5800 in -[UIApplication sendEvent:] ()\r\n#19 0x33df511a in _UIApplicationHandleEvent ()\r\n#20 0x321c05a2 in _PurpleEventCallback ()\r\n#21 0x321c01d2 in PurpleEventCallback ()\r\n#22 0x348fb172 in __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION_ ()\r\n#23 0x348fb116 in __CFRunLoopDoSource1 ()\r\n#24 0x348f9f98 in __CFRunLoopRun ()\r\n#25 0x3486cebc in CFRunLoopRunSpecific ()\r\n#26 0x3486cd48 in CFRunLoopRunInMode ()\r\n#27 0x321bf2ea in GSEventRunModal ()\r\n#28 0x33e492f8 in UIApplicationMain ()\r\n#29 0x000d6556 in main at /Users/gauthamnookala/Developer/RabbleBrowser/RabbleBrowser/RabbleBrowser/RabbleBrowser/main.m:14\r\n\r\nIt attempted to send this data to two peers--one running iOS 5.1 and the other iOS 5.1.1. This hang only occurs on iOS 6 devices and seems to only occur when it has an iOS 5 device as a peer.\r\n\r\nSteps to Reproduce:\r\nWe have not determined a consistent set of steps to reproduce, but whenever we have a GKSession with iOS 6 and iOS 5 devices, it's only a matter of time before the iOS 6 devices hangs.\r\n\r\nExpected Results:\r\nIt should work like it did on iOS 5.x where it wouldn't lock up the main thread.\r\n\r\nActual Results:\r\nLocks up main thread. No apparent error message or infinite loops or crashes. Just a thread lock.\r\n\r\nRegression:\r\n\r\nNotes:"
    email: chadudell@gmail.com
    modified: "2012-12-14T03:18:36.281265Z"
    number: "12799771"
    number_intvalue: 12799771
    originated: 03-Dec-2012
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: Open
    status: Open
    title: Gamekit broken in iOS6 when in a heterogeneous iOS 5 and iOS 6 network
