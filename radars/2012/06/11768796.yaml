apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11768796"
    labels:
        datastore_id: "1799404"
data:
    classification: Security
    created: "2012-06-28T15:38:51.38681Z"
    description: "Summary:\r\nUsers are unable to change their password using System Preferences -> Users & Groups on a Mac that is connected to an LDAP server (specifically, OpenLDAP).\r\n\r\nThis error appears to be a result of OS X 10.7.4 now sending the username of the user rather than their full DN (e.g. it's sending 'bobsmith', not 'uid=bobsmith,ou=Users,dc=companyname,dc=com')\r\n\r\nSteps to Reproduce:\r\nTry to change the password using the System Preferences -> Users & Groups prefpane on Lion. It fails with the following error message:\r\n\r\nThe password for the account “<bobsmith>” was not changed.\r\n\r\nYour system administrator may not allow you to change your password or there was some other problem with your password. Contact your system administrator for help.\r\n\r\nExpected Results:\r\nThe password should be changed.\r\n\r\nActual Results:\r\nThe error appears, and on the LDAP server, an error like the following is logged:\r\n\r\nJun 28 08:42:21 ldap3 slapd[7810]: conn=10518785 op=2 RESULT oid= err=21 text=Invalid DN\r\n\r\nThis error appears to be a result of OS X 10.7.4 now sending the username of the user rather than their full DN (e.g. it's sending 'bobsmith', not 'uid=bobsmith,ou=Users,dc=companyname,dc=com')\r\n\r\nRegression:\r\n\r\nNotes:\r\nThis was encountered by someone else who ended up patching their LDAP server to resolve the issue. This shouldn't require patching LDAP to resolve, however. Lion needs to (at least have an option to) send the full DN, not the short username:\r\n\r\nhttp://afp548.com/forums/topic/openldap-lion-password-changes-via-system-preferences/\r\n\r\nText from above link (in case it is taken down):\r\n\"So, I’ve got this OpenLDAP server with network home directories at home that all of my Mac machines authenticate to. Everybody can bounce around to whatever Mac is available. It works great.  \r\n\r\nAnyway, with Snow Leopard, I was able to change user passwords via System Preferences. However, that got broken when I upgraded to Lion (amongst other things). Both Snow Leopard and Lion send exop’s to the ldap server, but for whatever reason, the id is screwed up in Lion (or at least, it’s screwed up on the two machines at home I tested this with). Instead of sending the user’s DN, e.g. “uid=user,cn=users,ou=something,dc=somewhere,dc=com”, the ldap server is only sent the uid, e.g. “user”. The ldap server is expecting a DN here, so naturally, it fails with the error “Invalid DN”.\r\n\r\nBummer.\r\n\r\nSo, to work around that, I had to patch OpenLDAP (version 2.4.26 in this case). Now, when my server can’t resolve the id it’s given during a password change, it will look at the bind DN, and if the id string is contained within the bind DN string, it will just use the bind DN as the entry to change. I figured this would still allow me to manually specify password changes via an admin account while still giving users the ability to change their own passwords without having to point them at a webpage (lame).\r\n\r\nI should point out that all my accounts have the uid as part of the DN… I guess if you were doing some kind of crazy SASL mappings, this might not work for you…\r\n\r\nAnyway, here’s the patch in case anyone else is interested… If it works for you, great. If not, oh well.\r\n\r\n-- passwd.c\t2011-06-30 11:13:36.000000000 -0400\r\n+++ passwd.lion_compatability.c\t2012-02-13 22:48:54.213214617 -0500\r\n@@ -18,4 +18,5 @@\r\n\r\n #include <stdio.h>\r\n+#include <string.h>\r\n\r\n #include <ac/socket.h>\r\n@@ -59,4 +60,5 @@\r\n \tint freenewpw = 0;\r\n \tstruct berval dn = BER_BVNULL, ndn = BER_BVNULL;\r\n+\tber_int_t err;\r\n\r\n \tassert( ber_bvcmp( &slap_EXOP_MODIFY_PASSWD, &op->ore_reqoid ) == 0 );\r\n@@ -102,11 +104,8 @@\r\n\r\n \tif ( !BER_BVISEMPTY( &id ) ) {\r\n-\t\trs->sr_err = dnPrettyNormal( NULL, &id, &dn, &ndn, op->o_tmpmemctx );\r\n-\t\tid.bv_val[id.bv_len] = idNul;\r\n-\t\tif ( rs->sr_err != LDAP_SUCCESS ) {\r\n-\t\t\trs->sr_text = \"Invalid DN\";\r\n-\t\t\trc = rs->sr_err;\r\n-\t\t\tgoto error_return;\r\n-\t\t}\r\n+\t\terr = dnPrettyNormal( NULL, &id, &dn, &ndn, op->o_tmpmemctx );\r\n+\t}\r\n+\r\n+\tif ( !BER_BVISEMPTY( &id ) && (err == LDAP_SUCCESS) ) {\r\n \t\top->o_req_dn = dn;\r\n \t\top->o_req_ndn = ndn;\r\n@@ -116,4 +115,16 @@\r\n \t\tber_dupbv_x( &dn, &op->o_dn, op->o_tmpmemctx );\r\n \t\tber_dupbv_x( &ndn, &op->o_ndn, op->o_tmpmemctx );\r\n+\t\tif ( !BER_BVISEMPTY( &id ) ) {\r\n+\t\t\t/* See if the id matches the bind dn */\r\n+\t\t\tif ( strstr( dn.bv_val, id.bv_val ) == NULL )\r\n+\t\t\t{\r\n+\t\t\t\trs->sr_err = err; /* From dnPrettyNormal */\r\n+\t\t\t\trs->sr_text = \"Invalid DN\";\r\n+\t\t\t\trc = rs->sr_err;\r\n+\t\t\t\tgoto error_return;\r\n+\t\t\t}\r\n+\t\t\tStatslog( LDAP_DEBUG_STATS, \"%s Invalid id (%s) specified; using bind DN (%s)\\n\",\r\n+\t\t\t\t\top->o_log_prefix, id.bv_val, dn.bv_val, 0, 0 );\r\n+\t\t}\r\n \t\top->o_req_dn = dn;\r\n \t\top->o_req_ndn = ndn;\r\n@@ -123,4 +134,8 @@\r\n \t}\r\n\r\n+\tif ( !BER_BVISEMPTY( &id ) ) {\r\n+\t\tid.bv_val[id.bv_len] = idNul;\r\n+\t}\r\n+\r\n \tif( op->o_bd == NULL ) {\r\n \t\tif ( qpw->rs_old.bv_val != NULL ) {\r\n\""
    email: MichaelJSmalley@gmail.com
    modified: "2012-06-28T15:38:51.386992Z"
    number: "11768796"
    number_intvalue: 11768796
    originated: 28-Jun-2012 11:34 AM
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.7.4
    reproducible: Yes
    resolved: ""
    status: Open
    title: Cannot Change OpenLDAP Password in Lion System Preferences
