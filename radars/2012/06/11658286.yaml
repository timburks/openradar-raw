apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11658286"
    labels:
        datastore_id: "1747407"
data:
    classification: UI/Usability
    created: "2012-06-13T18:08:23.484654Z"
    description: "Summary:\r\n\r\nIn Xcode a project can be set to limit what iOS devices the resulting app bundle can be run on. Using UIRequiredDeviceCapabilities in the target's info.plist file a developer can specify, for example, that only devices with telephony (phones) can run an app.\r\n\r\nWhen building and testing in Xcode there are many failure states that could cause an app not to install to a device. Not matching the UIRequiredDeviceCapabilities on a device is one of these. Unfortunately the work flow for discovering a device doesn't match the device capabilities specified is cumbersome at best.  \r\n\r\nA user would assume Xcode would inform them that a device they're trying to install to doesn't meet the requirements specified. Xcode's behavior when there is a code signing error is perfectly cromulent. When the device capabilities are mismatched the user is only told that the application finished running on the device, but nothing ever runs or even installs. There is no error message in Xcode to identify that the app cannot be installed with the current device capabilities configuration.\r\n\r\nIn order to find out that the device is a mismatch the user has to look in Console.app for a line like the following:\r\n\r\n2012-06-13 10:45:59.169 AM Xcode: Couldn't install /Users/dan/Code/bug_report/DeviceCapabilitiesBug/build/Debug-iphoneos/DeviceCapabilitiesBug.app due to capability mismatch.\r\n{\r\n    CapabilitiesMatch = 0;\r\n    MismatchedCapabilities =     {\r\n        \"telephony\" = 0;\r\n    };\r\n}\r\n\r\nNot all users are savvy enough to know to look in Console.app for a message from Xcode that could easily be displayed in the UI.\r\n\r\nSteps to Reproduce:\r\n\r\n1. Open the attached sample project, DeviceCapabilitiesBug\r\n2. Plug in an iPhone\r\n3. Build and Run the app to the iPhone device plugged in\r\n4. See the app launch and greet you with a message\r\n5. Unplug the iPhone and plug in an iPod touch\r\n6. Build and Run the app to the iPod touch device plugged In\r\n7. See a message that DeviceCapabilitiesBug finished running on the iPod touch\r\n\r\nExpected Results:\r\n\r\nAn error message at step 7 above where the user is informed that the iPod touch does not match the telephony device capability and the app cannot be installed.\r\n\r\nActual Results:\r\n\r\nA false indication that the app finished running when it was never installed and never ran. The user has no indication via Xcode that the device plugged in does not match the specified device capabilities.\r\n\r\nRegression:\r\n\r\nNone\r\n\r\nNotes:\r\n\r\nNone"
    email: dan@danimal.org
    modified: "2012-11-26T23:58:12.49039Z"
    number: "11658286"
    number_intvalue: 11658286
    originated: Wed, 13 Jun 2012 18:08:10 GMT
    parent_number: "9749837"
    product: Developer Tools
    product_version: 4.3.2 (4E2002)
    reproducible: Always
    resolved: ""
    status: Duplicate/9749837
    title: Xcode doesn't provide feedback when UIDeviceCapabilities does not match a device
