apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11688188"
    labels:
        datastore_id: "1758406"
data:
    classification: UI/Usability
    created: "2012-06-18T14:06:01.887106Z"
    description: "Summary:\r\n\r\nIf presentViewController is used from a VC that has wantsFullScreenLayout == NO to present a modal view with wantsFullScreenLayout == YES then the frame set is incorrect.\r\n\r\n\r\nSteps to Reproduce:\r\n\r\nRun the supplied Demo Project.\r\n- tap the top button (uses presentModalViewController)\r\n- note that the blue view covers the entire display, even when hiding the status bar (via the toggle button)\r\n- return to the root VC via the dismiss button\r\n- tap the second button (uses presentViewController)\r\n- note that the blue view background now begins below the status bar. Hiding it makes the black UIWindow background show through\r\n\r\n\r\nExpected Result\r\n\r\nA presentViewController with custom animations should obey the wantsFullScreenLayout property of the presented ViewController.\r\n\r\n\r\nActual Results:\r\n\r\nThe presented ViewController's view is always offset to match the presenting viewController's wantsFullScreenLayout property. The frame set on the manually added subview gets overridden and shifted to the same origin as the presenting viewController's view's origin.\r\n\r\n\r\nRegression:\r\n\r\nAs demonstrated by the demo project the (now deprecated) presentModalViewController does the right thing. The behavior should be consistent between the deprecated and the method replacing it.\r\n\r\n\r\nNotes:\r\n\r\nThe demo project has two view controllers, the RootViewController with wantsFullScreenLayout == NO, the ModalViewController with wantsFullScreenLayout == YES. When presented with presentModalViewController then ModalViewController goes properly under the status bar. When presented with the new iOS 5 method presentViewController in combination with a custom animation then the ModalViewController's view is always forcefully put below the status bar.\r\n\r\nThere is a button to hide the status bar in ModalViewController. If it was presented with the deprecated method the blue background color shows because the view is properly layouted below it. With the new method the UIWindow's black color shows because the frame is set incorrectly ignoring the wantsFullScreenLayout property.\r\n\r\nThe use case for this behavior is to have a root view that is showing the status bar (e.g. a scroll view showing digital catalogs). A modal view (is to be presented from this that requires hiding of the status bar, e.g. for full screen viewing of a digital catalog.\r\n\r\nThe only workaround is to have also the presenting ViewController with wantsFullScreenLayout == YES and offset all subviews on the RootVC so that they don't get positioned below the status bar."
    email: oliver.drobnik@gmail.com
    modified: "2012-06-18T14:06:01.887286Z"
    number: "11688188"
    number_intvalue: 11688188
    originated: June 18, 2012
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: "5.0"
    reproducible: Always
    resolved: ""
    status: Open
    title: View frame inconsistency using presentViewController + wantsFullScreenLayout Y/N
