apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "12262327"
    labels:
        datastore_id: "1948403"
data:
    classification: Crash/Hang/Data Loss
    created: "2012-09-09T07:17:00.140421Z"
    description: "09-Sep-2012 12:15 AM Jonathon Mah:\r\nTo increase performance in our app that uses SceneKit, we have an SCNRenderer with an OpenGL context shared with the main SCNView's context. This renderer allows us to asynchronously (but not without blocking, Radar 12226081) do the first render of a material, which can generate mipmaps and other expensive things.\r\n\r\nAfter calling -[SCNRenderer render], without manually calling glFlush() the material can be corrupted when later used in the main SCNView. See attached screen recording. The source code for that app is available here: https://github.com/jmah/SceneKitPreloadTest\r\n\r\nThe corruption is more evident when using the Intel HD Graphics 4000 GPU. Incorrect drawing is also visible when using Nvidia GeForce GT 650M, but usually appears as black rather than random junk.\r\n\r\nI've marked this as Crash/Hang/Data Loss because in addition to the graphical corruption, there appeared to be multiple crashes and hangs in the Intel driver. A hang log and kernel panic log are also attached.\r\n\r\n\r\n09-Sep-2012 12:15 AM Jonathon Mah:\r\n'Material Corruption.mov' and 'Retronym MacBookPro10,1 2012-09-08.spx.zip' were successfully uploaded\r\n\r\n09-Sep-2012 12:16 AM Jonathon Mah:\r\n'Kernel_2012-09-08-212130_Retronym.panic' was successfully uploaded\r\n\r\n09-Sep-2012 12:16 AM Jonathon Mah:\r\n'Hang log.txt' was successfully uploaded"
    email: me@JonathonMah.com
    modified: "2012-09-09T07:17:00.14104Z"
    number: "12262327"
    number_intvalue: 12262327
    originated: 09-Sep-2012 12:15 AM
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.8.2 (12C31a)
    reproducible: Always (almost)
    resolved: ""
    status: Open
    title: SceneKit material corruption without glFlush()
