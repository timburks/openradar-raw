apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11024447"
    labels:
        datastore_id: "1593406"
data:
    classification: Other Bug
    created: "2012-03-10T02:22:37.864179Z"
    description: "The 'includesPendingChanges' flag on NSFetchRequest is documented to \"match against currently unsaved changes in the managed object context\".\r\n\r\nWhen this is set to NO in a nested managed object context, this instead runs against what's on disk, excluding changes that have been saved from the perspective of the child MOC. This is unexpected behavior.\r\n\r\nI can think of two subtly distinct uses for this flag: The first would be \"ignore changes that are pending (in _this current_ context)\". The second is \"run this query against indexes only, avoiding a linear scan of uncommitted objects\". Currently these two meanings are conflated, with the actual result being \"run the fetch directly against the persistent store (what's on disk)\".\r\n\r\nOne solution is to split into two flags. At least, the documentation should clarify the behavior."
    email: me@JonathonMah.com
    modified: "2012-03-10T02:22:37.864418Z"
    number: "11024447"
    number_intvalue: 11024447
    originated: 09-Mar-2012 06:21 PM
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.7.3 (11D50)
    reproducible: Always
    resolved: ""
    status: Open
    title: NSFetchRequest includesPendingChanges acts unexpectedly with nested MO contexts
