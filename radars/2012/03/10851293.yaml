apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10851293"
    labels:
        datastore_id: "1568420"
data:
    classification: Serious
    created: "2012-03-05T09:24:59.771073Z"
    description: "The CUPS ipp backend in OSX 10.7.3 does not ask for username and password to do a HTTP1.1 Basic authorization.\r\n\r\nEarlier we have reported this problem occuring which started with CUPS 1.5 in OSX 10.7\r\n\r\nThe short version is that the /usr/libexec/cups/backend/ipp needs some fixing.\r\n\r\nTo show you what we have tried and what we did to come to this conclusion we have a longer version below.\r\nPlease read it and perform the same tests yourself. All tests are described in detail with explanation.\r\n\r\nHere is a step by step guide how to replicate our troublesome situation with two computers both running OSX 10.7.3:\r\n\r\nSet up a server computer to share printers.\r\nSet up a printer on the server computer. Share this printer.\r\nAllow printing from the internet. This will put something like this in /etc/cups/cupd.conf:\r\n\r\n<Location />\r\n # Allow remote access...\r\n Order allow,deny\r\n Allow all\r\n</Location>\r\n\r\nAny computer should now be able to print to your shared printer.\r\n\r\nAdd the shared printer to your client computer using IPP printing.\r\n\r\nTest that you can print f.ex a test page on the printer. Once you have verified this step, continue.\r\n\r\nChange the cups configuration on your server computer to use HTTP1.1 Basic authorization.\r\nYou will have change the Location section in /etc/cups/cupsd.conf like this:\r\n\r\n<Location />\r\n # Allow remote access...\r\n Order allow,deny\r\n Allow from 127.0.0.1\r\n Satisfy Any\r\n AuthType Basic\r\n</Location>\r\n\r\nRestart cupsd on the server computer doing this:\r\n\r\n\tsudo launchctl unload /System/Library/LaunchDaemons/org.cups.cupsd.plist\r\n\tsudo launchctl load /System/Library/LaunchDaemons/org.cups.cupsd.plist\r\n\r\nNow the /usr/libexec/cups/backend/ipp program on the client computer should pop up a dialog box asking for a username and password. This does not happen. Even if we alter the printers.conf file by running this command:\r\n\r\n\tlpadmin -p myprinter -o auth-info-required=username,password\r\n\r\nIf your printer name was \"myprinter\".\r\n\r\nThe /usr/libexec/cups/backend/ipp needs to be fixed so that it correctly asks for username and password and then correctly authorize itself against the printing server.\r\n\r\nWe have run simle tests authenticating against the printing server using both openssl and curl.\r\n\r\nSimply using curl to see a message from the server requiring an upgrade:\r\n\r\n\tcurl -k http://myserver.my.net:631/printers/myprinter\r\n\r\nGiven that your server name is my.server.net and the printer name is myprinter.\r\nI will use this in the following examples.\r\n\r\nNow to do HTTP/1.1 Basic authentication using cups we can do this:\r\n\r\n\tcurl -k -u greg:beerlover https://myserver.my.net:631/printers/myprinter\r\n\r\nOf course, you can also bring up https://myserver.my.net:631/printers/myprinter in your favourite browser.\r\nYour browser will then ask you for a username and a password. Like the ipp backend should have done.\r\n\r\nLooking at these things with curl does only show of the communication between your computer and the printer server.\r\nTo check things more thorough, we used the openssl program.\r\n\r\nTo do HTTP/1.1 Basic authentication one simply supplies a base64 coded version of username:password in the Authorization: header. So we do this:\r\n\r\n\techo -n greg:beerlover | base64\r\n\r\nwhich gives us this:\r\n\r\n\tZ3JlZzpiZWVybG92ZXIK\r\n\r\nassuming that the username you wanted to test with was \"greg\" and his password was \"beerlover\".\r\nPlease do not forget to give the \"-n\" option to the echo command. If you forget, your authentication string will be wrong.\r\n\r\nFirst lets try without authenticating:\r\n\r\n\topenssl s_client -connect myserver.my.net:631\r\n\r\nThen type the following line followed by hitting the enter key twice to make a blank line.\r\n\r\n\tGET /printers/myprinter HTTP/1.1\r\n\r\nYou should now now receive a HTTP/0.9 401 Unauthorized with all the info you need to authenticate.\r\nThe headers will tell you to use TLS/1.0 and HTTP/1.1 Basic authentication.\r\n\r\nNow we will connect again and use HTTP/1.1 Basic authentication:\r\n\r\n\topenssl s_client -connect myserver.my.net:631\r\n\r\nThen type the following line followed by hitting the enter key twice to make a blank line.\r\n\r\n\tGET /printers/myprinter\r\n\tAuthorization: Basic Z3JlZzpiZWVybG92ZXIK\r\n\r\nYou should now be authorized to access the printer page.\r\n\r\nObviously, if you can manually do HTTP/1.1 Basic authentication to the CUPS printer server using a browser or the curl or openssl programs, the /usr/libexec/cups/backend/ipp program can too. If it asks you for your username and password.\r\n\r\nI'll go on and supply some output from the computers logs and output when running the ipp backend manually.\r\n\r\nRunning the ipp backend gives this:\r\n\r\nbash-3.2# /usr/libexec/cups/backend/ipp.orig 43 eskil testprint 1 AP_ColorMatchingMode=AP_ApplicationColorMatching AP_D_InputSlot= collate com.apple.print.DocumentTicket.PMSpoolFormat=application/pdf com.apple.print.JobInfo.PMJobName=testprint com.apple.print.PrinterInfo.PMColorDeviceID..n.=1656 com.apple.print.PrintSettings.PMColorMatchingMode..n.=0 com.apple.print.PrintSettings.PMColorSyncProfileID..n.=1294 com.apple.print.PrintSettings.PMCopies..n.=1 com.apple.print.PrintSettings.PMCopyCollate..b. com.apple.print.PrintSettings.PMFirstPage..n.=1 com.apple.print.PrintSettings.PMLastPage..n.=2147483647 com.apple.print.PrintSettings.PMPageRange..a.0..n.=1 com.apple.print.PrintSettings.PMPageRange..a.1..n.=2147483647 fit-to-page media=A4 pserrorhandler-requested=standard job-uuid=urn:uuid:611f66ec-5959-3112-6638-61182b8726f4 job-originating-host-name=localhost time-at-creation=1328881736 time-at-processing=1328881994 PageSize=A4\r\nDEBUG: 21 files to send in job...\r\nDEBUG: update_reasons(attr=0(), s=\"+connecting-to-device\")\r\nDEBUG2: op='+', new_reasons=1, state_reasons=1\r\nSTATE: +connecting-to-device\r\nDEBUG: Looking up \"od-prod01.uio.no\"...\r\nDEBUG2: hrDeviceDesc=\"Unknown\"\r\nDEBUG: prtGeneralCurrentLocalization type is 0, expected 2!\r\nDEBUG: Connecting to od-prod01.uio.no:631\r\nINFO: Kobler til skriver.\r\nDEBUG: update_reasons(attr=0(), s=\"-cups-certificate-error\")\r\nDEBUG2: op='-', new_reasons=1, state_reasons=2\r\nDEBUG: update_reasons(attr=0(), s=\"-connecting-to-device\")\r\nDEBUG2: op='-', new_reasons=1, state_reasons=2\r\nSTATE: -connecting-to-device\r\nINFO: Tilkoblet skriver.\r\nDEBUG: Connected to 129.240.0.104:631...\r\nDEBUG: Getting supported attributes...\r\nDEBUG: Get-Printer-Attributes: cups-authorization-canceled (Uautorisert)\r\nDEBUG: Get-Printer-Attributes returned cups-authorization-canceled.\r\nERROR: Kan ikke hente skriverstatus.\r\nDEBUG: Getting supported attributes...\r\nDEBUG: Get-Printer-Attributes: cups-authorization-canceled (Uautorisert)\r\nDEBUG: Get-Printer-Attributes returned cups-authorization-canceled.\r\nERROR: Kan ikke hente skriverstatus.\r\nDEBUG: Getting supported attributes...\r\n\r\nand so on and so on ....\r\n\r\nHere are some interesting lines from the server computers /var/log/cups/error_log\r\n\r\nD [10/Feb/2012:15:51:24 +0100] Connection from 129.240.12.28 now encrypted.\r\nE [10/Feb/2012:13:37:51 +0100] Bad request line \"%17%03%01%02p%CBv%D0%F6+%C5I%BFk%07%B9|{;q%E9O\"q%C9F%86%89(\" from 193.157.196.146!\r\nD [10/Feb/2012:15:51:24 +0100] cupsdAuthorize: No authentication data provided."
    email: no.hansen.thomas@gmail.com
    modified: "2012-03-05T11:37:00.756029Z"
    number: "10851293"
    number_intvalue: 10851293
    originated: "2012-02-13"
    parent_number: '&{NULL_VALUE}'
    product: CUPS
    product_version: "1.5"
    reproducible: YES
    resolved: ""
    status: Active
    title: /usr/libexec/cups/backend/ipp does not authorize properly.
