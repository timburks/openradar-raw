apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10737334"
    labels:
        datastore_id: "1494401"
data:
    classification: ""
    created: "2012-01-23T06:11:18.796343Z"
    description: "23-Jan-2012 01:09 AM Heath Borders:\r\nSummary:\r\nWhen using a Nullify Delete Rule on a relationship, -[NSManagedObjectContext mergeChangesFromContextDidSaveNotification:] doesn't propagate both sides of the relationship when the parent is deleted and the child is inserted into a new parent.\r\n\r\nSteps to Reproduce:\r\n\r\nInsert parent and child managed objects into a sqlite persistent store from NSManagedObjectContext A.\r\nOn a background thread with NSManagedObjectContext B, delete the parent and insert a new parent, add the child to the new parent, and save the new parent.\r\nOn the main thread, call -[NSManagedObjectContext mergeChangesFromContextDidSaveNotification:].\r\n\r\nExpected Results:\r\nThe new parent should have the child as a child, the child should have the new parent as its parent.\r\n\r\nActual Results:\r\nThe new parent has the child as a child, but the child has a nil parent.\r\n\r\nRegression:\r\n\r\nNotes:\r\nIf I specify \"No Action\" for the delete rule, everything works fine.\r\nPrinting the NSManagedObjectContext B's managed objects shows correct relationships.\r\n\r\n23-Jan-2012 01:09 AM Heath Borders:\r\n'CoreDataNullifyDeleteActionBug.zip' was successfully uploaded\r\n\r\n26-Jun-2012 09:59 AM Heath Borders:\r\nFixed in Xcode Version 4.5 (4G108j)"
    email: heath.borders@gmail.com
    modified: "2012-07-05T18:25:17.320824Z"
    number: "10737334"
    number_intvalue: 10737334
    originated: 23-Jan-2012 12:09 AM
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Closed
    title: CoreData Nullify Delete Rule inconsistently nils from background thread
