apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10241227"
    labels:
        datastore_id: "1488401"
data:
    classification: ""
    created: "2012-01-06T08:07:23.28303Z"
    description: "05-Oct-2011 03:11 PM Ben Martz:\r\nSummary:\r\n\r\nAfter migrating my iOS 4 project to iOS 5 and ARC, I struggled to figure out how to properly assign an array of color values to the colors property of a CAGradientLayer. I also discovered that my first attempt to work around the issue resulted in code that worked correctly in the simulator but not on a real device.\r\n\r\nI found the following thread on the iOS 5 Beta forum which got me pointed in the correct direction to resolve my issue: https://devforums.apple.com/message/550670\r\n\r\nSteps to Reproduce:\r\n\r\nCAGradientLayer *gradientLayer = [[CAGradientLayer alloc] init];\t\t\r\n\r\nCGColorRef topColor = [[UIColor colorWithRed:0.933333333333333 green:0.933333333333333 blue:0.941176470588235 alpha:1.0] CGColor];\r\nCGColorRef bottomColor = [[UIColor colorWithRed:0.827450980392157 green:0.827450980392157 blue:0.850980392156863 alpha:1.0] CGColor];\r\n\r\n// #1 COMPILER ERROR: Cast of C pointer type 'CGColorRef' to Objective-C pointer type 'id' requires a bridged cast\r\ngradientLayer.colors = [NSArray arrayWithObjects:(id)topColor, (id)bottomColor, nil];\r\n\r\n// #2 Works in correctly on iPad 5.0 simulator (Xcode 4.2 GM), however throws EXC_BAD_ACCESS on physical 1st gen iPad device running iOS 5.0 GM\r\ngradientLayer.colors = [NSArray arrayWithObjects:(__bridge id)topColor, (__bridge id)bottomColor, nil];\r\n\r\n// #3 The explicit inline cast of UIColor property CGColor to id appears to be the ONLY way to make this bridged assignment\r\n// compile and generate code that works correctly on both the simulator and a real device\r\ngradientLayer.colors = [NSArray arrayWithObjects:\r\n     (id)[[UIColor colorWithRed:0.933333333333333 green:0.933333333333333 blue:0.941176470588235 alpha:1.0] CGColor],\r\n     (id)[[UIColor colorWithRed:0.827450980392157 green:0.827450980392157 blue:0.850980392156863 alpha:1.0] CGColor],\r\n     nil];\r\n\r\nExpected Results:\r\n\r\nExamples #1 and #3 should be considered identical by the compiler. The current requirement that values be provided inline breaks generally accepted best practices of code and constant value reuse.\r\n\r\nThe equivalence of example #2 is unknown since I can not claim to be 100% clear on the different bridging modes. Nonetheless, IMO, example #2 should demonstrate identical results on both the simulator and a physical device.\r\n\r\nActual Results:\r\n\r\nProvided inline with steps to reproduce.\r\n\r\nRegression:\r\n\r\nn/a\r\n\r\nNotes:\r\n\r\nn/a\r\n\r\n05-Oct-2011 03:22 PM Ben Martz:\r\nContinuing my work, I have found that even a simple color assignment* as follows works correctly on the simulator but DOES NOT work on a physical device:\r\n\r\n* declare CGColorRef variable; assign CGColorRef to variable; assign variable to [CAGradientLayer backgroundColor] property\r\n\r\n- (void)drawRect:(CGRect)rect\r\n{\r\n\tif ([self isHighlighted] != wasHighlighted)\r\n\t{\r\n\t\twasHighlighted = [self isHighlighted];\r\n\t\t\r\n\t\tCGColorRef shadowColor, highlightColor, topColor, bottomColor;\r\n\r\n\t\tif ([self isHighlighted])\r\n\t\t{\r\n\t\t\tshadowColor = [[UIColor colorWithRed:0.356862745098039 green:0.36078431372549 blue:0.380392156862745 alpha:1.0] CGColor];\r\n\t\t\thighlightColor = [[UIColor colorWithRed:0.850980392156863 green:0.854901960784314 blue:0.870588235294118 alpha:1.0] CGColor];\r\n\t\t\ttopColor = [[UIColor colorWithRed:0.701960784313725 green:0.709803921568627 blue:0.737254901960784 alpha:1.0] CGColor];\r\n\t\t\tbottomColor = [[UIColor colorWithRed:0.513725490196078 green:0.52156862745098 blue:0.549019607843137 alpha:1.0] CGColor];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tshadowColor = [[UIColor colorWithRed:0.513725490196078 green:0.513725490196078 blue:0.525490196078431 alpha:1.0] CGColor];\r\n\t\t\thighlightColor = [[UIColor whiteColor] CGColor];\r\n\t\t\ttopColor = [[UIColor colorWithRed:0.933333333333333 green:0.933333333333333 blue:0.941176470588235 alpha:1.0] CGColor];\r\n\t\t\tbottomColor = [[UIColor colorWithRed:0.827450980392157 green:0.827450980392157 blue:0.850980392156863 alpha:1.0] CGColor];\r\n\t\t}\r\n\t\t\r\n\t\t// EXC_BAD_ACCESS on physical device\r\n\t\t[shadowLayer setBackgroundColor:shadowColor];\r\n\r\n\t\t// EXC_BAD_ACCESS on physical device\r\n\t\t[highlightLayer setBackgroundColor:highlightColor];\r\n\r\n\t\t// force instant response animation\r\n\t\tCABasicAnimation* selectionAnimation = [CABasicAnimation animationWithKeyPath:@\"colors\"];\r\n\t\tselectionAnimation.delegate = self;\r\n\t\tselectionAnimation.duration = 0;\r\n\t\tselectionAnimation.fillMode = kCAFillModeForwards;\r\n\t\tselectionAnimation.removedOnCompletion = false;\r\n\t\t\r\n\t\tselectionAnimation.fromValue = (id)[NSArray arrayWithObjects:(__bridge id)topColor, (__bridge id)bottomColor, nil];\r\n\t\tselectionAnimation.toValue = (id)[NSArray arrayWithObjects:(__bridge id)topColor, (__bridge id)bottomColor, nil];\r\n\t\t\r\n\t\t[gradientLayer addAnimation:selectionAnimation forKey:@\"selectionAnimation\"];\r\n\t}\r\n\t\r\n\t[super drawRect:rect];\t\r\n}"
    email: benmartz@gmail.com
    modified: "2012-01-06T08:08:50.317227Z"
    number: "10241227"
    number_intvalue: 10241227
    originated: 11/5/2011
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "4.1"
    reproducible: Yes
    resolved: ""
    status: Open
    title: Compiler/runtime ARC issue assigning [(UIColor *) CGColor] to CAGridentLayer
