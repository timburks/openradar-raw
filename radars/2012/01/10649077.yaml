apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10649077"
    labels:
        datastore_id: "1487401"
data:
    classification: Serious Bug
    created: "2012-01-05T18:28:15.167897Z"
    description: "Summary:\r\nData formats that include symbolic links to large original files to avoid the extra space of duplication do not work with sandboxing/powerbox.\r\n\r\nSteps to Reproduce:\r\n1) Create an application with a package file format that utilizes symbolic links to reference resources outside the package folder itself.\r\n2) Sandbox the application, granting it the com.apple.security.files.user-selected.read-write entitlement\r\n3) The user adds a reference to an external resource (say a video file) to the document\r\n4) This reference is recorded as a symbolic link within the package file\r\n5) Close and reopen the application\r\n6) Reopen the document\r\n7) Try to access the file pointed to by the symbolic link\r\n\r\nExpected Results:\r\nThe file pointed to can be accessed.\r\n\r\nActual Results:\r\nThe file pointed to by the symbolic link cannot be opened. A denial shows up in the system log:\r\nJan  5 11:31:22 fruitbook sandboxd[22603] ([22616]): Pear Note(22616) deny file-read-data /Users/chad/Desktop/deleteme.mov\r\n\r\nRegression:\r\nSymbolic links were useful tools before sandboxing/powerbox.\r\n\r\nNotes:\r\nThere are many applications that allow users to import resource files by reference. These include media managers such as iTunes and Lightroom, website builders like Sandvox, and other apps that utilize large media files such as my app, Pear Note. Users often to prefer to import these files by reference to avoid having duplicate files using up hard drive space. Some apps keep track of these references by storing paths in their own data structures, while others (like Pear Note) utilize symbolic links to point to them.\r\n\r\nIn this case, the user has indicated his intent to grant access to this document when importing it (which powerbox works for), but that intention is lost when the application is closed. Upon relaunch, the user re-indicates his intention to grant access to the document through powerbox, but has no way to infer access to referenced resources.\r\n\r\nSo, it appears the only way to get access to referenced resources is com.apple.security.temporary-exception.files.absolute-path.read-only or com.apple.security.temporary-exception.files.absolute-path.read-write .\r\n\r\nIf you know of a different way to maintain a reference to a file outside the document package file folder that works with sandboxing/powerbox, I'd love to hear it. I'm certainly open to using something other than symbolic links (though previously created documents would all be broken)."
    email: chad515@gmail.com
    modified: "2012-02-10T22:32:53.58964Z"
    number: "10649077"
    number_intvalue: 10649077
    originated: 1/5/2012
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.7.2
    reproducible: Always
    resolved: No
    status: Duplicate
    title: Symbolic links and sandboxing/powerbox
