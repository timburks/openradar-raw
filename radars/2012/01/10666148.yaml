apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10666148"
    labels:
        datastore_id: "1483410"
data:
    classification: Serious Bug
    created: "2012-01-17T19:08:46.020122Z"
    description: "09-Jan-2012 05:38 PM Tom Harrington:\r\n'ValidationFail.zip' was successfully uploaded\r\n\r\n09-Jan-2012 05:38 PM Tom Harrington:\r\nSummary:\r\n\r\nCore Data ignores validation constraints that set a minimum value for a string attribute's length.\r\n\r\nSteps to Reproduce:\r\n\r\n1. Create a new iOS project that includes Core Data.\r\n2. In the data model editor, create an entity with a string attribute.\r\n3. For the attribute in step 2, add validation constraints for the string's length. Add both minimum and maximum length constraints.\r\n4. In code, create an instance of this entity and an NSString which is too short to pass the minimum length constraint.\r\n5. Call -validateValue:forKey:error: on the instance using the string attribute and the too-short NSString. Validation passes.\r\n6. Set the NSString as the value for the string attribute and call -validateForInsert: on the instance. Again, validation passes.\r\n\r\nExpected Results:\r\n\r\nSince the attribute has a constraint specifying minimum string length, a string that is too short to pass this test would cause a validation error.\r\n\r\nActual Results:\r\n\r\nValidation succeeds. In the test project attached, the Item entity has a string attribute called \"name\" that has validation constraints giving a minimum length of 3 and a maximum length of 10. I wondered if Xcode's GUI was showing incorrect state so I looked in the data model file and found:\r\n\r\n<attribute name=\"name\" optional=\"YES\" attributeType=\"String\" minValueString=\"3\" maxValueString=\"10\" syncable=\"YES\"/>\r\n\r\nSo that looks OK. If I inspect the constraints in the Xcode debugger however, I get this:\r\n\r\n(gdb) [[[[item entity] attributesByName] objectForKey:@\"name\"] validationPredicates]\r\n<__NSArrayM 0x897bcd0>(\r\nlength <= 10\r\n)\r\n\r\nThe minimum constraint is not present. A second attribute (\"style\") has only a minimum length constraint, which is also present in the data model but not at run time.\r\n\r\nThe code used to check on this is as follows, and is included in the attached project.\r\n\r\n\tNSManagedObject *item = [NSEntityDescription insertNewObjectForEntityForName:@\"Item\" inManagedObjectContext:[self managedObjectContext]];\r\n\tNSString *tooShortString = @\"a\";\r\n\tNSError *validationError;\r\n\t\r\n\tNSLog(@\"Validation predicates for name: %@\", [[[[item entity] attributesByName] objectForKey:@\"name\"] validationPredicates]);\r\n\tNSLog(@\"Validation predicates for style: %@\", [[[[item entity] attributesByName] objectForKey:@\"style\"] validationPredicates]);\r\n\t\r\n\tvalidationError = nil;\r\n\t[item validateValue:&tooShortString forKey:@\"name\" error:&validationError];\r\n\t\r\n\tvalidationError = nil;\r\n\t[item validateValue:&tooShortString forKey:@\"style\" error:&validationError];\r\n\t\r\n\tvalidationError = nil;\r\n\t[item validateForInsert:&validationError];\r\n\r\nRegression:\r\n\r\nUnknown.\r\n\r\nNotes:\r\n\r\nMac OS X 10.7.2, Xcode 4.2.1, iOS 5.0.1, results are the same in the simulator and on an iPhone 4s.\r\n\r\n[Openradar: Demo code is at http://dl.dropbox.com/u/14191/openradar/10666148/ValidationFail.zip]\r\n\r\n14-Feb-2012 12:07 PM Tom Harrington:\r\nFWIW the same problem shows up for decimal fields with min/max values. It's possible to configure both in the model editor but only the max constraint will exist at run time."
    email: atomicbird@gmail.com
    modified: "2012-02-14T19:07:52.12663Z"
    number: "10666148"
    number_intvalue: 10666148
    originated: 09-Jan-2012 05:38 PM
    parent_number: "10014536"
    product: iOS
    product_version: 5.0.1
    reproducible: Always
    resolved: ""
    status: Duplicate/10014536
    title: Core Data ignoring validation constraint
