apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11975441"
    labels:
        datastore_id: "1851403"
data:
    classification: Crash/Hang/Data Loss
    created: "2012-07-27T18:50:26.830124Z"
    description: "Summary:\r\n\r\nSome users of our application have reported crashing in objc_assign_ivar with EXC_BAD_ACCESS / KERN_PROTECTION_FAILURE (SIGBUS). The crash occurs when loading a nib from -[NSNib instantiateNibWithOwner:topLevelObjects:]. The crash occurs when attempting to execute code on a page not marked as executable; it is in the __IMPORT segment of /usr/lib/libobjc.A.dylib, erroneously marked as rw-/rw- (current and maximum permissions are read-write, no execute). Our 32-bit application has MH_NO_HEAP_EXECUTION set so this attempt to execute is fatal. Running the application with the DYLD_SHARED_REGION environment variable set to \"avoid\" allows the application to run normally with no crash. Rebuilding the dyld shared cache by running \"sudo update_dyld_shared_cache -force\" and then rebooting fixes the system.\r\n\r\nBased on this, it appears that there’s something in the dyld shared cache that causes the __IMPORT segment of /usr/lib/libobjc.A.dylib to have the wrong protection bits set, which proves fatal in a 32-bit application where MH_NO_HEAP_EXECUTION is set. (64-bit applications always have hardware enforcement against executing data pages.)\r\n\r\nSteps to Reproduce:\r\n\r\nLaunch Google Chrome.app on an affected system. We have reports of this bug occurring with Mac OS X 10.8.0 12A269 and Google Chrome 20.0.1132.57 (our currently-released stable version). Download Google Chrome from https://www.google.com/intl/en/chrome/browser/ .\r\n\r\nExpected Results:\r\n\r\nChrome should launch.\r\n\r\nActual Results:\r\n\r\nOn affected systems, Chrome crashes at launch.\r\n\r\nRegression:\r\n\r\nWe’ve had no reports of this bug prior to 10.8.0.\r\n\r\nNotes:\r\n\r\nAll of the customers that report this issue have upgraded their Macs from a previous OS version, but we have not noticed any pattern. We have not reproduced this issue in-house.\r\n\r\nOur bug report is http://crbug.com/136801. There, you will find a series of crash reports and various troubleshooting information we have collected. A sample crash:\r\n\r\nCrashed Thread:  0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:  EXC_BAD_ACCESS (SIGBUS)\r\nException Codes: KERN_PROTECTION_FAILURE at 0x00000000ac801000\r\n\r\nVM Regions Near 0xac801000:\r\n    __OBJC                 00000000ac800000-00000000ac801000 [    4K] rw-/rwx SM=PRV  /usr/lib/libobjc.A.dylib\r\n--> Submap                 00000000ac801000-00000000ac802000          r-x/rwx process-only submap\r\n    __IMPORT               00000000ac801000-00000000ac802000 [    4K] rw-/rw- SM=COW  /usr/lib/libobjc.A.dylib\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   ???                           \t0xac801000 objc_assign_ivar + 0\r\n1   libobjc.A.dylib               \t0x96261d47 object_setIvar + 353\r\n2   libobjc.A.dylib               \t0x96261bda object_setInstanceVariable + 80\r\n3   com.apple.AppKit              \t0x93cd6461 -[NSNibOutletConnector establishConnection] + 486\r\n4   com.apple.AppKit              \t0x93ca815f -[NSIBObjectData nibInstantiateWithOwner:topLevelObjects:] + 1002\r\n5   com.apple.AppKit              \t0x93ebf7d0 -[NSNib _instantiateNibWithExternalNameTable:] + 634\r\n6   com.apple.AppKit              \t0x93ebf4a2 -[NSNib instantiateNibWithOwner:topLevelObjects:] + 166\r\n7   com.google.Chrome.framework   \t0x00340118 ChromeMain + 3217304\r\n8   com.google.Chrome.framework   \t0x0239e16b ChromeMain + 37156843\r\n9   com.google.Chrome.framework   \t0x0239edc2 ChromeMain + 37160002\r\n10  com.google.Chrome.framework   \t0x0239da1d ChromeMain + 37154973\r\n11  com.google.Chrome.framework   \t0x008fe67b ChromeMain + 9239803\r\n12  com.google.Chrome.framework   \t0x008fd840 ChromeMain + 9236160\r\n13  com.google.Chrome.framework   \t0x0002e9a9 ChromeMain + 41\r\n14  com.google.Chrome             \t0x00025f58 main + 24\r\n15  com.google.Chrome             \t0x00025f16 0x25000 + 3862\r\n\r\nWe have noticed that other applications appear to be affected by this bug. For example, https://www.google.com/search?q=objc_assign_ivar+\"mountain+lion\" shows at https://discussions.apple.com/message/19047618#19047618 that this has come up for iPhoto, and at http://discussion.evernote.com/topic/27980-bug-evernote-crashes-on-launch-after-mountain-lion-upgrade/ that this has come up for Evernote.\r\n\r\nA sample crash report provided by a customer experiencing this problem is attached [http://chromium.googlecode.com/issues/attachment?aid=1368010009000&name=chrome_crash.txt&token=K6xs6-Ay2vsYdYfvjIQrEIRANo0%3A1343414997980].\r\n\r\nThis bug was initially reported to us at https://productforums.google.com/d/topic/chrome/U2vPuZEX2so and http://crbug.com/136801."
    email: mark@chromium.org
    modified: "2013-09-16T20:37:54.278612Z"
    number: "11975441"
    number_intvalue: 11975441
    originated: "2012-07-27"
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.8.0 12A269
    reproducible: Sometimes
    resolved: "2012-08-23"
    status: Closed
    title: Crash in objc_assign_ivar due to page marked no-execute; dyld cache problem
