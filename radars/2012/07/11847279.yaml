apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11847279"
    labels:
        datastore_id: "1808402"
data:
    classification: Enhancement
    created: "2012-07-11T06:37:16.631102Z"
    description: "Summary:\r\nThe monitoredRegions of the CLLocationManager instances is not KVO compliant.\r\n\r\nSteps to Reproduce:\r\n1- Obtain a CLLocationManager instance\r\n2- Add an observer for the key path @\"monitoredRegions\". If you specify the NSKeyValueObservingOptionInitial is specified as an option, we get a call to the KVO method in the observer.\r\n3- start monitoring a new region on the location manager, or stop monitoring one of the regions.\r\n\r\nExpected Results:\r\nMore calls to the KVO method observeValueForKeyPath:ofObject:change:context: as regions are added and removed from the set.\r\n\r\nActual Results:\r\nNo calls to the KVO method.\r\n\r\nRegression: [redacted]\r\n\r\nNotes:\r\nWhen adding a new region to monitor to a location manager, it may decide that there's too many regions and not honor the request. In principle, such changes are communicated to the delegate, but the monitored regions are shared amongst any location manager instances, so the delegate methods are not necessarily called for all region changes.\r\nThus, we need some way to detect when regions are added and removed. If the monitoredRegions property was KVO compliant, we'd be able to react to these changes and, for example, update a map view with the actual regions being monitored - and not with what the application thinks it is being monitored."
    email: victor.jalencas@gmail.com
    modified: "2012-07-11T06:37:16.631687Z"
    number: "11847279"
    number_intvalue: 11847279
    originated: "2012-07-11"
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: "5.1"
    reproducible: Always
    resolved: ""
    status: Open
    title: CLLocationManager.monitoredRegions should be KVO compliant
