apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11905408"
    labels:
        datastore_id: "1823405"
data:
    classification: Serious Bug
    created: "2012-07-18T20:59:45.300349Z"
    description: "Summary:\r\n\r\nNSEvent's -mouseLocation method returns invalid coordinates for Retina backing store\r\n\r\n\r\nSteps to Reproduce:\r\n\r\n1) Obtain the current mouse location using [NSEvent mouseLocation]\r\n2) Align the mouse location to a screen's backing store using NSScreen's -backingAlignedRect:options:\r\n3) Convert the aligned mouse location to backing store coordinates with NSScreen's -convertRectToBacking:\r\n\r\nSee the attached CoordinateTester app as a sample.\r\n\r\n\r\nExpected Results:\r\n\r\nThe backing store coordinates should be valid.\r\n\r\n\r\nActual Results:\r\n\r\nThe backing store coordinates are invalid in the Y axis. On a 15\" Retina the range of values should be 0 to 1799 (1800 physical pixels), instead a range of 0 to 1800 pixels is reported (1801 pixels). Similarly, on non-Retina displays such as the 13\" MacBook Air, a range of values 0 to 900 is reported (901 pixels).\r\n\r\n\r\nRegression:\r\n\r\nIn prior releases of Mac OS X, the mouse location's Y axis was based at one, so a correct coordinate could be obtained by applying an offset. Values less than one are now returned (see Radar # 11905218)\r\n\r\n\r\nNotes:\r\n\r\nRunning the attached CoordinateTester app on several different systems shows these incorrect results are consistent:\r\n\r\n\t\t\t\t\t\t\t\t\tRaw\t\t\t\tRaw\t\t\t\t\t\tAligned\t\tAligned\t\t\tBacking\r\n\t\t\t\t\t\t\tOS\t\tLower-left\t\tUpper-right\t\t\t\tLower-left\tUpper-right\t\tUpper-right\r\n\t\t\t\t\t\t\t----\t----------\t\t-----------\t\t\t\t----------\t-----------\t\t-----------\r\nMacBook Pro (15\" Retina)\t10.8\t0, 0.00390625\t1439.99609375, 900\t\t0, 0\t\t1439.5, 900\t\t2879, 1800\r\nMacBook Air (13\")\t\t\t10.8\t0, 0.00390625\t1439.99609375, 900\t\t0, 0\t\t1439, 900\t\t1439, 900\r\nMacBook Air (13\")\t\t\t10.7\t0, 0.00390625\t1439.99609375, 900\t\t0, 0\t\t1439, 900\t\t1439, 900\r\nMacPro (2 x 1600 x 2560)\t10.7\t0, 0.00390625\t1439.99609375, 900\t\t0, 0\t\t3199, 2560\t\t3199, 2560\r\n\r\nNote: Raw lower-left Y coordinate is off by (1 / 256). The raw upper-right X coordinate is off by ((height - (1 / 256)) - 1).\r\n\r\n\r\nAdditionally, one would expect mouse coordinate deltas to correspond with the current backing store scaling factor. For example:\r\n\r\n\t\t\t\t\t\t\t\tScreen\t\t\t\t\t\t\t\tBacking\r\n\t\t\t\tScreen Size\t\tscaling factor\t\tBacking Size\tscaling factor\r\n\t\t\t\t-----------\t\t--------------\t\t------------\t--------------\r\nLarger Text:\t1024 x 640\t\t0.3556\t\t\t\t2048 x 1280\t\t0.7111\r\n\t\t\t\t1280 x 800\t\t0.4444\t\t\t\t2560 x 1600\t\t0.8889\r\nBest:\t\t\t1440 x 900\t\t0.5\t\t\t\t\t2880 x 1800\t\t1.0\r\n\t\t\t\t1680 x 1050\t\t0.5833\t\t\t\t3360 x 2100\t\t1.1667\r\nMore Space:\t\t1920 x 1200\t\t0.6667\t\t\t\t3840 x 2400\t\t1.3333\r\n\r\nNative:\t\t\t2880 x 1800\t\t\t\t\t\t\t2880 x 1800\t\t\r\n\r\nThat is, as the user moves the mouse one pixel on the physical screen of 2880 x 1800, mouse location values should be reported in 0.5 increments in the scaled 1440 x 900 view coordinate system. Similarly, if a user has 1800 physical pixels scaled to 1200 view points, there should be 1800 unique positions reported that are 0.6667 units apart.\r\n\r\nNot only is the mouse location distribution nonuniform, there's also quite a bit of variance in the values that are reported. For example, the following values were returned when the backing store Y axis was 1.0:\r\n\r\nRaw mouse\tDelta from origin\r\nY axis\t\tat 0.00390625\r\n---------\t-----------------\r\n0.515625\t0.51171875\r\n0.6015625\t0.59765625\r\n0.6953125\t0.69140625\r\n0.9609375\t0.95703125\r\n\r\nFinally, it's *really* hard to move the mouse to point where the backing Y axis is 1.0. Even when there are more physical pixels than view points (such as the 1024 x 640 and 1280 x 800 settings.) Try and get the CoordinateTester app to trigger the NSLog() and you'll see what I mean.\r\n\r\n\r\nSo, am I just being pedantic here?\r\n\r\nI don't think so: the output resolution of Retina display (and the underlying changes to Mac OS X) are an impressive achievement. Applications that wish to use that resolution to the fullest will also need an accurate input resolution. Mouse, trackpad and drawing tablet inputs should be able to address any pixel that's moved from the backing store onto the display.\r\n\r\nCurrently, that's not possible.\r\n\r\nA good example is the Pixie developer tool that's used to sample screen colors. It's impossible to sample adjacent pixels, no matter what the setting is for display scaling. Sampling on-screen pixels is an essential part of many designers and developers workflows when building and testing applications.\r\n\r\nI can also envision problems with applications that want to do precision drawing into the backing store: it can't be done without a precise point to position the drawing."
    email: craig.hockenberry@gmail.com
    modified: "2012-07-18T20:59:45.300555Z"
    number: "11905408"
    number_intvalue: 11905408
    originated: 7/18/2012
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.7 and later
    reproducible: Always
    resolved: ""
    status: Open
    title: 'BUG: NSEvent -mouseLocation returns invalid coordinate for Retina backing store'
