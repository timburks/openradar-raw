apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "11799078"
    labels:
        datastore_id: "1791404"
data:
    classification: ""
    created: "2012-07-03T18:06:38.813202Z"
    description: "Title:\r\nDocumentation for UINib doesnâ€™t include warning about availability checks\r\n\r\nSummary:\r\nThe release notes for iOS 4.0 include a very important note about runtime checking for the availability of UINib:\r\n\r\n\"iOS 4 includes a new UINib class to support rapidly unarchiving nib files. While this class is new to iOS SDK 4, it was present but private, in previous releases. Special care needs to be taken when deploying code that uses the UINib class and also runs on iOS releases prior to version 4. Specifically, you cannot determine the availability of the class solely using the NSClassFromString function, because that check returns a private class on iOS 3.x and earlier. Instead, after getting the UINib class using NSClassFromString, you must also use the respondsToSelector: method of the returned class to see if it responds to the nibWithNibName:bundle: method. If it responds to that method, you can use the class.\"\r\n\r\nThis warning appears nowhere in the documentation for UINib. It should.\r\n\r\n\r\nExpected Results:\r\nThis type of exception to the class availability checks is normally documented in the class docs. UIGestureRecognizer includes the following text, for example:\r\n\r\n\"Usage Special Considerations\r\nTo determine whether a class is available at runtime in a given iOS release, you typically check whether the class is nil. Unfortunately, this test is not cleanly accurate for UIGestureRecognizer. Although this class was publicly available starting with iOS 3.2, it was in development a short period prior to that. Although the class exists in an earlier release, use of it and other gesture-recognizer classes are not supported in that earlier release. You should not attempt to use instances of those classes.\r\n\r\nTo determine at runtime whether you can use gesture recognizers in your application, test whether the class exists and, if it does, allocate an instance and see check if it responds to the selector locationInView:. This method was not added to the class until iOS 3.2. The code might look like the following:\"\r\n\r\n\r\nActual Results:\r\nUINib doesn't ever mention that you will have a terrible time if you use NSClassFromString to check for its availability."
    email: cbowns@gmail.com
    modified: "2012-07-03T18:06:38.813391Z"
    number: "11799078"
    number_intvalue: 11799078
    originated: 7/3/2012
    parent_number: '&{NULL_VALUE}'
    product: Documentation
    product_version: ""
    reproducible: N/A
    resolved: ""
    status: Open
    title: Documentation for UINib doesnt include warning about availability checks
