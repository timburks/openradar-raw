apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "12219416"
    labels:
        datastore_id: "1908405"
data:
    classification: Serious Bug
    created: "2012-08-31T23:38:39.573028Z"
    description: "31-Aug-2012 04:34 PM Michael Jurewitz:\r\nSummary:\r\nKey Value Observing does not notify the observing object when a weakly held observed object goes to nil as a result of being deallocated.\r\n\r\nSteps to Reproduce:\r\n1. Inspect attached sample project\r\n2. Notice that Class A weakly holds an instance of Class B.\r\n3. Instance `a` of Class A is subscribed to watch for changes to instance b's name.\r\n4. Notice `a` is properly notified of changes to `b's name.\r\n5. Notice that once `b's last strong reference goes away, it is deallocated.\r\n6. `a` is never notified via KVO that `b` has gone away or changed after this point.\r\n\r\nExpected Results:\r\nKVO should inform observers when observed values change, particularly as a result of being deallocated via the __weak subsystem. This is likely an enormous source of subtle bugs and unexpected behavior. It should be possible to be weakly interested in an object from a graph management perspective and still be informed of changes to that object via KVO. This bug basically makes it impossible to take a KVO interest in a weakly held object.\r\n\r\nActual Results:\r\nKVO actually detects this situation enough to log to the console. However, instead of being of any further help and informing the observing objects, it just silently fails.\r\n\r\n\r\n31-Aug-2012 04:34 PM Michael Jurewitz:\r\n'WeakTest.zip' was successfully uploaded"
    email: jurewitz@gmail.com
    modified: "2012-08-31T23:38:39.573232Z"
    number: "12219416"
    number_intvalue: 12219416
    originated: 31-Aug-2012 04:34 PM
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 12B19
    reproducible: Always
    resolved: ""
    status: Open
    title: KVO does not notify when a weakly observed property goes to nil
