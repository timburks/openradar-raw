apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "5210474"
    labels:
        datastore_id: "39449"
data:
    classification: Serious Bug
    created: "2009-06-04T10:44:12.517281Z"
    description: "17-May-2007 06:19 PM Sanjay Samani:\r\nSummary\r\n\r\nCore Data generated set accessor for Objective-C 2.0 properties do not check for equality with set value and trigger change notification even in case where the item is not being changed.\r\n\r\nSteps To Reproduce\r\n\r\nCreate a Core Data Entity, with an attribute.  Create a custom class for the object and declare a property for the  attribute.  Specify the property is dynamic so that Core Data is responsible for providing the accessor methods, e.g.,\r\n\r\n@interface MyClass : NSManagedObject \r\n{\r\n}\r\n@property (ivar) NSString *name;\r\n@end\r\n\r\n@implementation MyClass\r\n@property (dynamic) NSString *name;\r\n@end\r\n\r\nUse the accessor to set the value to be what it is already, e.g.:\r\n\r\nMyClass myObject = ...;\r\n\r\n[myObject setName:\"NewName\"];\r\n[myObject setName:[myObject name]];  // This will generate a didChangeValueForKey:@\"name\" message, despite the value not actually being changed.\r\n\r\nNormal accessors would check for equality for the new and old value and not make generate a change in the case of the values being the same.\r\n\r\nExpected Results\r\n\r\nNo didChangeValueForKey message\r\n\r\nActual Results\r\n\r\ndidChangeValueForKey is called"
    email: daytimesoftware@googlemail.com
    modified: "2011-08-28T05:51:07.600764Z"
    number: "5210474"
    number_intvalue: 5210474
    originated: 17 May 2007
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Leopard 10.5
    reproducible: Always
    resolved: ""
    status: Open
    title: CoreData Obj-C 2.0 generated accessors don't check if old & new values are equal
