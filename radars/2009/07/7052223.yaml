apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7052223"
    labels:
        datastore_id: "60434"
data:
    classification: Enhancement
    created: "2009-07-13T02:48:34.970079Z"
    description: "Summary:\r\n+[NSPredicate predicateWithFormat:] and its friends throw an NSInvalidArgumentException if passed an invalid predicate string.  This can make it difficult to use user input in a predicate format string, since you must use a @try/@catch block and place the handling out line.  A better solution would be to return nil on a bad format string, and perhaps provide a predicateWithFormat:error: method for instances when the programmer cannot guarantee the validity of the format string.  \r\n\r\nFor example, imagine a command-line tool similar to mdfind, which allows the user to specify a spotlight query string, except that our tool uses NSPredicate to perform some custom logic.  In these cases, the programmer may want to perform some extra manipulation on the user-provided string, just as mdfind turns \"asdf\" into \"* = 'asdf'\".  This currently requires a @try/@catch block, but it is not programmer error.\r\n\r\nSteps to Reproduce:\r\nCall the following line of code:\r\n  NSPredicate *pred = [NSPredicate predicateWithFormat:@\"%@\", @\"asdf\"];\r\nor\r\n  NSError *error = nil;\r\n  NSPredicate *pred = [NSPredicate predicateWithFormat:@\"%@\", @\"asdf\" error:&error];\r\n\r\nExpected Results:\r\nAfter executing the code, pred is nil. In the second case, error also contains a description of what went wrong.\r\n\r\nActual Results:\r\nAn exception is thrown.\r\n\r\nRegression:\r\nNone.\r\n\r\nNotes:\r\nSince current code may rely on the exception-throwing behavior, it may not be possible to change the behavior of predicateWithFormat:.  However, a new method with an explicit error parameter would not break backward compatibility, and would enable the programmer to explicitly indicate that he is aware of the possibility of error."
    email: bjhomer@gmail.com
    modified: "2011-08-28T05:45:53.833044Z"
    number: "7052223"
    number_intvalue: 7052223
    originated: July 12, 2009
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: "10.4"
    reproducible: Always
    resolved: ""
    status: Open
    title: +[NSPredicate predicateWithFormat:] throws an exception on bad input
