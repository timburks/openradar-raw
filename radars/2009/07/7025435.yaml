apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7025435"
    labels:
        datastore_id: "58409"
data:
    classification: Enhancement
    created: "2009-07-01T22:25:05.220282Z"
    description: "01-Jul-2009 05:20 PM Patrick Burleson:\r\nSummary: \r\nThe Objective-C runtime should support namespaces to allow for the same named class to exist without collision. In today's Objective-C world, most folks use a 2 letter prefix to try and achieve this, but all too often, Apple will add an API that hijacks an in use 2 letter prefix. This is not exclusive to Apple either. If I bring in a third party framework, I have to be sure there are no class name collisions. If they were in their own namespace, I'd have no worry.\r\n\r\nI'd suggest reverse domain style like Java.\r\n\r\nThis could be backwards compatible by having any class that doesn't define a namespace be in the general namespace. Apple could then leave all existing APIs in the general namespace for backwards compatibility and all new API (as well as third party code) would use namespaces.\r\n\r\nSteps to reproduce:\r\n\r\nCreate a class with the same name as one in a framework you've included and watch mass confusion commence.\r\n\r\nExpected results:\r\n\r\nAllow for the definition of namespaces to allow for classes of the same name to co-exist in the same application.\r\n\r\nActual results:\r\n\r\nNo such feature exists. Hacks and work arounds are put in place that aren't guaranteed to work."
    email: pburleson@gmail.com
    modified: "2011-08-28T05:46:04.029099Z"
    number: "7025435"
    number_intvalue: 7025435
    originated: 7/1/2009
    parent_number: "2821039"
    product: Developer tools
    product_version: ""
    reproducible: Not Applicable
    resolved: ""
    status: Duplicate/2821039
    title: Objective-C Namespaces
