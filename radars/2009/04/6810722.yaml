apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "6810722"
    labels:
        datastore_id: "32410"
data:
    classification: Serious Bug
    created: "2009-04-21T19:12:53.608585Z"
    description: "20-Apr-2009 08:06 PM Kyle McKay:\r\nPROBLEM:\r\n\r\nMac OS X does not include the OpenSSH fix for OpenSSH Bug 85:\r\n\r\nhttps://bugzilla.mindrot.org/show_bug.cgi?id=85\r\n\r\nSTEPS:\r\n\r\n1. Enable remote login on your machine\r\n2. Do the following from a Terminal prompt\r\n\r\nssh -2 localhost yes | true\r\n\r\n3. After responding to any prompts/password requests, notice that the command hangs without returning to the shell prompt.\r\n\r\nEXPECTED BEHAVIOR:\r\n\r\nIssuing the same command on an up-to-date version of Ubuntu 8.10 results in a return to the shell prompt (which is the correct behavior).\r\n\r\nWORKAROUNDS:\r\n\r\nInstall a newer version of sshd (the bug is specific to the sshd server part of the code) through some unofficial, non-Apple sanctioned mechanism.\r\n\r\nOTHER INFORMATION:\r\n\r\nThere is not an expectation that users need to run \"ssh -2 localhost yes | true\".  However, other software creates similar conditions.\r\n\r\nFor example, using Subversion with the \"svn+ssh\" protocol with version 1.6.0 or later exposes this bug.\r\n\r\nSubversion 1.6.0 and later includes a fix for Subversion issue 2580 which then exposes the OpenSSH bug:\r\n\r\nhttp://subversion.tigris.org/issues/show_bug.cgi?id=2580\r\n\r\nAs sshd is often enabled as part of remote login support, encouraging users to install an unofficial, non-Apple sanctioned sshd replacement is not really desirable and potentially creates another vector for attacks on the users system.\r\n\r\nApple should include an updated sshd with the OpenSSH Bug 85 fix to avoid users having to look elsewhere for an updated sshd that could (depending on the source) potentially expose their system to attacks.\r\n\r\n20-Apr-2009 08:32 PM Kyle McKay:\r\nThe OpenSSH Bug 85 fix was checked into OpenSSH CVS here:\r\n\r\nhttp://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/session.c?rev=1.238;content-type=text%2Fx-cvsweb-markup\r\n\r\nA regular unified diff showing the exact changes can be seen here:\r\n\r\nhttp://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/session.c.diff?r1=1.237;r2=1.238\r\n\r\nand a side-by-side colored diff can be seen here:\r\n\r\nhttp://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/session.c.diff?r1=1.237;r2=1.238;f=h\r\n\r\n\r\n21-Apr-2009 01:38 AM Kyle McKay:\r\nOn Apr 20, 2009, at 23:53, Damien Miller wrote:\r\n> On Mon, 20 Apr 2009, Kyle McKay wrote: \r\n>> On Apr 20, 2009, at 23:10, Damien Miller wrote:\r\n>>>\r\n>>> This doesn't look like bug#85 based on what you sent below. It looks\r\n>>> more like a whatever that you were running failing to notice its stdout\r\n>>> closing.\r\n>>\r\n>> Actually after looking at this some more, I think Apple's sshd is just\r\n>> missing the Bug 85 patch and I think the debug messages back this up.\r\n>\r\n> No, Apple's sshd clearly does have the bug #85 patch:\r\n>\r\n>> debug2: channel 0: rcvd eow\r\n>\r\n> Would not be printed otherwise. Perhaps they have forcibly disabled\r\n> USE_PIPES in session.c? It is required for the patch to correctly\r\n> function.\r\n>\r\n>> And in this case sshd included the Bug 85 fix and so was using pipes to\r\n>> communicate with the child and the child therefore got a SIGPIPE on the input\r\n>> open -> closed transition and exited.\r\n>\r\n> No, in both cases the signalling between sshd and the child process is\r\n> identical from the logs. There may be differences depending on whether\r\n> Apple has modified their sshd to avoid using pipes (thwarting the\r\n> half-close fix in the process), but you will need to post a full debug\r\n> log from the server to tell.\r\n>\r\n> -d\r\n\r\nThe original session.c is here:\r\n\r\nhttp://www.opensource.apple.com/darwinsource/10.5.6/OpenSSH-95.1.5/openssh/session.c.orig\r\n\r\nand the Apple-patched version here:\r\n\r\nhttp://www.opensource.apple.com/darwinsource/10.5.6/OpenSSH-95.1.5/openssh/session.c\r\n\r\nAnd sure enough in the diff of the two you find:\r\n\r\n--- session.c.orig\r\n+++ session.c\r\n@@ -424,7 +424,9 @@\r\n\t}\r\n}\r\n\r\n+#ifndef __APPLE__\r\n#define USE_PIPES\r\n+#endif\r\n\r\n\r\nThose two lines with + above that were added by Apple are the source of this bug.  They need to be removed.\r\n\r\nQuoted from Damien's message above \"There may be differences depending on whether Apple has modified their sshd to avoid using pipes (thwarting the half-close fix in the process)\".\r\n\r\nBy Eliminating the use of pipes, Apple has sabotaged the half-close fix.\r\n\r\n21-Apr-2009 09:26 AM Kyle McKay:\r\nApple pulled in the OpenSSH Bug 85 fix as of 10.5.5 and in the same release added this patch:\r\n\r\nPR-6146452_do_not_use_pipes.patch\r\n\r\nwhich breaks it.  That patch needs to go away to fix this bug.\r\n\r\nHere are the contents of PR-6146452_do_not_use_pipes.patch:\r\n\r\n--- session.c\t2008-06-16 06:29:18.000000000 -0700\r\n+++ session.c\t2008-08-13 17:40:56.000000000 -0700\r\n@@ -424,7 +424,9 @@\r\n \t}\r\n }\r\n \r\n+#ifndef __APPLE__\r\n #define USE_PIPES\r\n+#endif\r\n /*\r\n  * This is called to fork and execute a command when we have no tty.  This\r\n  * will call do_child from the child, and server_loop from the parent after\r\n\r\n22-Apr-2009 05:02 PM Kyle McKay:\r\nThe attached patch file file, half_close_fix.patch, restores the functionality of the half-close fix without introducing the problems that disabling USE_PIPES was trying to prevent.\r\n\r\nThe patch should be applied against a fully patched session.c file as found here:\r\n\r\nhttp://www.opensource.apple.com/darwinsource/10.5.6/OpenSSH-95.1.5/openssh/session.c\r\n\r\nHere are the contents of half_close_fix.patch (also attached):\r\n\r\n--- session.c\t2008-08-13 17:40:56.000000000 -0700\r\n+++ session.c\t2009-04-23 04:39:14.000000000 -0700\r\n@@ -424,9 +424,7 @@\r\n \t}\r\n }\r\n \r\n-#ifndef __APPLE__\r\n #define USE_PIPES\r\n-#endif\r\n /*\r\n  * This is called to fork and execute a command when we have no tty.  This\r\n  * will call do_child from the child, and server_loop from the parent after\r\n@@ -440,11 +438,12 @@\r\n #ifdef USE_PIPES\r\n \tint pin[2], pout[2], perr[2];\r\n \r\n-\t/* Allocate pipes for communicating with the program. */\r\n-\tif (pipe(pin) < 0) {\r\n-\t\terror(\"%s: pipe in: %.100s\", __func__, strerror(errno));\r\n+\t/* Allocate socketpair for communicating with the program input. */\r\n+\tif (socketpair(AF_UNIX, SOCK_STREAM, 0, pin) < 0) {\r\n+\t\terror(\"%s: socketpair #1: %.100s\", __func__, strerror(errno));\r\n \t\treturn -1;\r\n \t}\r\n+\t/* Allocate pipes for communicating with the program output. */\r\n \tif (pipe(pout) < 0) {\r\n \t\terror(\"%s: pipe out: %.100s\", __func__, strerror(errno));\r\n \t\tclose(pin[0]);\r\n\r\n\r\n22-Apr-2009 05:03 PM Kyle McKay:\r\n'half_close_fix.patch' was successfully uploaded\r\n\r\n20-Oct-2009 12:56 PM YVONNE  VILLA  :\r\nEngineering has provided the following information:\r\n\r\nWe were unable to verify against SnowLeopard please upgrade to the latest version available and verify."
    email: mackyle@gmail.com
    modified: "2011-08-28T05:47:04.216813Z"
    number: "6810722"
    number_intvalue: 6810722
    originated: 20-Apr-2009 08:06 PM
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.5.6/9G55
    reproducible: Always
    resolved: ""
    status: Closed
    title: OpenSSH sshd suffers from OpenSSH Bug 85
