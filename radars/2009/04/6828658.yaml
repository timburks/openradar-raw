apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "6828658"
    labels:
        datastore_id: "36401"
data:
    classification: Serious Bug
    created: "2009-04-26T22:03:38.956683Z"
    description: "SUMMARY:\r\n-[NSURL initWithScheme:host:path:] does not escape paths properly/as expected.\r\n\r\nSTEPS TO REPRODUCE:\r\n1) Create a string @\"/foo bar?/baz.txt\"\r\n2) Call [NSURL fileURLWithPath:string];\r\n3) Call [[NSURL alloc] initWithScheme:@\"file\" host:@\"localhost\" path:string];\r\n\r\nEXPECTED RESULTS:\r\nThe two URLs are identical.\r\n\r\nACTUAL RESULTS:\r\n+fileURLWithPath: correctly escapes both the space and the question mark in the path. -initWithScheme:host:path: only escapes the space. The question is mark is placed into the final URL, which means that calling -path will return a truncated version of what is expected. i.e it will return this:\r\n\r\n/foo bar\r\n\r\ninstead of this:\r\n\r\n/foo bar?/baz.txt\r\n\r\nNOTES:\r\nThis may actually be the intended behaviour. If so, the documentation should note that -initWithScheme:host:path: expects an at least partially escaped path to passed to it.\r\n\r\nIn my particular case, I was able to work around the problem by using CFURLCreateCopyDeletingLastPathComponent()."
    email: mike.abdullah@gmail.com
    modified: "2011-08-28T05:46:59.572641Z"
    number: "6828658"
    number_intvalue: 6828658
    originated: 26-Apr-2009 10:51 PM
    parent_number: "6828839"
    product: Mac OS X
    product_version: 10.5.6
    reproducible: Always
    resolved: ""
    status: Duplicate/6828839
    title: -[NSURL initWithScheme:host:path:] does not escape paths properly/as expected
