apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "6039872"
    labels:
        datastore_id: "36408"
data:
    classification: Serious Bug
    created: "2009-04-29T04:23:11.9026Z"
    description: "27-Jun-2008 12:27 PM Dave Dribin:\r\nSummary: \r\nNSCollectionView sometimes crashes if you try to resize it at the exact same time a row is being deleted.\r\n\r\nSteps to Reproduce:\r\n1. Open up the attached project.\r\n2. Run the application.\r\n3. Add 5-10 items.\r\n4. Constantly resize the window as items are being completed and deleted.\r\n\r\nExpected Results:\r\nThe collection view should correctly display and animate items, even as they are being deleted.\r\n\r\nActual Results:\r\nEvery so often, it will crash.\r\n\r\nRegression:\r\nI have tested on 10.5.3 and earlier.  It is sometimes difficult to reproduce.  You have to catch it just as an item row is being removed, and even then it's not 100% reproducible.\r\n\r\nI also think it may be related to its containing scroll view.  If I uncheck \"Automatically Hides Scrollers\", I have yet to be able reproduce it.  But I could just be getting lucky.\r\n\r\nNotes:\r\nThe backtrace always looks the same.  It crashes in CFDictionaryApplyFunction():\r\n\r\n#0  0x906c2bfc in CFDictionaryApplyFunction ()\r\n#1  0x90c1052b in -[NSViewAnimation _stopAnimation:] ()\r\n#2  0x90c682bb in -[NSAnimation stopAnimation] ()\r\n#3  0x9112131c in -[NSCollectionView _stopAnimationCompletingOperations:] ()\r\n#4  0x91122327 in -[NSCollectionView _applyTargetConfiguration:] ()\r\n#5  0x9111dae3 in -[NSCollectionView _superviewFrameChanged:] ()\r\n#6  0x93b6654a in _nsnote_callback ()\r\n#7  0x906d39ba in __CFXNotificationPost ()\r\n#8  0x906d3c93 in _CFXNotificationPostNotification ()\r\n#9  0x93b637b0 in -[NSNotificationCenter postNotificationName:object:userInfo:] ()\r\n#10 0x93b6cff8 in -[NSNotificationCenter postNotificationName:object:] ()\r\n#11 0x90a3d6cb in -[NSView _postFrameChangeNotification] ()\r\n#12 0x90a4353b in -[NSView setFrameSize:] ()\r\n#13 0x90b34b96 in -[NSClipView setFrameSize:] ()\r\n#14 0x90a431f9 in -[NSView setFrame:] ()\r\n#15 0x90b348ed in -[NSScrollView tile] ()\r\n#16 0x90a739a2 in -[NSScrollView reflectScrolledClipView:] ()\r\n#17 0x90b41cce in -[NSClipView _reflectDocumentViewFrameChange] ()\r\n#18 0x90a3d691 in -[NSView _postFrameChangeNotification] ()\r\n#19 0x90a4353b in -[NSView setFrameSize:] ()\r\n#20 0x9111d906 in -[NSCollectionView setFrameSize:] ()\r\n#21 0x90a431f9 in -[NSView setFrame:] ()\r\n#22 0x90c10724 in SetViewFinalState ()\r\n#23 0x906c2c09 in CFDictionaryApplyFunction ()\r\n#24 0x90c1052b in -[NSViewAnimation _stopAnimation:] ()\r\n#25 0x90c682bb in -[NSAnimation stopAnimation] ()\r\n#26 0x9112131c in -[NSCollectionView _stopAnimationCompletingOperations:] ()\r\n#27 0x91122327 in -[NSCollectionView _applyTargetConfiguration:] ()\r\n#28 0x9111dae3 in -[NSCollectionView _superviewFrameChanged:] ()\r\n#29 0x93b6654a in _nsnote_callback ()\r\n#30 0x906d39ba in __CFXNotificationPost ()\r\n#31 0x906d3c93 in _CFXNotificationPostNotification ()\r\n#32 0x93b637b0 in -[NSNotificationCenter postNotificationName:object:userInfo:] ()\r\n#33 0x93b6cff8 in -[NSNotificationCenter postNotificationName:object:] ()\r\n#34 0x90a3d6cb in -[NSView _postFrameChangeNotification] ()\r\n#35 0x90a4353b in -[NSView setFrameSize:] ()\r\n#36 0x90b34b96 in -[NSClipView setFrameSize:] ()\r\n#37 0x90a431f9 in -[NSView setFrame:] ()\r\n#38 0x90b348ed in -[NSScrollView tile] ()\r\n#39 0x90da55f4 in -[NSScrollView _updateForLiveResizeWithOldSize:] ()\r\n#40 0x90a434b9 in -[NSView setFrameSize:] ()\r\n#41 0x90b3fcd3 in -[NSScrollView setFrameSize:] ()\r\n#42 0x90a431f9 in -[NSView setFrame:] ()\r\n#43 0x90b1146d in -[NSView resizeWithOldSuperviewSize:] ()\r\n#44 0x90b112ae in -[NSView resizeSubviewsWithOldSize:] ()\r\n#45 0x90a434b9 in -[NSView setFrameSize:] ()\r\n#46 0x90b0fa67 in -[NSWindow _oldPlaceWindow:] ()\r\n#47 0x90b0f179 in -[NSWindow _setFrameCommon:display:stashSize:] ()\r\n#48 0x90b0eb52 in -[NSWindow setFrame:display:] ()\r\n#49 0x90cd7ba6 in -[NSTitledFrame resizeWithEvent:] ()\r\n#50 0x90cc7e74 in -[NSTitledFrame mouseDown:] ()\r\n#51 0x90cc7dd7 in -[NSThemeFrame mouseDown:] ()\r\n#52 0x90b2888b in -[NSWindow sendEvent:] ()\r\n#53 0x90af5431 in -[NSApplication sendEvent:] ()\r\n#54 0x90a52e27 in -[NSApplication run] ()\r\n#55 0x90a20030 in NSApplicationMain ()\r\n#56 0x00002708 in main (argc=1, argv=0xbffff288) at /Users/dave/Desktop/CollectionView/main.m:13\r\n\r\n\r\n\r\n\r\n'CollectionView.tgz' was successfully uploaded\r\n\r\n27-Jun-2008 12:38 PM Dave Dribin:\r\nI've attached a screen cast of how to trigger the crash.  It can be a bit finicky, and I've had to create 20-30 items before getting it to happen.  The trick is to constantly keep the window resizing.  Also, it seems like having a smaller window (narrower and shorter) can help trigger the crash.\r\n\r\n27-Jun-2008 12:47 PM Dave Dribin:\r\nOh, and just to emphasize part of the the screen cast: it seems that \"Item 9\" is complete and being removed is at least part of the trigger to the crash.\r\n\r\n27-Jun-2008 02:02 PM Dave Dribin:\r\nA couple more points, and then I swear, I'm done.  First, a background thread is used to \"fire\" a timer because  NSTimers won't fire while the window is actively being resized.  Second, resizing a window with an NSCollectionView like this may not be common, but the crash can occur any time the collection view resizes.  I originally found this bug while trying to create a Mail.app-like activity pane in the bottom pane of a split view.  The collection view may crash if you are resizing the split view while an item is removed from the collection view."
    email: ddribin@gmail.com
    modified: "2011-08-28T05:50:00.694141Z"
    number: "6039872"
    number_intvalue: 6039872
    originated: 27-Jun-2008 12:27 PM
    parent_number: "5742022"
    product: Mac OS X
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Duplicate/5742022
    title: NSCollectionView sometimes crashes while resizing and a row is deleted
