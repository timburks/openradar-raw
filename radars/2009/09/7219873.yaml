apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7219873"
    labels:
        datastore_id: "73463"
data:
    classification: UI/Usability
    created: "2009-09-16T01:53:18.830339Z"
    description: "13-Sep-2009 11:17 PM Andre Berg:\r\nSummary: \r\n\r\nIn Xcode 3.1 and below I was able to add CompletionPrefix sections to my xctxtmacro files so that I could type these strings in my source code and have them replaced by the template the CompletionPrefix section belongs to. This seems to be completely ignored in Xcode 3.2\r\n\r\nSteps to Reproduce:\r\n\r\n1. Make sure xctxtmacro files are valid\r\n2. Have at least the default CompletionPrefix section by Apple or your own \r\n3. Restart Xcode\r\n4. Check Xcode menu \"Edit > Insert Text Macro > YOUR_CATEGORY\" to see that indeed you have a valid xctxtmacro file and all your defined templates are to be found in this submenu.  \r\n5. Type a completion prefix in your source code (e.g. 'nsma' for ‘NSMutableArray‘, or 'if' for 'If / Else Block')\r\n\r\nExpected Results:\r\n\r\nThe inline source code assist dropdown should come up with the exact name of the template from xctxtmacro file matching the completion prefix sequence you just typed.\r\n\r\nActual Results:\r\n\r\nInline sourc code assist dropdown comes up but only suggestions from documentation and source code index are shown while no templates from xctxtmacro file.\r\n\r\nRegression:\r\n\r\nXcode 3.1 on Leopard 10.5.8 does not show this behaviour. \r\n\r\nNotes:\r\n\r\nA workaround for now until this is sorted out would be of course to just insert the txtmacros from going to the top Xcode menu, but boy this is driving me crazy and is more disruptive to my workflow than just typing it all out.\r\n\r\n13-Sep-2009 11:41 PM Andre Berg:\r\n'ObjectiveC.xctxtmacro' was successfully uploaded\r\n\r\n23-Sep-2009 05:00 PM Andre Berg:\r\nAnother workaround I have found is if you put the insertion caret behind a statement terminated by a semicolon and then type the completion prefix it will get reckognized. If you type two consecutive semicolons on a line on their own and then put the insertion point behind the second semicolon your completion prefixes will also get correctly interpreted. For now I am using those two techniques to avoid going all the way up to the menu searching for the entry and inserting it. It's not as fluent as hitting two, three letters and tab but it will do for now.\r\n\r\n03-Oct-2009 02:31 AM Andre Berg:\r\nAnd so it turns out that you need to set a new value in your xctxtmacro files in order for your own specifications to show up:\r\n \r\nIf you add \"OnlyAtBOL = YES;\" to each macro unit which doesn't appear to show up it will then work.\r\nAt least that's how I got it to work again.\r\n \r\nI am guessing that BOL stands for \"Beginning of Line\" which would also explain why my macros would work when the insertion caret was directly after the closing semicolon of the previous line.\r\n \r\nSo actually the effect if you set it to YES seems to be that you can then use your macro anywhere except at the end of a line.\r\n \r\nA bit weird but whatever works, works. \r\n\r\nPS: I am leaving the bug unresolved for now as I don't know if what I describe is the intended behaviour."
    email: andre.bergmedia@googlemail.com
    modified: "2011-08-28T05:44:40.072062Z"
    number: "7219873"
    number_intvalue: 7219873
    originated: 13-Sep-2009
    parent_number: "7151036"
    product: Developer Tools
    product_version: 3.2 / 1610
    reproducible: Yes
    resolved: No
    status: Duplicate/7151036
    title: CompletionPrefix sections from .xctxtmacro files are ignored in Xcode 3.2
