apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7215146"
    labels:
        datastore_id: "74428"
data:
    classification: Enhancement
    created: "2009-09-11T04:35:40.755709Z"
    description: "Overriding a superclass' method or implementing a protocol with optional methods can result in subtle bugs, including:\r\n\r\n* Accidentally overriding a superclass' method.\r\n* Misspelling a superclass' method, thus not actually overriding it.\r\n* Misspelling an optional protocol method, thus not actually implementing it.\r\n\r\nJava provides an '@override' annotation to handle these cases:\r\n\r\n  <http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Override.html>\r\n\r\nAnd C# provides an 'override' keyword:\r\n\r\n  <http://msdn.microsoft.com/en-us/library/ebca9ah3.aspx>\r\n  <http://msdn.microsoft.com/en-us/vcsharp/aa336813.aspx>\r\n\r\nA similar keyword in Objective-C, like @override, could work the same way:\r\n\r\n@override\r\n-(void)drawRect:(NSRect)rect\r\n{\r\n}\r\n\r\nIf you mark a method with @override, it *must* be declared in either the superclass or an optional protocol method.  If not, you get a compiler error (or maybe just a warning).\r\n\r\nPerhaps an @implement keyword could be used for protocols since you aren't strictly overriding anything:\r\n\r\n@implement\r\n- (NSInteger)numberOfRowsInTableView:(NSTableView *)tableView\r\n{\r\n}\r\n\r\nThis may be polluting keywords too much, and @override could be used for both cases, even if it's not strictly correct for protocols."
    email: ddribin@gmail.com
    modified: "2011-08-28T05:44:44.461918Z"
    number: "7215146"
    number_intvalue: 7215146
    originated: 10-Sep-2009 11:34 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: N/A
    resolved: ""
    status: Open
    title: Add an @override keyword on methods to help detect errors
