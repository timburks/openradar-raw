apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7469235"
    labels:
        datastore_id: "132403"
data:
    classification: Serious Bug
    created: "2009-12-14T18:08:49.153505Z"
    description: "Summary:\r\n\r\nAn saved iPhoto SlideShow incorrectly encodes the '&' character in AlbumData.xml\r\n\r\nSteps to Reproduce:\r\n\r\n1. in iPhoto, create a new Slideshow in the source list.\r\n2. For the music of the slideshow, select a band or track name with '&' in the path, e.g. Simon & Garfunkel\r\n3. Quit iPhoto\r\n\r\n4. Examine the XML file ~/Pictures/iPhoto Library/AlbumData.xml\r\n\r\n(for instance, do grep 'Garfunkel' <path_to_AlbumData.xml>\r\n\r\nExpected Results:\r\n\r\nIn the slideshow data dictionary, the string for the Song_Path key should properly encode the ampersand as & so that external programs can read this file\r\n\r\nActual Results:\r\n\r\nThe '&' in the path to the song is not encoded properly, which make this an unreadable file.  This causes any of the dozens of shipping applications that use the iMedia Browser framework to be completely unable to read the iPhoto library.\r\n\r\n\r\nHere is a concrete example when I tried it:\r\n\r\n<key>Song_Path</key>\r\n<string>/Volumes/dwood/Music/iTunes/iTunes Music/Music/Simon & Garfunkel/The Concert In Central Park/05 Scarborough Fair.m4a</string>\r\n\r\n\r\nRegression:\r\n\r\nUnknown\r\n\r\nNotes:\r\n\r\nNote that there is another key \"SongPath\" which *does* properly encode the '&' in the value.  It's not obvious as to why there are two similar keys/values, with one correct and one incorrect."
    email: dwood@karelia.com
    modified: "2011-08-28T05:43:11.736323Z"
    number: "7469235"
    number_intvalue: 7469235
    originated: "2009-12-14"
    parent_number: "7166650"
    product: iApps
    product_version: iPhoto 8.1.1
    reproducible: Always
    resolved: ""
    status: Duplicate/7166650
    title: iPhoto illegal Ampersand XML encoding in AlbumData.xml
