apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7149569"
    labels:
        datastore_id: "68408"
data:
    classification: Other Bug
    created: "2009-08-18T04:25:49.888025Z"
    description: "Summary:\r\nThe documentation for -init says in one paragraph that an implementation can return nil, then says in the next paragraph that an implementation must return a valid object or raise an exception.\r\n\r\nSteps to Reproduce:\r\n1. Load up the definition of -[NSObject init] (http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSObject_Class/Reference/Reference.html#//apple_ref/occ/instm/NSObject/init).\r\n\r\nExpected Results:\r\nThe documentation says either that an implementation may return nil, or must not return nil.\r\n\r\nActual Results:\r\nThe documentation says both that an implementation may return nil and that it must not return nil.\r\n\r\nRegression:\r\nNot that I know of.\r\n\r\nNotes:\r\nThe relevant quotes:\r\n\r\n“Subclass implementations of this method should initialize and return the new object. If it can’t be initialized, they should release the object and return nil. …”\r\n\r\n“Every class must guarantee that the init method either returns a fully functional instance of the class or raises an exception.”\r\n\r\nnil is not a fully functional instance of any class. To return nil as suggested by the former paragraph would violate the guarantee required by the latter paragraph.\r\n\r\nIt would make sense to only and always return nil after raising an exception, but if this is what the authors of the documentation meant, they did not say it directly."
    email: boredzo@gmail.com
    modified: "2011-08-28T05:45:19.319932Z"
    number: "7149569"
    number_intvalue: 7149569
    originated: 2009-08-17T21:23-0700
    parent_number: '&{NULL_VALUE}'
    product: Documentation
    product_version: "2009-02-04"
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Documentation of -[NSObject init] has conflicting statements
