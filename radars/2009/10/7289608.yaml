apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7289608"
    labels:
        datastore_id: "87401"
data:
    classification: Enhancement
    created: "2009-10-09T07:54:39.397509Z"
    description: "When doing KVO/KVC, one often has to specify strings that are actually selector names, or key paths. Since they actually consist solely of known identifiers in a known format, it would be great if Objective C introduced a syntax construct like @selector() that allowed specifying a string like this in a way that the compiler knows it's supposed to be a key-path, and can perform some basic validation to catch typos.\r\n\r\nThis would only change the language, as the final result of this would still be an NSString constant, so compiled code would stay fully backwards compatible and deployable on other platforms, and there would be no performance hit at runtime. Suggested syntax:\r\n\r\n[myTextView addObserver: self forKeyPath: @property(stringValue) options: 0 context: nil];\r\n\r\nif( [keyPath isEqualToString: @property(selection.subView.stringValue)] )\r\n    ...\r\n\r\nIt is possible to implement part of this using a macro:\r\n\r\n#define PROPERTY(propName)    NSStringFromSelector(@selector(propName))\r\n\r\nBut this only works with a single property (and only if its getter is identical to the property name), and adds an unnecessary function call to each string specified this way.\r\n\r\nPlease give us a construct like this and help us write less buggy code. Thank you."
    email: kusterer@gmail.com
    modified: "2011-08-28T05:44:09.207816Z"
    number: "7289608"
    number_intvalue: 7289608
    originated: 9-Oct-2009 09:54 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: n/a
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Objective C needs @selector() style operator for property strings
