apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7333580"
    labels:
        datastore_id: "101405"
data:
    classification: Enhancement
    created: "2009-10-24T15:12:49.756113Z"
    description: "24-Oct-2009 10:11 AM Dave Dribin:\r\nCustom assertions are in important design pattern to help keep test code clean and reusable:\r\n\r\n  <http://xunitpatterns.com/Custom%20Assertion.html>\r\n\r\nUnfortunately, assertions in OCUnit are huge, 20- to 30-line macros, and it's not easy to create custom assertions.  This process should be made easier.\r\n\r\nIt's possible to use a method for a custom assert, like:\r\n\r\n- (void)customAssertStringsEqual:(NSString *)s1 expected:(NSString *)s2\r\n{\r\n    STAssertEqualObjects(s1, s2, nil);\r\n}\r\n\r\nBut then all assertion failures show up on the line inside the custom assertion, not the caller of the custom assertion.  This is not useful when the test fails and you want to jump the failing test method, not inside the assertion.\r\n\r\nThe only way to have a custom assertion display the proper line on failure is to make them a macro using the __LINE__ macro.  Thus, you have to create a large multi-line macro just to add a simple custom assertion."
    email: ddribin@gmail.com
    modified: "2011-08-28T05:43:54.659955Z"
    number: "7333580"
    number_intvalue: 7333580
    originated: 24-Oct-2009 10:11 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 3.2
    reproducible: N/A
    resolved: ""
    status: Open
    title: 'ER: Make creating custom OCUnit assertions easier'
