apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7274490"
    labels:
        datastore_id: "83401"
data:
    classification: Enhancement
    created: "2009-10-04T20:39:55.415918Z"
    description: "Summary:\r\nCore Foundation (and, by extension, Foundation) should have a string formatter for Boolean integers (such as Foundation's BOOL).\r\n\r\nSteps to Reproduce:\r\n1. Write code like this:\r\n\tBOOL truth = YES;\r\n\tNSLog(@\"Truth: %?\", truth);\r\n2. Run it.\r\n\r\nExpected Results:\r\nCore Foundation replaces the Boolean formatter (%? in the example above) with a string representing the Boolean value of the integer argument.\r\n\r\nActual Results:\r\nWith the example above, you simply get a literal ? in place of the formatter.\r\n\r\nIn real examples, I use %@, and use the BOOL value as the condition in an expression such as truth ? @\"YES\" : @\"NO\". This works, but is much more typing, and it's easy for me to forget the ?: part of the expression. When I do, I get a crash, because %@ requires an object and a BOOL isn't one.\r\n\r\nRegression:\r\nNo.\r\n\r\nNotes:\r\nFor CFBoolean *objects* (and their NSNumber equivalents), we have %@. But we have nothing for Boolean *integers* such as Foundation's BOOL."
    email: boredzo@gmail.com
    modified: "2011-08-28T05:44:15.005045Z"
    number: "7274490"
    number_intvalue: 7274490
    originated: 2009-10-04T13:39-0700
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.6.1/10B504
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: 'Core Foundation: Add a formatter for Boolean integers'
