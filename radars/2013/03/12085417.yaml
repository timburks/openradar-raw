apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "12085417"
    labels:
        datastore_id: "2838402"
data:
    classification: UI/Usability
    created: "2013-03-11T02:56:57.602619Z"
    description: "13-Aug-2012 09:00 AM Kevin Doughty:\r\nSummary:\r\nBounds and opacity explicit additive animation do not function as expected. The usage pattern I use is as follows: In a transaction with actions disabled, set the new model value of the property. Then create an additive CABasicAnimation with a .5,0,.5,1 timing function. The fromValue is the old model value minus the new model value. The toValue is zero, NSZeroPoint, NSZeroSize, NSZeroRect, or the identity transform. Then add the animation to the layer with a keyPath of nil. It is intended to have many animations of the same keyPath running concurrently.\r\n\r\nSteps to Reproduce:\r\nIncluded workspace contains two projects showing bounds and opacity issues.\r\n\r\nExpected Results:\r\nBeautiful curves without keyframe animation, blocking, discrete jumps, and typical presentation animation angles. It is a great way to respond to user events.\r\n\r\nActual Results:\r\nOpacity appears to crop values between 0 and 1 after each animation is added, not just once at the end which is what would be needed. Rect animation appears to give the absolute value for width and height, when I need negative values. The workaround for bounds animation is to animate @\"bounds.size\", but I do not know a workaround for opacity.\r\n\r\nRegression:\r\nRect animation worked properly in 10.5 Leopard.\r\n\r\nNotes:\r\nI plan on submitting a feature request for implicit \"seamless\" additive animation and view animation soon.\r\n\r\n13-Aug-2012 09:00 AM Kevin Doughty:\r\n'AdditiveAnimationTests.zip' was successfully uploaded\r\n\r\n20-Sep-2012 02:48 PM Kevin Doughty:\r\nI added the following line:\r\nNSLog(@\"layer:%f; presentation:%f;\",main.opacity,[main.presentationLayer opacity]);\r\nto the end of the testOpacity function, outside of the transaction.\r\n\r\nIf you rapidly click the opacity test button, logging will report the presentation layer's opacity correctly approaches 0.5 but this is not what appears visually, so now I suspect the problem is with CARenderer.\r\n\r\nThe most recent version can be downloaded from:\r\nhttps://github.com/KevinDoughty/AdditiveAnimationTests\r\nI decided not to bombard you with file updates for a single line of code.\r\n\r\n09-Mar-2013 03:26 PM Kevin Doughty:\r\nI apologize for filing two issues in one bug report. Disregard the rect animation problem if you must, because it has a workaround, using an animation group with separate position and size animations. The important one is additive opacity animation. Please please please fix this. Thanks!"
    email: SoCalledNonFlipped@gmail.com
    modified: "2013-03-11T02:56:57.602987Z"
    number: "12085417"
    number_intvalue: 12085417
    originated: 13-Aug-2012 09:00 AM
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: "10.8"
    reproducible: Always
    resolved: ""
    status: Open
    title: Explicit Additive Animation - Bounds and Opacity
