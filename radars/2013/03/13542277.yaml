apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13542277"
    labels:
        datastore_id: "2895401"
data:
    classification: Serious Bug
    created: "2013-03-30T20:24:48.628773Z"
    description: "30-Mar-2013 02:15 PM Indragie Karunaratne:\r\nSummary:\r\n\r\nWhen using sibling overlapping NSViews where one of the sibling views is a layer hosting view and the other sibling is a layer backed view, the z-position of the views' layers at runtime (and hence the views themselves) is inconsistent.\r\n\r\nSteps to Reproduce:\r\n\r\n1. Create a layer hosting view and a layer backed view\r\n2. In the XIB, put the layer hosting view in the background and place the layer backed view on top of it\r\n3. Run the app\r\n\r\nExpected Results:\r\n\r\nThe z-order of the two views is maintained consistently.\r\n\r\nActual Results:\r\n\r\nAbout 1 in every 10-20 launches, the z-position will be wrong -- the layer hosting view will appear over the layer backed view. \r\n\r\nRegression:\r\n\r\nNotes:\r\n\r\nSample code is attached. Run the application 10-20 times to see where the problem kicks in (it happens, I promise!). Also attached are screenshots on what it SHOULD look like (correct.png, where the blue rectangle is visible over the red background) and what happens when the z-position gets messed up (incorrect.png, where only the red background is visible). \r\n\r\nI found the following workaround: [self.window.contentView setSubviews:[[self.window.contentView subviews] copy]];. Triggering the setter for subviews seems to reset the proper z-positions. \r\n\r\nExample project + screenshots can be found here: https://github.com/indragiek/radars/tree/master/13542277/LayerHostingBug"
    email: i@indragie.com
    modified: "2013-03-30T20:24:48.629242Z"
    number: "13542277"
    number_intvalue: 13542277
    originated: 30-Mar-2013 02:15 PM
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: 10.8.3
    reproducible: Sometimes
    resolved: ""
    status: Open
    title: Inconsistent z-position for layer hosting and layer backed sibling NSViews
