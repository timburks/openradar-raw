apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13420340"
    labels:
        datastore_id: "2857401"
data:
    classification: UI/Usability
    created: "2013-03-14T15:37:37.039324Z"
    description: "Summary:\r\n\r\nLet's say I'm writing some code, maybe a unit test. I reference a class that doesn't exist:\r\n\r\nSomeObject *o = [[SomeObject alloc] init];\r\n\r\nXcode will highlight this red because the class does not exist.\r\n\r\nI want Xcode to offer to create this class for me. This should be quick and easy.\r\n\r\nAfter the class is created, I call a method which also does not exist yet:\r\n\r\n[o doSomethingCool:@\"with this\"];\r\n\r\nOnce again, Xcode sees the method does not exist and highlights the line red. I would like Xcode to offer to stub out this method with the appropriate arguments and inferred types.\r\n\r\nReasoning:\r\n\r\nAt the moment, writing new code is full of pain points. Developing with TDD is painful. I have to keep stopping to create that protocol or class or method that I've just invented. This may involve right-clicking on a group, selecting \"Add\", choosing from a large selection of templates, then entering a filename, etc. etc. It's just painful.\r\n\r\nAlmost every other IDE on the planet will offer to stub all this stuff out for you automatically. Xcode should be doing this as well.\r\n\r\nXcode knows the classname. Just go and create a damned file with the appropriate name, and make the class inherit from NSObject. *Maybe* ask me which group to put it in (for the case I'm working in a unit test file and want new classes to go in my main app).\r\n\r\nPlease, just make this experience nicer."
    email: mike.weller@gmail.com
    modified: "2013-03-14T15:37:37.039499Z"
    number: "13420340"
    number_intvalue: 13420340
    originated: 14-Mar-2013 04:36 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 4.6
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode: offer to stub out classes and methods which don''t exist yet'
