apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13417031"
    labels:
        datastore_id: "2855401"
data:
    classification: Other Bug
    created: "2013-03-14T02:10:05.567469Z"
    description: "Summary:\r\n\r\nUICollectionView's visibleCells and indexPathsForVisibleItems return arrays of items that are in the wrong order.\r\n\r\nI have a UICollectionView using the default layout that is configured in my Storyboard to display a single row of items scrolling horizontally. I have implemented the UICollectionView's scrollViewDidScroll delegate method. In my implementation of this method I want to determine the 'first visible item' in order to display some information about this item in another part of my app.\r\n\r\nTo determine the 'first visible item' I ask the collection view for it's visibleCells or the indexPathsForVisibleItems. Given these methods return an ordered array and that the documentation doesn't state otherwise, I'd expect the order of the items in these arrays to match the order of the cells in my collection view. However, in both cases the order of the items that are returned do not always match the order of those items within the collection view.\r\n\r\n\r\nSteps to Reproduce:\r\n\r\n1. Create a UICollectionView with some items.\r\n2. In the collection view's delegate implement the scrollViewDidScroll method.\r\n3. Ask the collection view for its visibleCells and indexPathsForVisibleItems.\r\n4. Examine the order of the items that are returned.\r\n5. Scroll the collection view so that cells are reused.\r\n6. Examine the order of the items that are returned by visibleCells and indexPathsForVisibleItems again.\r\n\r\nExpected Results:\r\n\r\nThe collection view's visibleCells and indexPathsForVisibleItems return arrays of items whose order matches the order of the cells within the collection view.\r\n\r\nActual Results:\r\n\r\nBefore any cells are reused both methods return arrays of items whose order does match the order of the cells in the collection view - eg.\r\n\r\nindexPathsForVisibleItems:\r\n<__NSArrayM 0x756ed60>(\r\n<NSIndexPath 0x817e470> 2 indexes [0, 0],\r\n<NSIndexPath 0x817e5f0> 2 indexes [0, 1],\r\n<NSIndexPath 0x817e6a0> 2 indexes [0, 2],\r\n<NSIndexPath 0x817e750> 2 indexes [0, 3]\r\n)\r\n\r\nvisibleCells:\r\n<__NSArrayM 0x756bad0>(\r\n1 : <LabelCell: 0x81809f0; baseClass = UICollectionViewCell; frame = (0 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8180b20>>,\r\n2 : <LabelCell: 0x8186eb0; baseClass = UICollectionViewCell; frame = (236 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8186f40>>,\r\n3 : <LabelCell: 0x81886e0; baseClass = UICollectionViewCell; frame = (472 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8188680>>,\r\n4 : <LabelCell: 0x81869c0; baseClass = UICollectionViewCell; frame = (708 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8186a50>>\r\n)\r\n\r\nAfter the collection view has scrolled enough to reuse a cell, the order of items returned by these methods no longer matches the order in which the items appear in the collectio view. eg.\r\n\r\nindexPathsForVisibleItems:\r\n<__NSArrayM 0x756bad0>(\r\n<NSIndexPath 0x71911a0> 2 indexes [0, 6],\r\n<NSIndexPath 0x817e6a0> 2 indexes [0, 2],\r\n<NSIndexPath 0x817e750> 2 indexes [0, 3],\r\n<NSIndexPath 0x817e800> 2 indexes [0, 4],\r\n<NSIndexPath 0x71b56e0> 2 indexes [0, 5]\r\n)\r\n\r\nvisibleCells:\r\n<__NSArrayM 0x7572450>(\r\n7 : <LabelCell: 0x8186eb0; baseClass = UICollectionViewCell; frame = (1416 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8186f40>>,\r\n3 : <LabelCell: 0x81886e0; baseClass = UICollectionViewCell; frame = (472 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8188680>>,\r\n4 : <LabelCell: 0x81869c0; baseClass = UICollectionViewCell; frame = (708 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8186a50>>,\r\n5 : <LabelCell: 0x71b1910; baseClass = UICollectionViewCell; frame = (944 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x7180140>>,\r\n6 : <LabelCell: 0x81809f0; baseClass = UICollectionViewCell; frame = (1180 32; 226 236); clipsToBounds = YES; opaque = NO; layer = <CALayer: 0x8180b20>>\r\n)\r\n\r\n\r\nRegression:\r\n\r\nNotes:\r\nI've attached an Xcode project that demonstrates this bug.\r\n\r\nIf the API is behaving as it was designed to, then I think either the signature of these methods should change so that they return an unordered set rather than an ordered array or the documentation should be updated to make it clear not to rely on the order of items returned by these methods."
    email: jake@stripysock.com.au
    modified: "2013-03-14T02:10:05.567671Z"
    number: "13417031"
    number_intvalue: 13417031
    originated: 14-Mar-2013 01:06 PM
    parent_number: '&{NULL_VALUE}'
    product: iPad SDK
    product_version: "6"
    reproducible: Always
    resolved: ""
    status: Open
    title: Wrong order in UICollectionView's visibleCells and indexPathsForVisibleItems
