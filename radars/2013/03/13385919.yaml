apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13385919"
    labels:
        datastore_id: "2842401"
data:
    classification: Enhancement
    created: "2013-03-11T03:05:27.277631Z"
    description: "09-Mar-2013 03:21 PM Kevin Doughty:\r\nSummary:\r\nI have a specific explicit additive layer animation usage pattern that produces beautiful curves and responds better to user interaction. Unfortunately implicit view animation in this way is not possible without ugly hacks.\r\n\r\nSteps to Reproduce:\r\nThe code is available here:\r\nhttps://github.com/KevinDoughty/SeamlessAnimation\r\nLaunch the modified CocoaSlides project and resize the window.\r\n\r\nExpected Results:\r\nThe feature request is for the following issues to be addressed:\r\n\r\nThere is no combination of CABasicAnimation interpolation values fromValue, toValue, and byValue that will give you an animation using values from the model layer tree instead of the presentation layer tree.\r\n\r\nKeys must be nil or unique so many animations can run concurrently on the same CALayer property. Implicit animation only adds animations with a key that is the same as the property being animated. \r\n\r\nThe actionForKey: pattern doesn't allow one to easily know what the previous value is. In my implementation I added CALayer -previousLayer, which is similar in concept to -presentationLayer. \r\n\r\nIn addition, the following would make things more convenient:\r\n\r\nI have found that sometimes I need to access these keys, but the current API only provides functions like CALayer -animationForKey: and -animationKeys. I am forced to use unique keys and manually track of the animations elsewhere. Perhaps -nilKeyAnimationsForKeyPath: would be useful. Typically I need to access these animations when copying them from one layer to another (fundamental for visual consistency) and for determining the union rect of layers that are scrolling.\r\n\r\nIt would be convenient to have kCAMediaTimingFunctionPerfect that returned a timing function with the control points .5, 0, .5, 1. This timing function is required, otherwise transitioning from when one animation ends to another is visible.\r\n\r\nActual Results:\r\nUgly, presentation layer tree animation.\r\n\r\nRegression:\r\n\r\nNotes:\r\n\r\n09-Mar-2013 03:21 PM Kevin Doughty:\r\n'SeamlessAnimation.zip' was successfully uploaded"
    email: SoCalledNonFlipped@gmail.com
    modified: "2013-03-11T03:05:27.27784Z"
    number: "13385919"
    number_intvalue: 13385919
    originated: 09-Mar-2013 03:21 PM
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: "10.8"
    reproducible: ""
    resolved: ""
    status: Open
    title: '"Seamless" implicit additive view animation'
