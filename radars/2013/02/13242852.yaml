apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13242852"
    labels:
        datastore_id: "2739401"
data:
    classification: Enhancement
    created: "2013-02-19T11:47:24.388233Z"
    description: |-
        Working with the common use case of Core Data requires a lot of boilerplate code. In Apple's Xcode templates, this is thrown into the app delegate.

        I'd like to propose a new convenience constructor for NSPersistentStoreCoordinator, that avoids the need for it:

        [NSPersistentStoreCoordinator persistentStoreCoordinatorWithModelName:storePath:storeType:seedStoreName:automaticallyMigrate:options:error:]

        We would also need a new API:

        - defaultManagedObjectContext;

        The constructor takes a model name (which is assumed to be a file in the main bundle), a store path (full path to the persistent store), a store type, a seed store path (which can be nil — but if this parameter is passed in, then if the store path is empty it copies the seed store from the application bundle to the store path, rather than creating an empty store), a BOOL for whether to automatically migrate (this is such a commonly used option that it needs its own parameter), any further options, and an out error.

        The default managed object context method just returns a singleton managed object context. The user is at complete liberty to create further managed object contexts (and indeed, they should do if they want to customise things like concurrency type), but this should get them going.
    email: amorya@gmail.com
    modified: "2013-02-19T11:47:24.388449Z"
    number: "13242852"
    number_intvalue: 13242852
    originated: 19-Feb-2013 11:47 AM
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: "6.0"
    reproducible: Not Applicable
    resolved: ""
    status: ""
    title: NSPersistentStoreCoordinator to offer a convenience constructor to avoid boilerplate
