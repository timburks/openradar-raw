apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14251519"
    labels:
        datastore_id: "3143405"
data:
    classification: Feature (new)
    created: "2013-06-24T21:42:07.847051Z"
    description: "Summary:\r\n\r\nIt would be nice be able to flag designated initializers using an __attribute__, and have Clang emit a warning whenever they're not properly used. This is especially important as the rules for designated initializers are easily missed and error-prone.\r\n\r\nExample:\r\n\r\n@interface FooClass: NSObject\r\n- (id) initWithFoo:(id)foo __attribute__((designated_initializer));\r\n@end\r\n\r\n@implementation FooClass\r\n{\r\n    id _foo;\r\n}\r\n\r\n- (id)initWithFoo:(id)foo_\r\n{\r\n    self = [super init];\r\n    if(self) {\r\n        _foo = foo_;\r\n    }\r\n    return self;\r\n}\r\n@end\r\n\r\n@interface BarClass: FooClass\r\n- (id) initWithBar:(id)bar;\r\n@end\r\n\r\n@implementation BarClass\r\n{\r\n    id _bar;\r\n}\r\n\r\n- (id) initWithBar:(id)bar_\r\n{\r\n    self = [super init]; // Clang would complain that FooClass's designated initializer isn't called\r\n    if(self) {\r\n        _bar = bar_;\r\n    }\r\n    return self;\r\n}\r\n\r\n@end\r\n\r\n\r\nNotes:\r\n\r\nThis is somewhat related to __attribute__((objc_requires_super)), as designated initializers should be called or reimplemented by subclasses designated initializers."
    email: nicolas.bouilleaud@gmail.com
    modified: "2013-12-19T09:47:30.166597Z"
    number: "14251519"
    number_intvalue: 14251519
    originated: "2013-06-24"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "5.0"
    reproducible: n/a
    resolved: ""
    status: Duplicate/7386414/Open
    title: Clang attribute for designated initializers
