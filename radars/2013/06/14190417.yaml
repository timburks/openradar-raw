apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14190417"
    labels:
        datastore_id: "3115411"
data:
    classification: Other Bug
    created: "2013-06-18T17:38:07.353235Z"
    description: "Summary:\r\nIn the first Mavericks beta, the NSLinguisticTagger fails to separate numbers following nouns in specific situations (did not happen in 10.8). In the following sentences the chunk \"Creatinine 95\" (and in some even \"GFR 32\") comes back as one token instead of two:\r\n\r\n\"GFR, 32 years, Creatinine 95, male, caucasian.\"\r\n\"GFR 32 years, Creatinine 95, male, caucasian.\"\r\n\"32 years, Creatinine 95, male, caucasian.\"\r\n\r\nIn the following sentences, \"Creatinine\" and \"95\" come back as their own tokens as expected:\r\n\r\n\"GFR, 32 years Creatinine 95, male, caucasian.\"\r\n\"GFR 32 years Creatinine 95, male, caucasian.\"\r\n\"GFR, Creatinine 95, male, caucasian.\"\r\n\"Creatinine 95, male, caucasian.\"\r\n\r\nExpected Results:\r\nIf the \"NSLinguisticTaggerJoinNames\" option is not given, no name/noun joining should be attempted.\r\n\r\nActual Results:\r\nEven if the \"NSLinguisticTaggerJoinNames\" is not given, the tagger seems to generate heuristics which prompts it to join tokens into nouns that it might think are names.\r\n\r\nRegression:\r\nThe problem with the joining is that the tagger does not (and I don't expect it to) correctly parse this \"sentence\". It is thus important that it does not try to be smart and just returns the tokens. \"95\" is obviously a number, in no instance should it be joined to a noun if the join-names option is not given."
    email: phase.of.matter@gmail.com
    modified: "2013-06-18T17:38:07.353405Z"
    number: "14190417"
    number_intvalue: 14190417
    originated: 18-Jun-2013 01:34 PM
    parent_number: '&{NULL_VALUE}'
    product: "10.9"
    product_version: 13A476u
    reproducible: Always
    resolved: ""
    status: Open
    title: NSLinguisticTagger fails to separate numbers from nouns
