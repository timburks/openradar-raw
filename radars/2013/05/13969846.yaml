apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13969846"
    labels:
        datastore_id: "3043403"
data:
    classification: serious
    created: "2013-05-29T12:53:16.34081Z"
    description: "Summary:\r\n\r\nall OS X locales that use UTF-8 encoding share the same LC_COLLATE and LC_CTYPE facet:\r\n../la_LN.US-ASCII/LC_COLLATE\r\n../UTF-8/LC_CTYPE\r\nThat means there is no language/country-specific sorting for these locales possible. For example, in C++ programs that use the std::locale class. For de_DE.ISO8859-1 for example, a specific german sorting facet is available and works (but different from Windows and Linux)\r\n\r\nSteps to Reproduce:\r\nOne can observe the deficit with the following command:\r\nls -l /usr/share/locale/*.UTF-8/*LC_C*\r\n\r\nExpected Results:\r\nindividual category implementations for the different UTF-8 locales so that sorting and character categorization works\r\n\r\nActual Results:\r\nOnly .ISO8859-* seem to work for german locales.\r\n\r\nRegression:\r\n\r\nNotes:\r\nThere is another bug in Apples GCC C++ library libstdc++ that only allows to instantiate std::locale with the locales \"C\" and \"POSIX\".  \r\n\r\nNote:\r\nCan not access the duplicate bug.... so no idea what happens with UTF-8 locales..."
    email: sommerlad.peter@gmail.com
    modified: "2013-05-29T12:53:16.340988Z"
    number: "13969846"
    number_intvalue: 13969846
    originated: 23-May-2013
    parent_number: '&{NULL_VALUE}'
    product: mac os x
    product_version: 10.8.3 and earlier
    reproducible: yes
    resolved: ""
    status: duplicate of 3655262
    title: All Locales *.UTF-8 broken wrt LC_COLLATE/LC_CTYPE
