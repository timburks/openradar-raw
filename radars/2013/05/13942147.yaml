apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13942147"
    labels:
        datastore_id: "3011407"
data:
    classification: UI/Usability
    created: "2013-05-20T22:27:45.276844Z"
    description: "Summary:\r\nWhen navigating away from a view with a long scrollview with direct subviews of that scrollview, then returning to it, the view will offset its contents by 1/2 the contentOffset property on Retina devices, and the full contentOffset on non-retina devices. \r\n\r\nSteps to Reproduce: \r\n- Create a view using autolayout with a scrollview that is longer than the screen. \r\n- Scroll down a bit. \r\n- Move to a new view controller. \r\n- Go back to initial view controller, note that your views are all now offset by 1/2 the amount \r\n\r\nExpected Results:\r\n- Returning to a view will not cause its contents to offset even if using direct subviews of a scrollview\r\n\r\nActual Results:\r\n- Contents are offset in an unacceptable and unexpected fashion. \r\n\r\n\r\nRegression:\r\nThis behavior was not present prior to the introduction of AutoLayout. \r\n\r\nNotes:\r\nThis behavior does not occur if using a containing UIView for your scrollView Subviews.\r\n\r\nThis is happening somewhere between when viewWillAppear and viewDidLayoutSubviews are called in the ViewController. If we save the content offset  to a property in viewWillAppear: then reset it to CGPointZero, then in viewDidLayoutSubviews put it back to the previous offset, the view behaves as expected. \r\n\r\nI included a sample project that reproduces this behavior and has a block of code you can uncomment to see the workaround. [Openradar note: email designated nerd at gmail dot com if you want a copy]\r\n\r\n\r\n[NOTE: 5/28/13: Just received an email from Apple informing me this is being closed as a dupe and is being tracked under bug #12523345 - file more dupes if you want them to fix it!]"
    email: designatednerd@gmail.com
    modified: "2013-05-28T20:45:56.036917Z"
    number: "13942147"
    number_intvalue: 13942147
    originated: 5/20/13
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 6.0+
    reproducible: Always
    resolved: Duplicate
    status: Duplicate
    title: Autolayout + Scrollview Subviews + Scrollview Content Offset = Sad View
