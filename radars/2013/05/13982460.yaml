apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13982460"
    labels:
        datastore_id: "3031401"
data:
    classification: Serious Bug
    created: "2013-05-24T14:38:33.330894Z"
    description: "Summary:\r\nIf a Core Data stack is set with the options NSSQLitePragmasOption: @{@\"journal_mode\": @\"WAL\"} and you need to run a migration that requires a Migration Manager, the resulting database will be corrupted and unreadable by Core Data.\r\n\r\nSteps to Reproduce:\r\n1. Create a project using the Core Data template.\r\n2. Change the initialization to include these parameters when adding the NSPersistentStore\r\n    NSDictionary *options = @{NSMigratePersistentStoresAutomaticallyOption:@YES,\r\n                              NSInferMappingModelAutomaticallyOption:@YES,\r\n                              NSSQLitePragmasOption: @{@\"journal_mode\": @\"WAL\"}\r\n                              };\r\n3. Run the app and add some records.\r\n4. Add a new model version.\r\n5. Add a new migration that uses a Migration Manager, and code it.\r\n6. Run the new app.\r\n\r\nExpected Results:\r\nPerfectly functional app with migrated data.\r\n\r\nActual Results:\r\nEmpty DB and the app doesn't work any longer (can't add new records)\r\n\r\nNotes:\r\nI'm attaching a sample project. In there you can see four folders:\r\n- v1: Initial version, almost as generated by the Xcode template.\r\n- v1-Documents: The SQLite DB copied from the simulator after running the app.\r\n- v2: A failing version of the app.\r\n- v2-Workaround: A workaround that sets the journal_mode to DELETE, migrates, and reverts to WAL afterwards."
    email: pbendersky@gmail.com
    modified: "2013-05-24T14:38:33.33103Z"
    number: "13982460"
    number_intvalue: 13982460
    originated: 24-May-2013
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "6.1"
    reproducible: ""
    resolved: ""
    status: Open
    title: Core Data - Migration Manager fails with journal_mode = WAL
