apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "15544314"
    labels:
        datastore_id: "5283281146740736"
data:
    classification: Crash
    created: "2013-11-25T00:38:14.774374Z"
    description: "Summary:\r\nCreating an attributed string with a long string of arabic text and setting a paragraph style on it will crash when assigned to  UITextView's attributedString\r\n\r\nSteps to Reproduce:\r\n1. Create a string: @\"حلقتنا مدحوشة ننتندو اليوم، نسير معهم على Wind Waker HD و The Wonderful 101 ورأي عام على الجهاز بعد شوية وقت معه، عصام ياخذنا للمحكمة مع Ace Attorney: Duale Destinies للعدس ويزيد والداوود مع رحلة في صميم الطفولة ويّا Pokemon X & Y.\";\r\n\r\n2. Give it a paragraph style with NSTextAlignmentJustified (there are other combinations of styles that cause the crash, this is just the easiest to reproduce. I suspect the issue occurs when the text view breaks the line on a particular glyph)\r\n\r\n3. Set it to a UITextView that is on the screen.\r\n\r\nExpected Results:\r\nThe text should be rendered.\r\n\r\nActual Results:\r\nThe app crashes with this backtrace:\r\n\r\n* thread #1: tid = 0x489055, 0x058b68c4 UIFoundation`_NSGlyphTreeGetCGGlyphsInRange + 1303, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=2, address=0x8)\r\n    frame #0: 0x058b68c4 UIFoundation`_NSGlyphTreeGetCGGlyphsInRange + 1303\r\n    frame #1: 0x058fa7b7 UIFoundation`-[NSLayoutManager getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:] + 82\r\n    frame #2: 0x0593348b UIFoundation`-[NSTypesetter getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:] + 118\r\n    frame #3: 0x058ddb6e UIFoundation`-[NSATSLineFragment saveWithGlyphOrigin:] + 5232\r\n    frame #4: 0x058d1d2b UIFoundation`-[NSATSTypesetter _layoutLineFragmentStartingWithGlyphAtIndex:characterIndex:atPoint:renderingContext:] + 5992\r\n    frame #5: 0x058d26d6 UIFoundation`-[NSATSTypesetter layoutParagraphAtPoint:] + 163\r\n    frame #6: 0x059318c5 UIFoundation`-[NSTypesetter _layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:maxCharacterIndex:nextGlyphIndex:nextCharacterIndex:] + 4461\r\n    frame #7: 0x05932e6f UIFoundation`-[NSTypesetter layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:] + 259\r\n    frame #8: 0x058d3161 UIFoundation`-[NSATSTypesetter layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:] + 513\r\n    frame #9: 0x058bd40e UIFoundation`-[NSLayoutManager(NSPrivate) _fillLayoutHoleForCharacterRange:desiredNumberOfLines:isSoft:] + 1266\r\n    frame #10: 0x058c475e UIFoundation`_NSFastFillAllLayoutHolesForGlyphRange + 1632\r\n    frame #11: 0x058f9bc2 UIFoundation`-[NSLayoutManager ensureLayoutForGlyphRange:] + 31\r\n    frame #12: 0x011ffe13 UIKit`-[_UITextContainerView _ensureLayoutCompleteForRect:withExtensionFactor:minimumExtensionDistance:repetitions:] + 527\r\n    frame #13: 0x011ffeaa UIKit`-[_UITextContainerView _ensureLayoutCompleteForRect:withExtension:] + 96\r\n    frame #14: 0x011ff743 UIKit`__33-[_UITextContainerView drawRect:]_block_invoke + 118\r\n    frame #15: 0x05921f18 UIFoundation`-[NSTextStorage coordinateReading:] + 51\r\n    frame #16: 0x011ff69b UIKit`-[_UITextContainerView drawRect:] + 314\r\n    frame #17: 0x00b79e56 UIKit`-[UIView(CALayerDelegate) drawLayer:inContext:] + 504\r\n    frame #18: 0x008d0d19 QuartzCore`-[CALayer drawInContext:] + 123\r\n    frame #19: 0x058f1d18 UIFoundation`-[_UITextTiledLayer drawDirtyLayer:intoContext:] + 171\r\n    frame #20: 0x058f1bbb UIFoundation`-[_UITileLayer drawInContext:] + 64\r\n    frame #21: 0x008d0c4a QuartzCore`backing_callback(CGContext*, void*) + 96\r\n    frame #22: 0x007c092c QuartzCore`CABackingStoreUpdate_ + 2656\r\n    frame #23: 0x008d0be2 QuartzCore`___ZN2CA5Layer8display_Ev_block_invoke + 93\r\n    frame #24: 0x00904fbf QuartzCore`x_blame_allocations + 15\r\n    frame #25: 0x008d0a4d QuartzCore`CA::Layer::display_() + 1519\r\n    frame #26: 0x008d0c99 QuartzCore`-[CALayer _display] + 33\r\n    frame #27: 0x008d0456 QuartzCore`CA::Layer::display() + 144\r\n    frame #28: 0x008d0c73 QuartzCore`-[CALayer display] + 33\r\n    frame \r\n\r\nVersion:\r\niOS 7.1, Xcode 5.1\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nHappens on simulator and on devices.\r\n\r\nAttachments:\r\n'TextViewCrash.zip' was successfully uploaded."
    email: padraig.kennedy@gmail.com
    modified: "2014-07-31T16:23:13.647619Z"
    number: "15544314"
    number_intvalue: 15544314
    originated: 24 November 2013
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "7.1"
    reproducible: Always
    resolved: 03-Jun-2014
    status: Closed
    title: Arabic text crashes in UITextView when line wrapped.
