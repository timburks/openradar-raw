apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13555259"
    labels:
        datastore_id: "2878411"
data:
    classification: Serious Bug
    created: "2013-04-02T10:29:47.4994Z"
    description: "This is a duplicate of rdar://13501851\r\nThis is a duplicate of rdar://12377282\r\n\r\nDuplicated description below.\r\n\r\nAccording to my records, the bug was introduced in iOS 6.0 and fixed in iOS 6.0.1. It affects 100% of the devices running iOS 6.0.\r\nThis is a huge deal for us should the App Store review team really enforce rejections based on the usage of uniqueIdentifier!\r\n\r\n\r\n26-Sep-2012 07:31 PM Lukas Zeller:\r\nSummary:\r\n\r\nthe new iOS API to obtain a vendor specific unique ID, the \"identifierForVendor\" method of UIDevice, returns a non-unique ID of 00000000-0000-0000-0000-000000000000 on some devices.\r\n\r\nSteps to Reproduce:\r\n\r\n  UIDevice *theDevice = [UIDevice currentDevice];\r\n  NSUUID *ifv = [theDevice identifierForVendor];\r\n  NSString *deviceID = [ifv UUIDString];\r\n  NSLog(deviceID);\r\n\r\nExpected Results:\r\n\r\nAn unique identifier for the device/vendor combination\r\n\r\nActual Results:\r\n\r\nOn some devices this returns a completely bogus ID of\r\n\r\n  00000000-0000-0000-0000-000000000000\r\n\r\nTwo of my own devices (an iPhone4 and a iPhone4S) are affected, another (a iPad 3rd Gen) is not.\r\n\r\nIn the few hours since I detected this problem (which has catastrophic consequences for my customers, see below) I have collected logs from 5 customers from all over the world, with iPhones and iPads which exhibit the same behaviour.\r\n\r\nThe behaviour is 100% reproducible on affected devices, among different apps (my real apps and the test app as attached to this bug report)\r\n\r\nRegression:\r\n\r\nno reliable device identifier in iOS - UUID is deprecated and identifierForVendor seems severely unreliable.\r\n\r\nNotes:\r\n\r\nI created a minimal app to test the behaviour.\r\n\r\nThis is catastropic for apps like mine, which implement a open protocol which MANDATES a unique device identifier (SyncML in my case). Non-unique IDs may mess up data on the server side.\r\n\r\nI am hugely disappointed as the switch from UDID to identifierForVendor has cost me and especially my customers a lot of headake already, because a device which changed ID is not something the designers of the SyncML standard thought would happen. But widespread collision of IDs is really disastrous!!! \r\n\r\n26-Sep-2012 07:31 PM Lukas Zeller:\r\n'identifierForVendor000000000000000.zip' was successfully uploaded\r\n(For openRadar: get the sample app here: http://www.plan44.ch/downloads/identifierForVendor000000000000000.zip"
    email: futuretap@googlemail.com
    modified: "2018-02-22T15:09:04.16236Z"
    number: "13555259"
    number_intvalue: 13555259
    originated: 02-Apr-2013 12:29 PM
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: "6.0"
    reproducible: Always
    resolved: ""
    status: Duplicate/13501851/Closed
    title: identifierForVendor returns 00000000-0000-0000-0000-000000000000 on all iOS 6.0 devices
