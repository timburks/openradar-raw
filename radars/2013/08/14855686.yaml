apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14855686"
    labels:
        datastore_id: "5311001939410944"
data:
    classification: Enhancement
    created: "2013-08-28T13:11:55.056066Z"
    description: "Summary:\r\nAdding autocompletion placeholders for assignment of variables and properties a la the ones provided for parameters would be a huge improvement to the convenient assignment of block literals.\r\n\r\nFor example, NSOperation’s completionBlock is a straightforward void(^)(void) block type. I would like to have Xcode insert a placeholder for that type when I’m assigning to that property such that, on hitting return, it would expand into a block literal of that type (with the same behaviour that it has for block parameters).\r\n\r\nGiven a scope with NSOperation *operation defined for it, I would like typing this:\r\n\r\noperation.completionBlock =\r\n\r\n…to result in Xcode offering me a placeholder for the assigned type, in the manner of other autocompletion-provided placeholders. I could ignore it by simply continuing to type, but hitting return would accept the placeholder, and select it (as it does with the first placeholder in autocompleted messages). Hitting return again, while the placeholder is selected, would replace the placeholder with a block literal of that type. (For non-block types, the placeholder would presumably be replaced with its contents, as with other placeholders, including autocompletion-provided ones and snippet-provided ones.)\r\n\r\n(I’m not so stuck on the details of this interaction, but it would seem to be consistent with the autocompletion of method invocations, function calls, and their parameters, which is appealing.)\r\n\r\n\r\nIllustrating this further (using | to indicate the caret, and |…| to indicate selection):\r\n\r\n1.`operation.completionBlock = |` — User has typed the beginning of an assignment expression, and Xcode offers autocompletion of the type of the property or variable being assigned to.\r\n\r\n2. `operation.completionBlock = |<#^(void)block#>|` — User has accepted the suggested autocompletion, inserting the placeholder. Xcode has selected the inserted placeholder.\r\n\r\n3. `operation.completionBlock = ^{\r\n    |<#code#>|\r\n}` — User has pressed return to expand the placeholder into a block literal. Xcode has inserted the literal, including inserting and selecting the placeholder for the body of the block literal. (This is how Xcode behaves when inserting a block literal as the parameter of e.g. `[operation setCompletionBlock:|<#^(void)block#>]`.)\r\n\r\n4. `operation.completionBlock = ^{\r\n    NSLog(@\"Thanks, Xcode!\");\r\n}` — User writes their code, and rejoices.\r\n\r\n\r\nI would like the same functionality to apply to any assignment using the = operator, including variables and properties of any scope, type, storage, etc.\r\n\r\n\r\nSteps to Reproduce:\r\nN/A\r\n\r\nExpected Results:\r\nN/A\r\n\r\nActual Results:\r\nN/A\r\n\r\nRegression:\r\nN/A\r\n\r\nNotes:\r\nThank you! You are wonderful people."
    email: rix.rob@gmail.com
    modified: "2013-08-28T13:11:55.056223Z"
    number: "14855686"
    number_intvalue: 14855686
    originated: 28-Aug-2013 09:10 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 5
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Autocompletion placeholders for assignment, particularly of block literals
