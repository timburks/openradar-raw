apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14845058"
    labels:
        datastore_id: "5663945171927040"
data:
    classification: Crash/Hang/Data Loss
    created: "2013-08-27T15:43:11.864353Z"
    description: "27-Aug-2013 11:42 AM Landon Fuller:\r\nSummary:\r\n\r\nIf one registers a task exception port handled by an in-process exception server for EXC_CRASH, the process will deadlock in the kernel (process stuck in uninterruptible wait) when a SIGABRT signal is delivered.\r\n\r\nSteps to Reproduce:\r\n\r\nRegister an in-process Mach exception server for EXC_CRASH, trigger SIGABRT(). The attached project contains a reproduction case.\r\n\r\nExpected Results:\r\n\r\nThe EXC_CRASH message is delivered to the in-process exception handler, execution continues.\r\n\r\nActual Results:\r\n\r\nThe process deadlocks in-kernel:\r\n\r\n  Thread 0xd2a7     DispatchQueue 1          priority 31\r\n  999 start + 1 (libdyld.dylib) [0x7fff89bf65fd]\r\n    999 main + 34 (main.m:13 in DeadLockExample) [0x10fcc3962]\r\n      999 NSApplicationMain + 940 (AppKit) [0x7fff84fd6783]\r\n        999 -[NSApplication run] + 553 (AppKit) [0x7fff8502c05c]\r\n          999 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 122 (AppKit) [0x7fff85033dcb]\r\n            999 _DPSNextEvent + 1026 (AppKit) [0x7fff850345e6]\r\n              999 AEProcessAppleEvent + 56 (HIToolbox) [0x7fff8e278dcf]\r\n                999 aeProcessAppleEvent + 315 (AE) [0x7fff8f49c446]\r\n                  999 dispatchEventAndSendReply(AEDesc const*, AEDesc*) + 31 (AE) [0x7fff8f49c582]\r\n                    999 aeDispatchAppleEvent(AEDesc const*, AEDesc*, unsigned int, unsigned char*) + 381 (AE) [0x7fff8f49c76f]\r\n                      999 _NSAppleEventManagerGenericHandler + 106 (Foundation) [0x7fff8c031d7d]\r\n                        999 -[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] + 294 (Foundation) [0x7fff8c031f0a]\r\n                          999 -[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] + 242 (AppKit) [0x7fff85037fab]\r\n                            999 -[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] + 570 (AppKit) [0x7fff85038496]\r\n                              999 -[NSApplication _sendFinishLaunchingNotification] + 195 (AppKit) [0x7fff85039eae]\r\n                                999 -[NSApplication _postDidFinishNotification] + 289 (AppKit) [0x7fff8503a18b]\r\n                                  999 -[NSNotificationCenter postNotificationName:object:userInfo:] + 68 (Foundation) [0x7fff8c0181fa]\r\n                                    999 _CFXNotificationPost + 3203 (CoreFoundation) [0x7fff8b66f393]\r\n                                      999 -[DLAppDelegate applicationDidFinishLaunching:] + 39 (DLAppDelegate.m:48 in DeadLockExample) [0x10fcc3bb7]\r\n                                        999 -[DLAppDelegate triggerDeadlock] + 421 (DLAppDelegate.m:42 in DeadLockExample) [0x10fcc3b55]\r\n                                          999 abort + 125 (libsystem_c.dylib) [0x7fff8ec3fbba]\r\n                                            999 __pthread_kill + 10 (libsystem_kernel.dylib) [0x7fff89e47866]\r\n                                             *999 return_from_trap + 178 (mach_kernel) [0xffffff80002f34f2]\r\n                                               *999 i386_astintr + 35 (mach_kernel) [0xffffff80002dc7e3]\r\n                                                 *999 ast_taken + 187 (mach_kernel) [0xffffff8000220a6b]\r\n                                                   *999 bsd_ast + 807 (mach_kernel) [0xffffff80005df6c7]\r\n                                                     *999 postsig_locked + 1037 (mach_kernel) [0xffffff80005df34d]\r\n                                                       *999 exit1_internal + 662 (mach_kernel) [0xffffff80005cb9d6]\r\n                                                         *999 proc_prepareexit + 135 (mach_kernel) [0xffffff80005cbaa7]\r\n                                                           *999 task_exception_notify + 64 (mach_kernel) [0xffffff8000224070]\r\n                                                             *999 exception_triage + 117 (mach_kernel) [0xffffff8000223f75]\r\n                                                               *999 exception_deliver + 758 (mach_kernel) [0xffffff8000223e26]\r\n                                                                 *999 mach_exception_raise + 158 (mach_kernel) [0xffffff800025d0be]\r\n                                                                   *999 mach_msg_rpc_from_kernel_body + 252 (mach_kernel) [0xffffff8000226fcc]\r\n                                                                     *999 ipc_mqueue_receive + 66 (mach_kernel) [0xffffff8000216832]\r\n                                                                       *999 thread_block_reason + 204 (mach_kernel) [0xffffff8000235c7c]\r\n                                                                         *999 ??? (mach_kernel + 223355) [0xffffff800023687b]\r\n                                                                           *999 machine_switch_context + 354 (mach_kernel) [0xffffff80002d81e2]\r\n                                                                             *999 <suspended>\r\n\r\n\r\n27-Aug-2013 11:42 AM Landon Fuller:\r\n'DeadLockExample-2.zip' was successfully uploaded"
    email: landon.j.fuller@gmail.com
    modified: "2013-08-27T15:43:11.8645Z"
    number: "14845058"
    number_intvalue: 14845058
    originated: 27-Aug-2013 11:42 AM
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: Registering for EXC_CRASH in-process triggers in-kernel deadlock
