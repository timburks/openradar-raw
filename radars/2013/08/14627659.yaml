apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14627659"
    labels:
        datastore_id: "5642556234792960"
data:
    classification: UI/Usability
    created: "2013-08-02T01:02:59.669904Z"
    description: "Summary:\nUsing a UIPercentDrivenInteractiveTransition that conforms to the UIViewControllerAnimatedTransitioning protocol does not animate smoothly after calling finishInteractiveTranstion or cancelInteractiveTransition when presenting a modal view controller when using the [UIView animateWithDuration:[self transitionDuration:transitionContext] delay:0 options:0 animations completion] in animateTransition.\n\nSteps to Reproduce:\ncreate a custom UIPercentDrivenInteractiveTransition<UIViewControllerAnimatedTransitioning> object and use it from a modal view controller's transitioning delegate that will be presented with [_menuVC presentViewController:detailVC animated:YES completion:nil]; to drive a interactive transition from a pan gesture.  calling finishinteractivetransition or cancelinteractivetransition after the gesture is complete causes the view to finish animating instantly (either by returning to the original view controller or presenting the new view controller) instead of smoothly finishing the transition.\n\nExpected Results:\nI would expect the animation to finish smoothly.\n\nActual Results:\nThe animation finishes instantly as if it were called with a presentViewController animated:NO call.\n\nRegression:\nI think beta 2 didn't have this problem, but its definitely been a bug since 7.0 beta 3\n\nNotes:\nANIMATE TRANSITION:\n- (void)animateTransition:(id<UIViewControllerContextTransitioning>)transitionContext {\n    UIViewController *menuVC = [transitionContext viewControllerForKey:UITransitionContextFromViewControllerKey];\n    UIViewController *detailVC = [transitionContext viewControllerForKey:UITransitionContextToViewControllerKey];\n    \n    UIView *transitionView = [transitionContext containerView];\n    UIView *detailView = detailVC.view;\n    UIView *menuView = menuVC.view;\n    \n    CGRect transitionRect = [transitionContext initialFrameForViewController:menuVC];\n    \n    CGRect detailStart = transitionRect;\n    detailStart.origin.x = CGRectGetWidth(transitionRect);\n    CGRect detailEnd = transitionRect;\n    detailView.frame = detailStart;\n    \n    CGRect menuStart = transitionRect;\n    CGRect menuEnd = transitionRect;\n    menuEnd.origin.x = -1 * (CGRectGetWidth(transitionRect) / 4);\n    menuView.frame = menuStart;\n    \n    [transitionView addSubview:menuView];\n    [transitionView insertSubview:detailView\n                     aboveSubview:menuView];\n    \n    [UIView animateWithDuration:[self transitionDuration:transitionContext] delay:0 options:0 animations:^{\n        \n        detailView.frame = detailEnd;\n        menuView.frame = menuEnd;\n        \n    } completion:^(BOOL finished) {\n        \n        BOOL completeTransition = !([transitionContext transitionWasCancelled]);\n        [transitionContext completeTransition:completeTransition];\n        \n    }];\n}\n\nTRANSITION OUTLET:\n- (IBAction)transitionGestureChanged:(UIPanGestureRecognizer *)sender {\n    \n    if ([sender state] == UIGestureRecognizerStateBegan) {\n        _startPosX = [sender locationInView:sender.view].x;\n        _isInteractive = YES;\n        \n        UIViewController *detailVC = [_menuVC.storyboard instantiateViewControllerWithIdentifier:_menuVC.currentDetailViewIdent];\n        [_menuVC presentViewController:detailVC animated:YES completion:nil];\n    }\n    else if ([sender state] == UIGestureRecognizerStateChanged) {\n        CGFloat locationInContainerView = [sender locationInView:[[_menuVC transitionCoordinator] containerView]].x;\n        if (fabsf(_startPosX) == 0) {\n            _startPosX = locationInContainerView;\n        }\n        else {\n            CGFloat percentComplete = (_startPosX - locationInContainerView) / 300;\n            percentComplete = MAX(0, percentComplete);\n            percentComplete = MIN(1, percentComplete);\n            [self updateInteractiveTransition:percentComplete];\n        }\n    }\n    else {\n        _startPosX = 0;\n        _isInteractive = NO;\n        \n        if ([sender velocityInView:sender.view].x < 0) {\n            [self finishInteractiveTransition];\n        }\n        else {\n            [self cancelInteractiveTransition];\n        }\n    }\n}"
    email: Jake.Kirshner@gmail.com
    modified: "2013-08-02T01:02:59.670037Z"
    number: "14627659"
    number_intvalue: 14627659
    originated: 01-Aug-2013 07:02 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 7.0b4
    reproducible: Always
    resolved: ""
    status: Open
    title: UIPercentDrivenInteractiveTransition cancel does not finish/cancel animation smoothly when presenting a modal view controller
