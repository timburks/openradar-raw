apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "15612154"
    labels:
        datastore_id: "5909516906397696"
data:
    classification: Serious Bug
    created: "2013-12-08T02:43:22.128776Z"
    description: "Summary:\r\nWhen using a FRC with a section key path, the results when fetching against a child context are sometimes surprising\r\n\r\nSteps to Reproduce:\r\nApp Delegate's child managed object context save operation causes managed objects to be saved into it's parent managed object context (colloquially referred to as \"pushing saves up one level\"). However, if the parent managed object context does not persist these objects to disk (meaning: parentContext.hasChanges == YES), thereby obtaining permanent object IDs, then the fetched results controller does not create sections based on the keypath passed at initialization.\r\n\r\n I believe this has *something* to do with Key-Value Coding. Overriding -[NSManagedObject valueForKeyPath:] yields the following interesting backtrace when the fetched results controller fetches on a dirty managed object context that is directly connected to a persistent store coordinator:\r\n\r\n frame #0:  FetchedResultsController`-[FHKEvent valueForKeyPath:](self=0x08c7dd90, _cmd=0x012a5b93, keyPath=0x00005888) + 57 at FHKEvent.m:15\r\n frame #1:  CoreData`-[NSFetchedResultsController(PrivateMethods) _sectionNameForObject:] + 50\r\n frame #2:  CoreData`-[NSFetchedResultsController(PrivateMethods) _computeSectionInfo:error:] + 1151\r\n frame #3:  CoreData`-[NSFetchedResultsController performFetch:] + 1021\r\n frame #4:  FetchedResultsController`-[FHKViewController fetchedResultsController](self=0x08a9ef70, _cmd=0x000043e8) + 700 at FHKViewController.m:39\r\n frame #5:  FetchedResultsController`-[FHKViewController numberOfSectionsInTableView:](self=0x08a9ef70, _cmd=0x00998b00, tableView=0x09295000) + 78 at FHKViewController.m:78\r\n frame #6:  UIKit`-[UITableViewRowData(UITableViewRowDataPrivate) _updateNumSections] + 102\r\n frame #7:  UIKit`-[UITableViewRowData invalidateAllSections] + 69\r\n frame #8:  UIKit`-[UITableView _updateRowData] + 194\r\n frame #9:  UIKit`-[UITableView _ensureRowDataIsLoaded] + 45\r\n frame #10:  UIKit`-[UITableView numberOfSections] + 35\r\n frame #11:  UIKit`-[UITableViewController viewWillAppear:] + 103\r\n --snip--\r\n\r\nHowever, when the fetched results controller fetches on a \"clean\" child  (hasChanges == NO) of a dirty parent context (that parent context dirtied  by a save pushing changes up), -[NSManagedObject valueForKeyPath:] isn't called after -[NSFetchedResultsController _computeSectionInfo:error:]. -[NSFetchedResultsController _sectionNameForObject:] isn't called at all in this situation.\r\n\r\nProject:\r\nhttps://github.com/evandelaney/AppleBug-15612154"
    email: evan@thinkfishhook.com
    modified: "2013-12-08T02:43:22.128923Z"
    number: "15612154"
    number_intvalue: 15612154
    originated: 07-Dec-2013 09:35 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 7.0.4
    reproducible: Always
    resolved: ""
    status: Open
    title: NSFetchedResultsController section key paths in nested Managed Object Contexts
