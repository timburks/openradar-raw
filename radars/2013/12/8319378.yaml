apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8319378"
    labels:
        datastore_id: "5809968154411008"
data:
    classification: ""
    created: "2013-12-08T03:55:01.566499Z"
    description: "Summary:\r\n\r\npeter-krakers-mac-mini:unreal binki$ /bin/expr X--enable-permissions=0660 : '[^=]*\\(.*\\)'\r\n=0660\r\npeter-krakers-mac-mini:unreal binki$ /bin/expr X--enable-permissions=0660 : '[^=]*=\\(.*\\)'\r\n660\r\n\r\nAccording to the manpage expr(1):\r\n     The expr utility conforms to IEEE Std 1003.2 (``POSIX.2'').\r\n\r\nAccording to the POSIX manpage for expr(1p):\r\n   Matching Expression\r\n       The  ':'  matching  operator shall compare the string resulting from the evaluation of expr1 with the regular expression pattern resulting from the evaluation of expr2. Regular expression syntax shall be that defined in the Base Definitions\r\n       volume of IEEE Std 1003.1-2001, Section 9.3, Basic Regular Expressions, except that all patterns are anchored to the beginning of the string (that is, only sequences starting at the first character of a string are  matched  by  the  regular\r\n       expression)  and,  therefore,  it is unspecified whether '^' is a special character in that context. Usually, the matching operator shall return a string representing the number of characters matched ( '0' on failure). Alternatively, if the\r\n       pattern contains at least one regular expression subexpression \"[\\(...\\)]\", the string corresponding to \"\\1\" shall be returned.\r\n\r\n\r\n\r\nExpected output from a more conformant expr:\r\n\r\nohnobinki@ohnopublishing ~/unreal.0 $ /bin/expr X--enable-permissions=0660 : '[^=]*=\\(.*\\)'\r\n0660\r\n\r\n\r\nIt is quite obvious that the expression does _not_ ask for the `0' to be removed. In certain contexts, such as C code, leading zeroes are of great significance. For example, this causes problems when building unrealircd on Mac OSX: http://bugs.unrealircd.org/view.php?id=3189\r\n\r\n\r\n----\r\n\r\n\r\nApple Developer Relations 26-Jul-2012 06:19 PM\r\n\r\n\r\nWe believe this issue has been addressed in OS X 10.8.\r\n\r\n\r\n----\r\n\r\nAnd I have just verified that this is fixed in OS X 10.9 userspace."
    email: ohnobinki@gmail.com
    modified: "2013-12-08T03:55:01.566624Z"
    number: "8319378"
    number_intvalue: 8319378
    originated: "2010-08-17"
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: 10.5.8
    reproducible: ""
    resolved: "2012-07-26"
    status: Closed
    title: expr(1) claims to be POSIX compliant but isn't
