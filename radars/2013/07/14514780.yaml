apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14514780"
    labels:
        datastore_id: "3180408"
data:
    classification: Feature (New)
    created: "2013-07-22T22:21:59.485683Z"
    description: "Summary: \r\n\r\nNibs are great. They're an excellent way to visualize your UI, and to make minor changes such as element positions or text fonts. However, it's also so easy to change an element via code, and then later forget about it. This leads to several frustrating build and run cycles trying to figure out what's happening, when clearly the Nib shows you've done everything correctly. If there was an optional attribute in Interface Builder to make it so classes cannot modify the object, *so* many of these issues could be resolved. This is especially important in shared code-bases. Someone may modify the Nib, while another person makes another adjustment in code which counteracts the Nib change.\r\n\r\nSteps to Reproduce:\r\n\r\nCreate a single-view app. Open the storyboard, add a subview,  and give it whatever frame you want (you're the one who has to fix these bugs, so have some fun with it! Oh, and pretty background colors can't hurt.) Now, create some obscurely named method like\r\n\r\n- (void)thisMethodDoesAbsolutelyNoInterfaceAdjustmentsIPromise\r\n\r\nand naturally put in some layout adjustment code in here to change the view's frame. For bonus points, make the code practically impossible to find via search later such as:\r\n\r\nCGRect unrelatedRect = CGRectMake(0, 240.0f/7.0f, CGRectGetMidX(self.subview.bounds), 100);\r\nunrelatedRect.origin.x = 99; // Because why not?\r\n[self.subview setBounds:unrelatedRect]; // This can't possible backfire\r\n[self.subview setCenter:CGPointMake(17, 18)]; // Not even checking if this lines up on pixel boundaries or not!\r\n\r\nNow go get some coffee or write a book or something. It's ok, I'll wait.\r\n\r\nFinally, go back to your app several months later and try to figure out why the hell your subview isn't where it should be.\r\n\r\nExpected Results:\r\n\r\nWell, this is expected behavior, but it shouldn't be. Preferably a warning (or even an error) pops up saying \"self.subview cannot be modified from code\" or something.\r\n\r\nActual Results:\r\n\r\nAll kinds of hell results from this.\r\n\r\nRegression:\r\n\r\nCan't really think of something creative to put here, so I'll just let you pretend I did.\r\n\r\nNotes:\r\n\r\nSeriously, if you fixed this I would be forever in your debt. Plus I'll make a deal with you; if you give me a shout out at the next WWDC for coming up with this OMG AMAZING new feature, I promise to never use another private API. You can't get better than that from a developer :-)"
    email: rileytestut@gmail.com
    modified: "2013-07-22T22:21:59.485873Z"
    number: "14514780"
    number_intvalue: 14514780
    originated: 7/22/13
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: n/a
    reproducible: n/a
    resolved: ""
    status: Open
    title: Ability to "lock" elements via Interface Builder
