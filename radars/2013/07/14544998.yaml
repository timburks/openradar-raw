apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14544998"
    labels:
        datastore_id: "3210402"
data:
    classification: Serious Bug
    created: "2013-07-25T09:49:40.424615Z"
    description: "Summary:\r\n\r\nFor very large (long long) integers with more than 17 digits NSDecimalNumber will corrupt incorrectly when asked for a long long (or unsigned long long) representation, even if the number would normally fit in a long long without issue. For example this number: 348188955398766593\r\n\r\nSteps to Reproduce:\r\n\r\n\tNSDecimalNumber *num = [NSDecimalNumber decimalNumberWithString:@\"348188955398766593\"];\r\n\r\nExpected Results:\r\n\r\n\t(lldb) p (long long)[num longLongValue]\r\n\t(long long) $9 = 348188955398766593\r\n\r\n\t(lldb) p (unsigned long long)[num unsignedLongLongValue]\r\n\t(unsigned long long) $11 = 348188955398766593\r\n\r\nActual Results:\r\n\r\n\t(lldb) p (long long)[num longLongValue]\r\n\t(long long) $9 = 348188955398766592\r\n\r\n\t(lldb) p (unsigned long long)[num unsignedLongLongValue]\r\n\t(unsigned long long) $11 = 348188955398766592\r\n\r\nRegression:\r\n\r\nLack of precision when converting from NSDecimalNumber to long long integer.\r\n\r\nNotes:\r\n\r\nIt looks like NSDecimalNumber conversions to long long go via double, which has only 17 digits of precision. \r\n\r\nSee also this bug:\r\n\r\nhttps://github.com/stig/json-framework/pull/171"
    email: sbrautaset@gmail.com
    modified: "2013-07-25T09:49:40.424825Z"
    number: "14544998"
    number_intvalue: 14544998
    originated: 25-Jul-2013 10:47 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 6.1
    reproducible: Always
    resolved: ""
    status: Open
    title: NSDecimalNumber corruption when extracting valid long long ints
