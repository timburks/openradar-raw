apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "14199042"
    labels:
        datastore_id: "3114410"
data:
    classification: Enhancement
    created: "2013-07-12T02:53:59.198746Z"
    description: "Summary:\r\nUIColor's getRed:green:blue:alpha only works for UIDeviceRGBColorSpace but silently breaks for UIDeviceWhiteColorSpace colors.\r\n\r\nThis results in having to revert to the CoreGraphics function CGColorGetNumberOfComponents to check if 4 components are returned or 2, which adds branching and redundant condition checks.\r\n\r\nSteps to Reproduce:\r\nCreate a method that accepts a UIColor as an argument. Attempt to break apart the RGB color components by using UIColor getRed:green:blue:alpha. The method fails and returns false when the user passes a color of type UIDeviceWhiteColorSpace but works as expected for UIDeviceRGBColorSpace. This is a poor experience for users of this API.\r\n\r\nExpected Results:\r\nUIColor getRed:green:blue:alpha could and should create the RGB components based on a percentage of the white value. For example red = white * 1.0, green = white * 1.0, blue = white * 1.0. This would be extremely helpful and reduce code redundancy.\r\n\r\nActual Results:\r\nUIColor getRed:green:blue:alpha doesn't work when the UIColor object is a UIDeviceWhiteColorSpace color.\r\n\r\nRegression:\r\n\r\nNotes:"
    email: marksands07@gmail.com
    modified: "2013-07-12T02:53:59.198919Z"
    number: "14199042"
    number_intvalue: 14199042
    originated: 18-Jun-2013 08:47 PM
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: iOS 5.0
    reproducible: Always
    resolved: ""
    status: Open
    title: UIColor's getRed:green:blue:alpha should be color space agnostic
