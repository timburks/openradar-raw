apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "15077802"
    labels:
        datastore_id: "6422840123326464"
data:
    classification: ""
    created: "2013-09-25T17:04:16.069352Z"
    description: "Summary:\r\nI'm manually implementing shortcuts in my application, and when current layout is not ASCII-based, the shortcats won't trigger because I'm comparing the US key symbol.\r\n\r\nInternal NSEvent keyEvent data structure *has* an US character code, and it's stored in _data.key field.\r\n\r\nI'd like to be able to get it using a public method.\r\n\r\nSteps to Reproduce:\r\n1. Implement a custom shortcut handler that compares [NSEvent charactersIgnoringModifiers] to the predefined US characters. For example: Cmd+Q.\r\n2. User selects a Russian Keyboard layout, and presses Cmd+Й (Й is located on the same physical key as Q), and -[charactersIgnoringModifiers] shows \"й\" as the key pressed.\r\n3. The actual NSEvent data structure *does* have an US key code in the _data.key field, and if we use it directly for comparison, the shortcut will work.\r\n\r\nExpected Results:\r\n-[NSEvent charactersIgnoringModifiers] will return not only characters without modifiers, but also in a normalized ASCII layout. Or please provide a different method like -[NSEvent asciiCharactersIgnoringModifiers], this will do.\r\n\r\nActual Results:\r\nI can't implement shortcuts that work on international keyboards without resorting to dirty hacks.\r\n\r\nVersion:\r\nMac OS X 10.9 SDK.\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: mblsha@gmail.com
    modified: "2013-09-25T17:04:16.069567Z"
    number: "15077802"
    number_intvalue: 15077802
    originated: "2013-09-25"
    parent_number: '&{NULL_VALUE}'
    product: OS X SDK
    product_version: "10.9"
    reproducible: Always
    resolved: ""
    status: Open
    title: Provide public access to the NSEvent._data.key.keys field
