apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "13061608"
    labels:
        datastore_id: "2593402"
data:
    classification: Serious Bug
    created: "2013-01-22T18:12:06.499655Z"
    description: "Summary:\r\n-[NSAttributedString boundingRectWithSize:options:context:] completely ignores the width constraint from its 'size' parameter. The rectangle returned by this method is exactly as wide as needed to fit all text onto one single line and is as high as the height of one line of text.\r\n\r\nSteps to Reproduce:\r\n1) Create an attributed string:\r\n\r\nNSAttributedString *attributedString = [[NSAttributedString alloc] initWithString:@\"aldskjf asdklfh alskdjfhals dkfhjal kseuhfdjkls hfakl jsdhflk ajsdfhlkjasdh adjshfal jsdhfakl jsdhfakl sjdhfakl sjdhflkajds adjshzfkls djhfkl asjdhfl sakjdf\"];\r\n\r\n2) Call:\r\n\r\nCGRect rect = [attributedString boundingRectWithSize:CGSizeMake(230.0f, CGFLOAT_MAX) options:0 context:nil];\r\n\r\nExpected Results:\r\nThe rectangle is not wider than 230.0f.\r\n\r\nActual Results:\r\nThe rectangle is as wide as it needs to be to render all text on one single line.\r\n\r\nRegression:\r\nThe problem occurs as of iOS 6.0, in which this method has been introduced. Note that the problem also occurs when I use '1000.0f' instead of CGFLOAT_MAX, when I pass 'NSStringDrawingUsesFontLeading' to the options parameter or when the attributed string has attributes in place (which it hasn't in the example above).\r\n\r\nNotes:\r\nN/a."
    email: datwelk@gmail.com
    modified: "2013-01-22T18:12:47.541754Z"
    number: "13061608"
    number_intvalue: 13061608
    originated: 22-Jan-2013 07:09 PM
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: "6.0"
    reproducible: Always
    resolved: No
    status: Open
    title: -[NSAttributedString boundingRectWithSize:options:context:] ignores max width
