apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "15265608"
    labels:
        datastore_id: "6411067617968128"
data:
    classification: Crash/Hang/Data Loss
    created: "2013-10-18T21:06:01.505412Z"
    description: "I'm working on an application that does not use table cell reuse because we have another way of caching cell contents.\r\n\r\nHowever, starting with iOS 7, if a cell does not have a reuse identifier (i.e. its constructor was passed 'nil' for the 'reuseIdentifier'), a crash will occur when interacting with UITextFields.\r\n\r\nThe crash is reproducible 100% of the time when the table is large enough for some of the cells containing UITextFields to scroll offscreen.\r\n\r\n(A sample project is attached containing code that will trigger the crash.)\r\n\r\nSteps to Reproduce:\r\n1. Download and unzip the Xcode project files contained in the attachment to this ticket.\r\n\r\n2. Open the \"TableCellCrashScenario.xcodeproj\" project.\r\n\r\n3. Run the iPhone app in the simulator.\r\n\r\n4. Interact with some of the text fields on the screen by entering data.\r\n\r\n5. Scroll the text fields you've entered some information in offscreen.\r\n\r\n6. Attempt to click in one of the empty fields onscreen.\r\n\r\n7. If that does not crash the application, attempt to type into some more of the empty text fields. Repeat steps 5-7 until a crash occurs.\r\n\r\nI am able to cause the crash 100% of the time by repeating this process. The crash almost always occurs within the first 15 seconds or so of performing these steps.\r\n\r\nExpected Results:\r\nExpect that a crash would not occur.\r\n\r\nActual Results:\r\nA crash occurs both in the simulator and on device with a stack trace similar to:\r\n\r\n* thread #1: tid = 0x2de658, 0x014c80b2 libobjc.A.dylib`objc_msgSend + 14, queue = 'com.apple.main-thread, stop reason = EXC_BAD_ACCESS (code=1, address=0x7000000c)\r\n    frame #0: 0x014c80b2 libobjc.A.dylib`objc_msgSend + 14\r\n    frame #1: 0x00385ec3 UIKit`-[UIResponder(Static) _setFirstResponder:] + 83\r\n    frame #2: 0x00385ead UIKit`-[UIResponder(Static) _setFirstResponder:] + 61\r\n    frame #3: 0x00385ead UIKit`-[UIResponder(Static) _setFirstResponder:] + 61\r\n    frame #4: 0x00385ead UIKit`-[UIResponder(Static) _setFirstResponder:] + 61\r\n    frame #5: 0x00385495 UIKit`-[UIResponder(Internal) _resignFirstResponder] + 41\r\n    frame #6: 0x00907acc UIKit`-[UITextField _resignFirstResponder] + 261\r\n    frame #7: 0x0038471e UIKit`-[UIResponder _finishResignFirstResponder] + 181\r\n    frame #8: 0x00384846 UIKit`-[UIResponder resignFirstResponder] + 288\r\n    frame #9: 0x00907894 UIKit`-[UITextField resignFirstResponder] + 118\r\n    frame #10: 0x00384550 UIKit`-[UIResponder becomeFirstResponder] + 347\r\n    frame #11: 0x00287d0b UIKit`-[UIView(Hierarchy) becomeFirstResponder] + 114\r\n    frame #12: 0x009070e3 UIKit`-[UITextField becomeFirstResponder] + 51\r\n    frame #13: 0x005ac651 UIKit`-[UITextInteractionAssistant(UITextInteractionAssistant_Internal) setFirstResponderIfNecessary] + 135\r\n    frame #14: 0x005aeba2 UIKit`-[UITextInteractionAssistant(UITextInteractionAssistant_Internal) oneFingerTap:] + 2640\r\n    frame #15: 0x005a2f8c UIKit`_UIGestureRecognizerSendActions + 230\r\n    frame #16: 0x005a1c00 UIKit`-[UIGestureRecognizer _updateGestureWithEvent:buttonEvent:] + 383\r\n    frame #17: 0x005a366d UIKit`-[UIGestureRecognizer _delayedUpdateGesture] + 60\r\n    frame #18: 0x005a6bcd UIKit`___UIGestureRecognizerUpdate_block_invoke + 57\r\n    frame #19: 0x005a6b4e UIKit`_UIGestureRecognizerRemoveObjectsFromArrayAndApplyBlocks + 317\r\n    frame #20: 0x0059d248 UIKit`_UIGestureRecognizerUpdate + 199\r\n    frame #21: 0x00269d4a UIKit`-[UIWindow _sendGesturesForEvent:] + 1291\r\n    frame #22: 0x0026ac6a UIKit`-[UIWindow sendEvent:] + 1030\r\n    frame #23: 0x0023ea36 UIKit`-[UIApplication sendEvent:] + 242\r\n    frame #24: 0x00228d9f UIKit`_UIApplicationHandleEventQueue + 11421\r\n    frame #25: 0x016be8af CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 15\r\n    frame #26: 0x016be23b CoreFoundation`__CFRunLoopDoSources0 + 235\r\n    frame #27: 0x016db30e CoreFoundation`__CFRunLoopRun + 910\r\n    frame #28: 0x016dab33 CoreFoundation`CFRunLoopRunSpecific + 467\r\n    frame #29: 0x016da94b CoreFoundation`CFRunLoopRunInMode + 123\r\n    frame #30: 0x036869d7 GraphicsServices`GSEventRunModal + 192\r\n    frame #31: 0x036867fe GraphicsServices`GSEventRun + 104\r\n    frame #32: 0x0022b94b UIKit`UIApplicationMain + 1225\r\n    frame #33: 0x000030ed TableCellCrashScenario`main(argc=1, argv=0xbfffeeb8) + 141 at main.m:16\r\n    frame #34: 0x01d71725 libdyld.dylib`start + 1\r\n\r\n\r\nVersion:\r\nXcode 5 (5A1413) running iOS 7.0 in the simulator (11A465) and iOS 7.0.2 on device (11A501).\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nCrash occurs on every simulator and device tested that runs any version of iOS 7.\r\n\r\nAttachments:\r\n'TableCellCrashScenario.zip' was successfully uploaded."
    email: emaloney@gilt.com
    modified: "2014-09-15T17:47:44.880366Z"
    number: "15265608"
    number_intvalue: 15265608
    originated: 10/18/2013
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "7.0"
    reproducible: Always
    resolved: 9/15/2014
    status: Open
    title: Crash occurs when interacting with UITextFields contained in UITableViewCells that do not use cell reuse
