apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "15233608"
    labels:
        datastore_id: "6660420534272000"
data:
    classification: Enhancement
    created: "2013-10-15T19:31:09.636857Z"
    description: "KVO is itself neither good nor bad, but in practice it's difficult due to a lack of safe expectations. Some APIs document properties that cannot be observed, others do not. The only current safe approach is to only KVO properties that are explicitly documented as supported and properties within your own code.\r\n\r\nI propose instead:\r\n\r\n@property (kvoable, nonatomic, strong) id foo;\r\n\r\nand\r\n\r\n@property (nonkvoable, atomic, weak) id bar;\r\n\r\nFirst and foremost, this would provide explicit documentation in code of what expectations are safe to make in terms of KVO. Furthermore, it allows for static and runtime checks to be added that would improve code quality across the board. Two easy examples: @dynamic properties can emit a warning when nonkvoable is not set and  (assuming kvoable is the default, which matches current behaviour), and the KVO mechanism itself can provide feedback at runtime if a property is improperly observed."
    email: numist@gmail.com
    modified: "2013-10-15T19:31:09.637039Z"
    number: "15233608"
    number_intvalue: 15233608
    originated: Tue Oct 15 12:30:18 PDT 2013
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Explicit KVO expectations as part of property declaration.
