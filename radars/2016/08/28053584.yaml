apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "28053584"
    labels:
        datastore_id: "4952178863112192"
data:
    classification: Serious Bug
    created: "2016-08-29T09:54:26.9182Z"
    description: "Summary:\r\nWhen using a typedef for a special configuration of a generic container such as NSDictionary, there are two variants to write the typedef:\r\nOne that hides the pointer nature — `typedef ExistingClass<Qualifiers> *Alias` —  and one that requires you to remain explicit about it — `typedef ExistingClass<Qualifiers> Alias`.\r\n\r\nThe second form allows you to use `Alias` just as if it was a regular Objective–C class (e.g. you’d still include the asterisk when you declare a variable, and writing`[foo isKindOfClass:[TYPEDEFD_THING class]];` compiles just fine).\r\nUnfortunately, if you choose this form, and declare a property of this type, this property is not KVC compliant, although it really should be.\r\n\r\nSteps to Reproduce:\r\nRun the unit tests of the attached sample project.\r\n\r\n\r\nExpected Results:\r\nThe test passes.\r\n\r\n\r\nActual Results:\r\nThe test fails because `valueForUndefinedKey:`/`setValue:forUndefinedKey:` get called when attempting to do KVC against the property that uses the typedef form which doesn’t mask the pointer nature."
    email: daniel@puppiesonacid.de
    modified: "2016-08-29T09:54:26.91837Z"
    number: "28053584"
    number_intvalue: 28053584
    originated: 29-Aug-2016 11:52 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-beta 6 (8S201h)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode/Clang: certain typedefs for Objective–C generics break KVC'
