apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "27906400"
    labels:
        datastore_id: "6721839338356736"
data:
    classification: ""
    created: "2016-08-18T16:02:46.41161Z"
    description: "Summary:\r\nIt does not appear possible to have a boolean test (e.g. in an if statement) to see if a Swift enum has a certain simple value, if the enum type has values with associated information.\r\n\r\nSteps to Reproduce:\r\nOpen the attached playground, which contains the code:\r\n\r\nenum Storm {\r\n    case Rain\r\n    case Tropical(String)\r\n}\r\n\r\nlet storm: Storm = .Rain\r\nif storm == .Rain {\r\n}\r\n\r\n\r\nExpected Results:\r\nThe code compiles\r\n\r\nActual Results:\r\nThe next to last line triggers a syntax error: \r\n\r\nBinary operator '==' cannot be applied to operands of type Storm and '_'\r\n\r\nVersion:\r\nVersion 8.0 beta 6 (8S201h)\r\n\r\nNotes:\r\nThe code gets a slightly different error, \"Binary operator '==' cannot be applied to operands of type Storm and Storm\", if the enum literal is fully qualified:\r\n\r\nenum Storm {\r\n    case Rain\r\n    case Tropical(String)\r\n}\r\n\r\nlet storm: Storm = .Rain\r\nif storm == Storm.Rain {\r\n}\r\n\r\nThe code compiles if there is no associated value, e.g.:\r\n\r\nenum Storm {\r\n    case Rain\r\n    case Tropical\r\n}\r\n\r\nlet storm: Storm = .Rain\r\nif storm == .Rain {\r\n}\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n'EnumAssociatedValue.playground.zip' was successfully uploaded."
    email: james.walter.matthews@gmail.com
    modified: "2016-08-18T16:02:59.74493Z"
    number: "27906400"
    number_intvalue: 27906400
    originated: 18-Aug-2016 11:59 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: 8.0 beta 6 (8S201h)
    reproducible: Yes
    resolved: ""
    status: Open
    title: Syntax error testing Swift 3 enum value
