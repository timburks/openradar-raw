apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "26977470"
    labels:
        datastore_id: "4570414789427200"
data:
    classification: Serious Bug
    created: "2016-06-23T17:59:17.22851Z"
    description: "Summary:\r\nUsing CloudKit with Swift 3, if you try to fetch all records from the database, using the fetchAll(_:) methods make the compiler choke because they're not correctly type-annotated.\r\n\r\nSteps to Reproduce:\r\n1. Instantiate an iCloud Database\r\n2. Try to fetch all Record Zones or Subscriptions from the database using the `fetchAll(_:)` methods.\r\n\r\n\r\nExpected Results:\r\nThe compiler correctly identifies which of the two methods you're using and infers the completionHandler's parameters types.\r\n\r\nActual Results:\r\nThe compiler doesn't know which `fetchAll` variant you're using, if either the one that fetches Record Zones or the one that fetches Subscriptions. You can fix it by explicitly declaring the parameters' type yourself:\r\n\r\ndb.fetchAll { (zones: [CKRecordZone]?, error) in\r\n    // ...\r\n}\r\n\r\nTo me, this is a clear example where the API design guidelines are not being respected, favoring brevity over clarity.\r\n\r\nVersion:\r\nXcode 8 b1"
    email: oscar@swanros.com
    modified: "2016-06-23T18:17:15.22101Z"
    number: "26977470"
    number_intvalue: 26977470
    originated: "2016-06-23"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: CloudKit's database fetchAll methods are missing annotations on Swift 3
