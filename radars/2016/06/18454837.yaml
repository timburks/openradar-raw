apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18454837"
    labels:
        datastore_id: "4959032020303872"
data:
    classification: UI/Usability
    created: "2016-06-30T15:34:20.27513Z"
    description: "Summary:\r\nWith FontDescriptorCascadeList being [A, B], after encountering one character that is not supported by font A but supported by font B, UITextView incorrectly continues using font B after that character even if the following characters are perfectly supported by font A and A is before B in FontDescriptorCascadeList.\r\n\r\nNotice: the text and fonts are all Chinese, so you'd better have a Chinese engineer to help. The zip file is large because I have to pack in the Chinese font.\r\n\r\nIn the sample app, font A is \"STKaiti-SC-Regular\", font B is \"STHeitiSC-Light\", the character that is supported by B but not A is \"⋯\", the character that is supported by both A and B is \"字\".\r\n\r\nIf rendered correctly, \"字\" should be the same before and after \"⋯\".\r\n\r\nThe 1st line is correctly rendered using Core Text.\r\nThe 2nd line is correctly rendered by UILabel.\r\nThe 3rd line is incorrectly rendered by UITextView. Notice \"字\" after \"⋯\" is not the same as the one before \"⋯\" because it is incorrectly using font \"STHeitiSC-Light\" instead of \"STKaiti-SC-Regular\".\r\n\r\nSteps to Reproduce:\r\n1. Launch sample app.\r\n2. Compare the three lines of text.\r\n3. Read the console log to see the incorrect attributed string of UITextView.\r\n\r\nExpected Results:\r\n \"字\" should be rendered exactly the same before and after \"⋯\".\r\n\r\nActual Results:\r\n\"字\" after \"⋯\" is not rendered the same as the one before \"⋯\"."
    email: an00na@gmail.com
    modified: "2016-06-30T15:34:20.27538Z"
    number: "18454837"
    number_intvalue: 18454837
    originated: 25-Sep-2014 10:34 AM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 10 beta 1
    reproducible: Always
    resolved: ""
    status: Open
    title: UITextView font bug
