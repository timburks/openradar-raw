apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "26909215"
    labels:
        datastore_id: "5051063908433920"
data:
    classification: ""
    created: "2016-06-21T04:14:11.63743Z"
    description: "Summary:\r\nAPFS should support data block integrity. It should be configurable just like encryption: None, Checksum, Parity. It should allow the user or system to mark certain directories with the highest integrity protection (e.g. Photo library) and others with none (caches, tmp, etc).\r\n\r\nChecksum would have a lower CPU/storage cost and detect (but not correct) data errors.\r\n\r\nParity would use an ECC to correct some errors, at the cost of greater CPU/storage.\r\n\r\nA scrubber process would be able to validate any blocks marked with data integrity when the device is connected to power and not otherwise busy.\r\n\r\nPractical real-world experience has shown storage subsystems are not as reliable as some would believe. It isn't even possible for Apple to have statistics on this because with HFS+ the corruption is silent (and silently propagated to backup devices and iCloud too). Even if the underlying storage systems perform parity checks that doesn't protect against driver bugs, memory errors, CPU cache bugs, or even other esoteric errata like cosmic ray strikes.\r\n\r\n\r\n\r\nhttp://indico.cern.ch/event/13797/contributions/1362288/attachments/115080/163419/Data_integrity_v3.pdf\r\n\r\nhttp://research.cs.wisc.edu/adsl/Publications/zfs-corruption-fast10.pdf\r\n\r\nSteps to Reproduce:\r\n\r\n\r\nExpected Results:\r\nAPFS should support data integrity\r\n\r\nActual Results:\r\n\r\n\r\nVersion:\r\nmacOS 10.12 Beta 1"
    email: xenadu@gmail.com
    modified: "2016-06-21T04:14:11.63761Z"
    number: "26909215"
    number_intvalue: 26909215
    originated: "2016-06-20"
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: "10.12"
    reproducible: ""
    resolved: ""
    status: Open
    title: APFS should support data block integrity
