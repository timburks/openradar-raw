apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "26881987"
    labels:
        datastore_id: "4974177417166848"
data:
    classification: ""
    created: "2016-06-19T16:01:38.39624Z"
    description: "The following Swift 2.2 code compiles under Swift 3, but will not link if Objective-C code attempts to reference it from another module:\r\n\r\nimport Foundation\r\npublic final class RNCryptor: NSObject {\r\n    @objc(RNEncryptor) public final class Encryptor: NSObject {}\r\n}\r\n\r\n...\r\n\r\n    [RNEncryptor new];\r\n\r\nThis compiles, but fails to link, generating the error:\r\n\r\nUndefined symbols for architecture x86_64:\r\n  \"_OBJC_CLASS_$_RNEncryptor\", referenced from:\r\n      objc-class-ref in ObjCTests.o\r\n\r\nNote that this symbol is missing, but the metaclass is available:\r\n\r\n$ nm TestImport | grep RNEncryptor\r\n00000000000022d0 D _OBJC_METACLASS_$_RNEncryptor\r\n\r\nWhen built using Xcode 7.3, both are included:\r\n\r\n$ nm TestImport | grep RNEncryptor\r\n00000000000022c0 S _OBJC_CLASS_$_RNEncryptor\r\n0000000000002348 D _OBJC_METACLASS_$_RNEncryptor\r\n\r\nSteps to Reproduce:\r\nCreate Swift module that exposes nested class to ObjC.\r\nCreate test case in ObjC that references that symbol\r\nLink\r\n\r\n\r\nExpected Results:\r\nShould build, link, and execute.\r\n\r\nActual Results:\r\nReturns undefined symbols\r\n\r\nVersion:\r\nVersion 8.0 beta (8S128d)\r\nOS X 10.11.5 (15F34)"
    email: robnapier@gmail.com
    modified: "2016-06-19T16:01:38.39644Z"
    number: "26881987"
    number_intvalue: 26881987
    originated: 19-Jun-2016 12:00 PM
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 8 beta
    reproducible: ""
    resolved: ""
    status: Open
    title: Nested Swift classes fail to link for Objective-C
