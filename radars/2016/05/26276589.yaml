apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "26276589"
    labels:
        datastore_id: "5059914091200512"
data:
    classification: Other Bug
    created: "2016-05-13T21:31:31.7379Z"
    description: "This is a duplicate of rdar://26276263\r\n\r\nSummary:\r\nItâ€™s currently very difficult to use CommonCrypto in Swift frameworks and scripts. The work-around solution is to define our own module map as outlined in the first suggestion in this dev forum post: https://forums.developer.apple.com/thread/36217\r\n\r\nSteps to Reproduce:\r\n1. Create Swift file sample.swift with the lines:\r\n#!/usr/bin/env xcrun swift\r\n\r\nimport Foundation\r\nimport CommonCrypto\r\n\r\nextension String {\r\n    func sha1() -> String {\r\n        let data = self.dataUsingEncoding(NSUTF8StringEncoding)!\r\n        var digest = [UInt8](count:Int(CC_SHA1_DIGEST_LENGTH), repeatedValue: 0)\r\n        CC_SHA1(data.bytes, CC_LONG(data.length), &digest)\r\n        let hexBytes = digest.map { String(format: \"%02hhx\", $0) }\r\n        return hexBytes.joinWithSeparator(\"\")\r\n    }\r\n}\r\n\r\nprint(\"Hello world\".sha1())\r\n\r\n2. chmod +x sample.swift\r\n\r\n3. ./sample.swift\r\n\r\nExpected Results:\r\n7b502c3a1f48c8609ae212cdfb639dee39673f5e\r\n\r\nActual Results:\r\n./sample.swift:3:8: error: no such module 'CommonCrypto'\r\nimport CommonCrypto\r\n\r\nVersion:\r\nXcode: Version 7.3.1 (7D1014)\r\nOS X: 10.11.4 (15E65)"
    email: keithbsmiley@gmail.com
    modified: "2016-05-22T18:22:02.52886Z"
    number: "26276589"
    number_intvalue: 26276589
    originated: 13-May-2016 02:31 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Duplicate of 18256932 (open)
    title: Missing module map for CommonCrypto
