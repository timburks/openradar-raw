apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "26038856"
    labels:
        datastore_id: "5040268239699968"
data:
    classification: Feature (New)
    created: "2016-05-02T12:50:52.91648Z"
    description: "When rendering to a Metal texture using Core Image API, \n\n\t-[CIContext render:toMTLTexture:commandBuffer:bounds:colorSpace:]\n\nCIImage contents replaced texture contents. There is no way of specifying basic blending options like it is when using CoreImage with OpenGL:\n\n\tglDepthMask(GL_FALSE);\n\tglDisable(GL_DEPTH_TEST);\n\tglViewport(0, 0, (GLsizei)bounds.size.width, (GLsizei)bounds.size.height);\n\tglBlendFunc (GL_ONE, GL_ONE_MINUS_SRC_ALPHA);\n\tglEnable (GL_BLEND);\n\t\n\tglMatrixMode (GL_PROJECTION);\n\tglLoadIdentity ();\n\tglOrtho (0, bounds.size.width, 0, bounds.size.height, -1, 1);\n\t\n\tglMatrixMode (GL_MODELVIEW);\n\tglLoadIdentity ();\n\t\n\tCGRect r = CGRectIntersection(image.extent, drawable.extent);\n\t[context drawImage:image inRect:r fromRect:r];\n\n\nThis blending capability is available within the metal encoder used internally by Core Image.\n\nI would like to suggest exposing an API that makes it possible to composite Core Image rendering onto existing texture contents, and thus make it on par with OpenGL implementation."
    email: raphael@creaceed.com
    modified: "2016-05-02T12:50:52.91675Z"
    number: "26038856"
    number_intvalue: 26038856
    originated: 02-May-2016 02:50 PM
    parent_number: '&{NULL_VALUE}'
    product: OS X SDK
    product_version: 10.11.x
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: CoreImage rendering to Metal texture does not expose compositing options, like OpenGL does.
