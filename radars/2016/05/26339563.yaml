apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "26339563"
    labels:
        datastore_id: "4935309036879872"
data:
    classification: Serious Bug
    created: "2016-05-18T05:20:14.72509Z"
    description: "Summary:\r\n\r\nGiven a Swift string:\r\n    let code = \"uniform mat4 u_mvpMatrix; attribute vec4 a_position; attribute vec4 a_color; varying vec4 v_color; void main() { v_color = a_color; gl_Position = u_mvpMatrix * a_position; }\"\r\n\r\nThis code:\r\n\tlet utf8String = UnsafePointer<GLchar>(code.cStringUsingEncoding(NSUTF8StringEncoding)!)\r\nProduces random results in utf8String\r\n\r\nThis code:\r\n        let utf8String = code.cStringUsingEncoding(NSUTF8StringEncoding)!\r\n        let unsafeString = UnsafePointer<GLchar>(utf8String)\r\nProduces the expected result.\r\n\r\nSteps to Reproduce:\r\nRun the tests in the attach project.\r\n\r\nNote the test `testFailsRandomly`, which contains the first example above,  fails about 99% of the time while the test `testNeverFails` never fails. The `testFailsRandomly` generally succeeds once after restarting Xcode.\r\n\r\nExpected Results:\r\nBoth tests should succeed. The combined expression should yield the same results as the two-step expression.\r\n\r\nActual Results:\r\nThe single line expression generates garbage."
    email: iosdeveloperzone@gmail.com
    modified: "2016-05-25T18:45:12.6445Z"
    number: "26339563"
    number_intvalue: 26339563
    originated: 17-May-2016 10:19 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 9.3 SDK
    reproducible: Always
    resolved: 25-May-2016 11:44 AM
    status: Behaves Correctly
    title: 'Swift: Casting C String to UnsafePointer<GLchar> generates garbage'
