apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "25640562"
    labels:
        datastore_id: "5611440908009472"
data:
    classification: Feature (New)
    created: "2016-04-09T08:13:34.2681Z"
    description: "Summary:\r\nOn OS X, one can determine if a given Root Certificate is part of the Apple-supplied set by invoking SecTrustSettingsCopyCertificates with the kSecTrustSettingsDomainSystem. This can be distinguished from other forms of trust anchors (such as administratively configured or user-configured)\r\n\r\nOn iOS, no such API exists. As such, after certificate validation succeeds from SecTrustEvaluate, one cannot determine if the overall result was due to an MDM-supplied trust anchor or a trust anchor provided by Apple.\r\n\r\niOS users can set their own custom anchors ( SecTrustSetAnchorCertificates[Only] ) and then retrieve them (SecTrustCopyCustomAnchorCertificates), but that provides no means to see the Apple-supplied set (nor the set in securityd).\r\n\r\nThis is useful for applications which want to impose policies on publicly trusted CAs (where here, the definition is \"in the default OS set from Apple\"), without negatively impacting enterprise users. HPKP pinning is one example. Enforcing the Baseline Requirements via application policy is another.\r\n\r\nSteps to Reproduce:\r\n1. Attempt to obtain the list of Apple-provided roots (that is, the contents of the \"Trust Store\" listed in Settings -> General -> About) via programmatic means\r\n\r\nExpected Results:\r\nExpected: The set of certificates is returned as a CFArrayRef\r\n\r\nActual Results:\r\nActual: No such API exists.\r\n\r\nVersion:\r\niOS 9.3.1 (13E238)\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\niPhone 6s"
    email: rsleevi@chromium.org
    modified: "2016-04-09T08:13:34.26827Z"
    number: "25640562"
    number_intvalue: 25640562
    originated: 4/9/2016
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 9.3.1 (13E238)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Security.framework: Provide API to determine the Apple-supplied set of default trust anchors'
