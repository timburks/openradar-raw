apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24425703"
    labels:
        datastore_id: "5045924174757888"
data:
    classification: ""
    created: "2016-01-30T15:41:34.01542Z"
    description: "Many apps require the user to provide at least an email address and a password as part of their sign up process.\r\n\r\nThe users email address is already attached to their Apple ID and is typically available via the Contacts Framework (though not programatically identifiable to the app). \r\n\r\nA unique password is also easily generated by the Shared Web Credentials SecCreateSharedWebCredentialPassword() call in the Security Framework.\r\n\r\nAdditionally, using the same Shared Web Credentials is it possible for a developer to get access to login details associated with an app and a website. \r\n\r\nThese technologies could be bought together into a new, powerful, but simple and secure, way for users to allow apps to generate accounts for them. \r\n\r\nAdditionally, in a similar manner to how the user has control over the data they share in the Apple Pay sheet, it should be possible for the user to choose what data they share with the app beyond the critical. For example; age, gender, location, address.\r\n\r\nThe steps would be quite simple\r\n\r\n* The user starts the app\r\n* The app asks the authentication framework for the known login details for the existing user and this app bundle\r\n* The framework either returns the previously associated details (perhaps requiring TouchID authentication using first) or asks the user what to do next \r\n* The user can then inspect the details the app would like to access and grant/deny or change what is to be provided\r\n* Users will no longer have to type laborious email addresses or generate and remember secure passwords.\r\n* As an additional level of security, iCloud email addresses could allow for aliases, which could also be auto-generated by this framework meaning that in many cases a user can sign up for an app without giving away any personal data but still be connected to that service and vice-versa (e.g. for welcome emails and the like).\r\n\r\nA new option in the Settings for the app would allow the user to revoke access, which the app would be requited to respect as part of the app review process/agreement.\r\n\r\nI understand that some of this information is available via the CloudKit CKDiscoveredUserInfo class, which is a definitely help but still does achieve the full purpose this change, which is to facilitate rapid, secure and shared logins for apps and websites. Such a framework would conceivable be tied into this class."
    email: michael.robert.may@gmail.com
    modified: "2016-01-30T16:11:06.34299Z"
    number: "24425703"
    number_intvalue: 24425703
    originated: 30/01/2016
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Apple ID Authentication Framework
