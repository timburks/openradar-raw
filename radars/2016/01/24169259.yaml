apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24169259"
    labels:
        datastore_id: "4988992973963264"
data:
    classification: ""
    created: "2016-01-13T16:29:46.99584Z"
    description: "Summary:\r\nIn the current OS X 10.11.4 (15E27e) beta, CoreBluetooth no longer calls -centralManager:didDisconnectPeripheral:error: if a connected iOS device (acting as a CBPeripheral disconnects due to timeout or from turning off Bluetooth on the iOS device.\r\n\r\nThis is a significant error and is reproducible on multiple machines running the OS X beta. This issue is not present in the current OS X public release (10.11.2) but has not been tested in OS X 10.11.3.\r\n\r\nAttached you will find a Bluetooth diagnostics report starting from when two iOS devices (running MacID com.kanecheshire.MacID) were connected as peripherals to MacID on the Mac (com.kanecheshire.MacIDOSX). One iOS device is running the latest public release of iOS 9, the other is running the current beta release of iOS 9.3.\r\n\r\nAfter turning off Bluetooth on both iOS devices, the CBCentralManagerDelegate on the Mac did not receive the -centralManager:didDisconnectPeripheral:error: delegate method.\r\n\r\nInterestingly, the -centralManager:didDisconnectPeripheral:error: *does* get called if you turn Bluetooth off on the Mac or if you disconnect a peripheral using the CBCentralManager instance method -cancelPeripheralConnection:, however calling that method does *not* work if the peripheral has already lost connection from its side, for example after turning off Bluetooth on the iOS device.\r\n\r\nSteps to Reproduce:\r\n1. Set up an iOS app to act as a peripheral (CBPeripheralManager)\r\n2. Set up an OS X app to act as a central, set the delegate and ensure -centralManager:didDisconnectPeripheral:error: is implemented (CBCentralManager)\r\n3. Connect the iOS peripheral to the OS X central. \r\n4. After a connection is sustained, turn off Bluetooth **on the iOS device**.\r\n5. Note that -centralManager:didDisconnectPeripheral:error: never gets called on the CBCentralManagerDelegate\r\n\r\nExpected Results:\r\n-centralManager:didDisconnectPeripheral:error: should get called when the iOS app acting as a peripheral disconnects, either due to connection time outs or due to the user turning off Bluetooth on the peripheral.\r\n\r\nActual Results:\r\n-centralManager:didDisconnectPeripheral:error: does not get called when the iOS app acting as a peripheral disconnects, either due to connection time outs or due to the user turning off Bluetooth on the peripheral.\r\n\r\nVersion:\r\nOS X 10.11.4 (15E27e)\r\n\r\nNotes:\r\nI know you will try and I know you can't reply to this but please, please fix this before you release 10.11.4. This is a significant issue which could break tonnes and tonnes of apps.\r\n\r\nConfiguration:\r\niPhone 5S running iOS 9.3 beta\r\niPhone 6S Plus running iOS 9.2\r\nMacBook Pro Retina (mid-2012) running OS X 10.11.4 (15E27e)\r\nMacBook Pro Retain (mid-2015) running OS X 10.11.4 (15E27e)"
    email: kane.cheshire@googlemail.com
    modified: "2016-05-10T14:01:06.02963Z"
    number: "24169259"
    number_intvalue: 24169259
    originated: 13-Jan-2016 04:26 PM
    parent_number: '&{NULL_VALUE}'
    product: OS X SDK
    product_version: OS X 10.11.4 (15E27e)
    reproducible: Always
    resolved: ""
    status: Closed
    title: CoreBluetooth does not report when peripheral devices disconnect.
