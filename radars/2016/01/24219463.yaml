apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24219463"
    labels:
        datastore_id: "6149612993773568"
data:
    classification: ""
    created: "2016-01-21T07:06:12.53639Z"
    description: "openURL used to recognize URLs like \"https://itunes.apple.com/app/id1031093592\" as App Store app URLs and would open the native App Store app directly.\r\n\r\nIt looks like a configuration change from Apple has been pushed to all iOS devices that removes support for this URL pattern and replaces it with \"https://appsto.re/app/id1031093592\".  This happened in the last 1-2 days, and affects iOS versions 7.0 through the latest.\r\n\r\nWhen we call openURL using the old itunes.apple.com pattern, iOS opens Mobile Safari which then redirects to the App Store app.  This adds an extra hop for the user and breaks the back breadcrumb.  Pressing back returns to Safari, not the original app that opened the URL.\r\n\r\nWe can modify many of our iOS app URLs on the server-side to start using the \"appsto.re\" domain, but some are compiled into our production apps.  I imagine this is the case for many developers.\r\n\r\nWould it be possible for Apple to add back in support for the long-standing \"itunes.apple.com\" URLs?\r\n\r\n--------------------------------------------------------------\r\n\r\nHow we know it was a configuration change from Apple:\r\n\r\n- MobileCoreServices.framework includes a file (iTunesStoreURLPatterns.plist) that openURL uses to decide if a http/https URL should be rewritten into a native URL.  This is how URLs like \"https://itunes.apple.com/app/id1031093592\" get converted to  \"itms-appps://itunes.apple.com/app/id1031093592\" before opening.\r\n\r\n- The rule that's shipped with iOS for mapping App Store URLs looks like --\r\n\r\n```\r\n{\r\n    \"host-patterns\" =             (\r\n        \"phobos\\\\.apple\\\\.com$\",\r\n        \"((buy|my|search|c|itunesu|vpp)\\\\.)?itunes\\\\.apple\\\\.com$\"\r\n    );\r\n    \"path-patterns\" =             (\r\n        \"[&amp;?](mt=8|media=software)(&amp;|$)\",\r\n        \"^/webobjects/mzsoftwareupdate.woa/wa/(availablesoftwareupdates)\",\r\n        \"^/webobjects/mzstore.woa/wa/(viewsoftware|pandastorefront|viewfeaturedsoftwarecategories)\",\r\n        \"^/webobjects/mzfinance.woa/wa/(com.apple.jingle.app.finance.directaction/)?(verifyaccountemail)\",\r\n        \"^/webobjects/mzfinance.woa/wa/associatevppusertoitsaccountsrv\",\r\n        \"^/([a-z][a-z]/)?(app|apps-store|developer)(/|\\\\?|$)\"\r\n    );\r\n    \"scheme-mapping\" =             {\r\n        http = \"itms-apps\";\r\n        https = \"itms-appss\";\r\n    };\r\n},\r\n```\r\n\r\nFrom the above, we can see that itunes.apple.com URLs should work based on this (itunes.apple.com is a supported host pattern).\r\n\r\n- iOS also downloads a \"url-resolution.plist\" file and stores it at: \"/var/mobile/Library/Caches/com.apple.itunesstored/url-resolution.plist\".  When present, this file takes precedence over \"iTunesStoreURLPatterns.plist\".\r\n\r\n- In the \"url-resolution.plist\" file, the contents of the App Store URL rule looks like --\r\n\r\n```\r\n{\r\n    \"host-patterns\" =             (\r\n        \"appsto[.]re$\"\r\n    );\r\n    \"host-suffix-whitelist\" =             (\r\n        \"appsto.re\",\r\n        \"itun.es\",\r\n        \".apple.com\",\r\n        \"new.itunes.com\",\r\n        \"apple.co\"\r\n    );\r\n    \"p2-url-section-name\" = MobileSoftwareApplications;\r\n    \"path-patterns\" =             (\r\n        \"[&?](mt=8|media=software|media=watch|app=watch)(&|$)\",\r\n        \"^/webobjects/mzsoftwareupdate.woa/wa/(availablesoftwareupdates)\",\r\n        \"^/webobjects/mzstore.woa/wa/(viewsoftware|pandastorefront|viewfeaturedsoftwarecategories)\",\r\n        \"^/webobjects/mzfinance.woa/wa/(com.apple.jingle.app.finance.directaction/)?(verifyaccountemail|associatevppuserwithitsaccount)\",\r\n        \"^/([a-z][a-z]/)?(app|app-bundle|apps-store|developer|vpp-associate)(/|\\\\?|$)\",\r\n        \"^/[a-z][a-z]/[^/]+[.]i$\"\r\n    );\r\n    \"scheme-mapping\" =             {\r\n        http = \"itms-apps\";\r\n        https = \"itms-appss\";\r\n    };\r\n},\r\n```\r\n\r\nFrom the above, we can see the only supported host pattern is now \"appsto.re\", and this is what's breaking all the old itunes.apple.com URLs.\r\n\r\nSteps to Reproduce:\r\nThese are steps to prove this a server-driven config change from Apple --\r\n\r\n0. Find iPhone w/ no SIM or an iPod Touch (so that data access can be completely disabled).\r\n1. Do a \"Reset All Content and Settings\" so that the file \"/var/mobile/Library/Caches/com.apple.itunesstored/url-resolution.plist\" can be removed.\r\n2. Start device.\r\n3. Choose English language.\r\n4. Choose United State.\r\n5. Skip Wifi setup (so that iOS cannot download a new url-resolution.plist file yet).\r\n6. Choose Setup as new iPhone.\r\n7. Deploy test iOS app to the device which calls openURL to an itunes.apple.com URL on startup.\r\n\r\n```\r\nNSString *iTunesLink = @\"https://itunes.apple.com/us/app/id1048542880\";\r\n[[UIApplication sharedApplication] openURL:[NSURL URLWithString:iTunesLink]];\r\n```\r\n\r\n8. Run app.  \r\n\r\nOBSERVE: App starts and app switches directly to the Apple App Store.  Since WiFi isn't on and we have no data, the store content doesn't load.  But, at least the store app was opened directly w/out hopping through Safari.\r\n\r\n-----\r\n\r\n# Next we'll show that itunes.apple.com URLs stop working once the new configuration is downloaded from Apple.\r\n\r\n1. Quit test app.\r\n2. Enable WiFi.\r\n3. Open the App Store app so we can be sure \"/var/mobile/Library/Caches/com.apple.itunesstored/url-resolution.plist\" has been fetched.\r\n4. Re-run test app that we made earlier.\r\n\r\nOBSERVE: App starts; app switches to Mobile Safari which in turn app switches to the App Store app."
    email: fpotter@gmail.com
    modified: "2016-01-21T07:06:12.53663Z"
    number: "24219463"
    number_intvalue: 24219463
    originated: 1/16/2016
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: 7.0+
    reproducible: Yes
    resolved: ""
    status: Open
    title: openURL calls to "https://itunes.apple.com/app/..." no longer directly open the App Store app.
