apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24085080"
    labels:
        datastore_id: "4975775748980736"
data:
    classification: Crash
    created: "2016-01-07T03:33:04.2903Z"
    description: "Summary:\r\nIf a project's source code includes an NSLocalizedString function referencing a nonexistent table, as in:\r\n\r\nNSLocalizedString(\"let's go\", tableName: \"invalid-table-name\", comment: \"A string saved in a custom table\")\r\n\r\nthe export proceeds without complaint (rdar://24084898), but after translation, the import results in a crash (see attached crash report).\r\n\r\nRemoving the line with the nonexistent table name fixes the crash.\r\n\r\nSteps to Reproduce:\r\n1. Include the line below anywhere in source code covered by localization exports:\r\nlet title = NSLocalizedString(\"let's go\", tableName: \"invalid-table-name\", comment: \"A string saved in a custom table\")\r\n\r\n2. Export localizations.\r\n\r\n3. See that the exported file includes an invalid <file> node (see attached xliff file).\r\n\r\n4. Have the file translated.\r\n\r\n5. Import translations.\r\n\r\n6. See the 'missing resource' warning but continue merrily. (see attached image)\r\n\r\nExpected Results:\r\nXcode should either:\r\n+ Show an error and refuse to continue until the file name is resolved.\r\n+ Show a warning and offer to create a matching .strings file.\r\n\r\nActual Results:\r\nXcode crashes (see attached crash log)\r\n\r\nVersion:\r\nXcode 7.1, OS 10.11.2\r\n\r\nNotes:\r\nThis could be alleviated by addressing rdar://24084898 (though not fixed, since file configurations can always change between export and import)."
    email: Laura.Savino@gmail.com
    modified: "2016-01-07T03:33:04.29058Z"
    number: "24085080"
    number_intvalue: 24085080
    originated: Jan 6, 2016
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "7.1"
    reproducible: Always
    resolved: ""
    status: Open
    title: Import Localizations crash if source code includes nonexistent tableName
