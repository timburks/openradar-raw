apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24101520"
    labels:
        datastore_id: "4631968582991872"
data:
    classification: ""
    created: "2016-01-08T02:13:51.91141Z"
    description: "Summary:\r\nUnlike NSMutableSet's addObject: method, Swift's Set's insert method replaces the element if it was already in the set.\r\n\r\nSteps to Reproduce:\r\n// Can be copied to a Playground\r\n\r\nclass Foo: Hashable, CustomStringConvertible {\r\n    let value: Int\r\n    let notPartOfValue: Int\r\n    init(value: Int, notPartOfValue: Int) {\r\n        self.value = value\r\n        self.notPartOfValue = notPartOfValue\r\n    }\r\n    var hashValue: Int {\r\n        return value.hashValue\r\n    }\r\n    var description: String {\r\n        return \"{Foo, v:\\(value), n:\\(notPartOfValue)}\"\r\n    }\r\n}\r\n\r\nfunc ==(lhs: Foo, rhs: Foo) -> Bool {\r\n    return lhs.value == rhs.value\r\n}\r\n\r\nvar s = Set<Foo>()\r\ns.insert(Foo(value: 1, notPartOfValue: 100))\r\nprint(s)\r\ns.insert(Foo(value: 1, notPartOfValue: 200))\r\nprint(s)\r\n\r\n\r\nExpected Results:\r\nLast line should print : \"[{Foo, v:1, n:100}]\\n\"\r\n\r\nActual Results:\r\nLast line prints \"[{Foo, v:1, n:200}]\\n\"\r\n\r\nVersion:\r\nLatest public xcode 7, Swift 2\r\n\r\nNotes:\r\nhttp://www.chaonis.com/2016/01/swift-set-vs-nsmutableset/\r\n\r\nConfiguration:\r\nIt doesn't matter\r\n\r\nAttachments:"
    email: simonracz@gmail.com
    modified: "2017-07-05T13:22:58.45926Z"
    number: "24101520"
    number_intvalue: 24101520
    originated: 08-Jan-2016
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: ""
    reproducible: always
    resolved: closed
    status: Open
    title: Swift Set insert method replaces the element if it was already in the set.
