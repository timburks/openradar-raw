apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24350386"
    labels:
        datastore_id: "5053998713274368"
data:
    classification: ""
    created: "2016-01-27T23:36:29.05816Z"
    description: "Summary:\r\n- For the last several Xcode releases, itâ€™s been impossible to develop on the attached project without SourceKit immediately crashing.\r\n\r\nSteps to Reproduce:\r\n- Unzip attached file.\r\n- Open `ReactiveCocoa.xcworkspace`.\r\n- Select `ReactiveCocoa-iOS` scheme.\r\n- Open `SignalProducer.swift`\r\n\r\nExpected Results:\r\n- You can easily edit the file with syntax highlighting and autocompletion.\r\n\r\nActual Results:\r\n- SourceKit crashes right away:\r\n\r\nThread 5 Crashed:\r\n0   com.apple.SourceKitService    \t0x0000000107614b7f (anonymous namespace)::ExprWalker::walkToExprPre(swift::Expr*) + 575\r\n1   com.apple.SourceKitService    \t0x000000010776abda swift::Expr::walk(swift::ASTWalker&) + 26\r\n2   com.apple.SourceKitService    \t0x000000010760e9a9 swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*, swift::Type, bool, bool, bool) + 473\r\n3   com.apple.SourceKitService    \t0x0000000107693b2e swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::ContextualTypePurpose, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>, swift::ExprTypeCheckListener*) + 782\r\n4   com.apple.SourceKitService    \t0x000000010762da9a (anonymous namespace)::FailureDiagnosis::typeCheckChildIndependently(swift::Expr*, swift::Type, swift::ContextualTypePurpose, swift::OptionSet<TCCFlags, unsigned int>, swift::ExprTypeCheckListener*) + 1002\r\n5   com.apple.SourceKitService    \t0x0000000107632656 (anonymous namespace)::FailureDiagnosis::visitApplyExpr(swift::ApplyExpr*) + 1318\r\n6   com.apple.SourceKitService    \t0x0000000107629488 swift::ASTVisitor<(anonymous namespace)::FailureDiagnosis, bool, void, void, void, void, void>::visit(swift::Expr*) + 264\r\n7   com.apple.SourceKitService    \t0x0000000107624ae2 swift::constraints::ConstraintSystem::diagnoseFailureForExpr(swift::Expr*) + 82\r\n8   com.apple.SourceKitService    \t0x0000000107628f82 swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*) + 4194\r\n9   com.apple.SourceKitService    \t0x000000010768e1b0 swift::TypeChecker::solveForExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*, swift::constraints::ConstraintSystem&, llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>) + 736\r\n10  com.apple.SourceKitService    \t0x0000000107693a42 swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::ContextualTypePurpose, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>, swift::ExprTypeCheckListener*) + 546\r\n11  com.apple.SourceKitService    \t0x000000010762da9a (anonymous namespace)::FailureDiagnosis::typeCheckChildIndependently(swift::Expr*, swift::Type, swift::ContextualTypePurpose, swift::OptionSet<TCCFlags, unsigned int>, swift::ExprTypeCheckListener*) + 1002\r\n12  com.apple.SourceKitService    \t0x0000000107624b28 swift::constraints::ConstraintSystem::diagnoseFailureForExpr(swift::Expr*) + 152\r\n13  com.apple.SourceKitService    \t0x0000000107628f82 swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*) + 4194\r\n14  com.apple.SourceKitService    \t0x000000010768e1b0 swift::TypeChecker::solveForExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*, swift::constraints::ConstraintSystem&, llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>) + 736\r\n15  com.apple.SourceKitService    \t0x0000000107693a42 swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::ContextualTypePurpose, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>, swift::ExprTypeCheckListener*) + 546\r\n16  com.apple.SourceKitService    \t0x00000001076e5deb swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 4411\r\n17  com.apple.SourceKitService    \t0x00000001076e4dbb swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) + 267\r\n18  com.apple.SourceKitService    \t0x00000001076e3a3b swift::TypeChecker::typeCheckFunctionBodyUntil(swift::FuncDecl*, swift::SourceLoc) + 347\r\n19  com.apple.SourceKitService    \t0x00000001076e42ea swift::TypeChecker::typeCheckAbstractFunctionBody(swift::AbstractFunctionDecl*) + 186\r\n20  com.apple.SourceKitService    \t0x000000010767cd86 typeCheckFunctionsAndExternalDecls(swift::TypeChecker&) + 182\r\n21  com.apple.SourceKitService    \t0x000000010767d9e5 swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int) + 1781\r\n22  com.apple.SourceKitService    \t0x00000001072a10c2 swift::CompilerInstance::performSema() + 4738\r\n23  com.apple.SourceKitService    \t0x000000010716663e void SourceKit::WorkQueue::DispatchData::callAndDelete<(anonymous namespace)::ASTProducer::getASTUnitAsync(SourceKit::SwiftASTManager::Implementation&, llvm::ArrayRef<llvm::IntrusiveRefCntPtr<SourceKit::ImmutableTextSnapshot> >, std::__1::function<void (llvm::IntrusiveRefCntPtr<SourceKit::ASTUnit>, llvm::StringRef)>)::$_2>(void*) + 5806\r\n24  libdispatch.dylib             \t0x00007fff915bf33f _dispatch_client_callout + 8\r\n25  libdispatch.dylib             \t0x00007fff915cd03a _dispatch_block_invoke + 474\r\n26  com.apple.SourceKitService    \t0x00000001089acbbf executeBlock(void*) + 15\r\n27  com.apple.SourceKitService    \t0x000000010723b58d ExecuteOnThread_Dispatch(void*) + 13\r\n28  libsystem_pthread.dylib       \t0x00007fff98f84c13 _pthread_body + 131\r\n29  libsystem_pthread.dylib       \t0x00007fff98f84b90 _pthread_start + 168\r\n30  libsystem_pthread.dylib       \t0x00007fff98f82375 thread_start + 13\r\n\r\n\r\nRegression:\r\nThis has been happening at least since Xcode 7.2, although SourceKit has never really been stable."
    email: hello@nachosoto.com
    modified: "2016-01-27T23:36:29.05836Z"
    number: "24350386"
    number_intvalue: 24350386
    originated: 26-Jan-2016
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 7.2 and 7.3 beta
    reproducible: Always
    resolved: ""
    status: Open
    title: '[SourceKit] SourceKit crashes immediatelly after opening attached project'
