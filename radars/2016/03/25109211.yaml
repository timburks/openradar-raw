apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "25109211"
    labels:
        datastore_id: "6111937741979648"
data:
    classification: ""
    created: "2016-03-11T15:16:10.01372Z"
    description: "Summary:\r\nWhen creating in Swift a protocol bridged with Objective-C with an optional func providing a parameter of type CGRect, calling this func with optional chaining causes the compiler to segfault.\r\n\r\nSteps to Reproduce:\r\n1. Create a Swift protocol bridged with Objective-C:\r\n@objc protocol SomeProtocol {\r\n    optional func willUpdateFrame(frame: CGRect)\r\n}\r\n\r\n2. Call the optional function on an optional delegate implementing that protocol:\r\n\r\nclass SomeClass {\r\n    var delegate: SomeProtocol?\r\n\r\n    func updateFrame() {\r\n        delegate?.willUpdateFrame?(CGRect.zero)\r\n    }\r\n}\r\n\r\nExpected Results:\r\nSource should compile\r\n\r\nActual Results:\r\nSegmentation fault with the following stack trace:\r\n0  swift                    0x0000000107602fbb llvm::sys::PrintStackTrace(__sFILE*) + 43\r\n1  swift                    0x00000001076036fb SignalHandler(int) + 379\r\n2  libsystem_platform.dylib 0x00007fff9a96f52a _sigtramp + 26\r\n3  swift                    0x00000001074a353e llvm::StringMap<llvm::Value*, llvm::MallocAllocator>::insert(std::__1::pair<llvm::StringRef, llvm::Value*>) + 142\r\n4  swift                    0x000000010745df9c llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Instruction*) + 60\r\n5  swift                    0x000000010715a474 llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >::CreateStore(llvm::Value*, llvm::Value*, bool) + 68\r\n6  swift                    0x00000001057f0d59 swift::irgen::SingleScalarTypeInfo<(anonymous namespace)::PrimitiveTypeInfo, swift::irgen::LoadableTypeInfo>::initialize(swift::irgen::IRGenFunction&, swift::irgen::Explosion&, swift::irgen::Address) const + 41\r\n7  swift                    0x00000001057e44bc swift::irgen::SequentialTypeInfo<(anonymous namespace)::LoadableStructTypeInfo, swift::irgen::LoadableTypeInfo, (anonymous namespace)::StructFieldInfo, true>::initialize(swift::irgen::IRGenFunction&, swift::irgen::Explosion&, swift::irgen::Address) const + 220\r\n8  swift                    0x00000001057e44bc swift::irgen::SequentialTypeInfo<(anonymous namespace)::LoadableStructTypeInfo, swift::irgen::LoadableTypeInfo, (anonymous namespace)::StructFieldInfo, true>::initialize(swift::irgen::IRGenFunction&, swift::irgen::Explosion&, swift::irgen::Address) const + 220\r\n9  swift                    0x00000001057e2dcc swift::irgen::SequentialTypeInfo<(anonymous namespace)::ClangRecordTypeInfo, swift::irgen::LoadableTypeInfo, (anonymous namespace)::ClangFieldInfo, true>::initialize(swift::irgen::IRGenFunction&, swift::irgen::Explosion&, swift::irgen::Address) const + 236\r\n10 swift                    0x00000001057e2dcc swift::irgen::SequentialTypeInfo<(anonymous namespace)::ClangRecordTypeInfo, swift::irgen::LoadableTypeInfo, (anonymous namespace)::ClangFieldInfo, true>::initialize(swift::irgen::IRGenFunction&, swift::irgen::Explosion&, swift::irgen::Address) const + 236\r\n11 swift                    0x0000000105782871 swift::irgen::CallEmission::setArgs(swift::irgen::Explosion&, llvm::ArrayRef<swift::SILParameterInfo>, swift::irgen::WitnessMetadata*) + 1777\r\n12 swift                    0x00000001057aabe9 swift::irgen::emitObjCPartialApplication(swift::irgen::IRGenFunction&, swift::SILDeclRef, swift::CanTypeWrapper<swift::SILFunctionType>, swift::CanTypeWrapper<swift::SILFunctionType>, llvm::Value*, swift::SILType, swift::irgen::Explosion&) + 1945\r\n13 swift                    0x0000000105819c75 swift::SILVisitor<(anonymous namespace)::IRGenSILFunction, void>::visit(swift::ValueBase*) + 32117\r\n14 swift                    0x000000010580e9ad swift::irgen::IRGenModule::emitSILFunction(swift::SILFunction*) + 10973\r\n15 swift                    0x0000000105774b58 swift::irgen::IRGenModuleDispatcher::emitGlobalTopLevel() + 376\r\n16 swift                    0x00000001057f53a4 performIRGeneration(swift::IRGenOptions&, swift::ModuleDecl*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, swift::SourceFile*, unsigned int) + 788\r\n17 swift                    0x00000001057f5830 swift::performIRGeneration(swift::IRGenOptions&, swift::SourceFile&, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, unsigned int) + 64\r\n18 swift                    0x00000001056f4265 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&) + 13701\r\n19 swift                    0x00000001056f0ad3 frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 2691\r\n20 swift                    0x00000001056ed154 main + 2324\r\n21 libdyld.dylib            0x00007fff9ae325ad start + 1\r\n22 libdyld.dylib            0x000000000000003b start + 1696389775"
    email: andrea.mazzini@gmail.com
    modified: "2017-12-06T10:55:39.25161Z"
    number: "25109211"
    number_intvalue: 25109211
    originated: 11-Mar-2016 04:12 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: 7.2.1 (7C1002)
    reproducible: Yes
    resolved: ""
    status: Resolved
    title: Compiler segmentation fault when @objc protocol optional func uses a CGRect as parameter
