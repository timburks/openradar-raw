apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "23994737"
    labels:
        datastore_id: "5036257813987328"
data:
    classification: ""
    created: "2016-03-25T13:12:36.12763Z"
    description: "Summary:\r\nCalling `setsid()` after `fork` makes opened \"/dev/tty\" fds unusable: any write/read/ioctl returns EIO.\r\n\r\nSteps to Reproduce:\r\n1. Download attached files\r\n2. Run `make` or just compile `test.c` with `clang`\r\n3. Run `./test`\r\n\r\nExpected Results:\r\nIt should print `0`.\r\n\r\nActual Results:\r\nIt prints `5`, which actually means EIO. FreeBSD and every other system handles this differently, so I believe that the current OS X behavior is not compliant to POSIX.\r\n\r\nVersion:\r\n10.11.2\r\n\r\nNotes:\r\nThe reason for this appears to be the way it is implemented in xnu. `cttyioctl` and all of `ctty*` which seem to be responsible for \"/dev/tty\" file ops, calls `cttyvp` which tries to tty from the current session. `setsid()` on other hand leaves the terminal in a new session empty.\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n'test.c' and 'Makefile' were successfully uploaded."
    email: fedor.indutny@gmail.com
    modified: "2016-03-25T13:12:36.12781Z"
    number: "23994737"
    number_intvalue: 23994737
    originated: 22-12-2015
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: 10.11.2
    reproducible: ""
    resolved: ""
    status: Open
    title: setsid() makes opened "/dev/tty" unusable
