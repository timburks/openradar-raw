apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "25087070"
    labels:
        datastore_id: "4972218576535552"
data:
    classification: UI/Usability
    created: "2016-03-10T17:54:01.10584Z"
    description: "Many apps on the Mac have a hierarchical sidebar on the left with a detailed view on the right. Two popular examples are mailboxes in Mail and bookmarks in Safari. This idiom is also popular on the web: Slack is an example.\n\nAt first glance, Xcode’s sidebar appears to follow this interaction mechanism, but there’s an interesting twist. Each tab has an independent hierarchy & detail view. This provides more flexibility, but ultimately makes navigation more difficult.\n\nThe issue is that navigation state is buried inside a tab and it can’t be seen. This leads to situations where the same information is displayed in different ways and the developer needs to think about past actions. Here are some ways this problem manifests itself in my daily work:\n\n• When working on two separate parts of a project, you can easily lose your place. For example, I’m working on the client & server code at the same time and want to have tabs for both sides of the communication (Server.m and Client.m). As soon as I Command-click on a Server method in Client.m, I have two tabs with Server.m. I rarely notice this since my focus is on the code I’m editing, but eventually I’m left with a choice for where to resume my work. It feels like I never make the right decision.\n\n• Search results get lost: when you use Shift-Command-F the results show up in the current tab. Now do the same thing in another tab. And another. Then try to find the results from the first search. Which tab are they in?\n\n• I like to have the Utilities view open when working with user interface elements (such as Asset Catalogs and XIB files.) I *never* want to see the Utilities view when editing code. Yet as soon as I navigate away from the interface to the code that drives it, there’s the panel I don’t want. So of course I turn it off. Then I go back to the UI and turn it on again. Lather, rinse, repeat.\n\nI could go on with more examples, and I’m sure you’ve done the same thing internally. But the best reason for changing this interaction is because it isn’t forward thinking.\n\nEventually, Xcode will run on iOS where split views always use one hierarchy view to select detail views. Importantly, this navigation mechanism also adapts automatically by rearranging views depending on layout constraints. Try to envision Xcode’s current navigation mechanism on iOS and you’ll quickly find that it isn’t going to age well. Something like Safari’s bookmark navigation would work well: a single hierarchy is shared amongst all tabs. \n\nI think we’ll all be happier in the long-term if Xcode’s navigation gets some attention. Thanks for listening."
    email: craig.hockenberry@gmail.com
    modified: "2016-03-10T17:54:01.10603Z"
    number: "25087070"
    number_intvalue: 25087070
    originated: 10-Mar-2016 09:52 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: 7.2.1
    reproducible: Always
    resolved: ""
    status: Open
    title: Xcode's navigation needs attention
