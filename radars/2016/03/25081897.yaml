apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "25081897"
    labels:
        datastore_id: "6148046337343488"
data:
    classification: ""
    created: "2016-03-10T09:39:09.88251Z"
    description: "\"Run Test(s)\"/\"Run Test Class(es)\"/\"Run Test Bundle(s)\" should use scheme for building before running\r\n\r\n================\r\n\r\nin a workspace containing project A & project B (and much more complex cases) where A depends upon B but B is not a subproject of A, and scheme M has been created to properly build B before A, attempting to run an individual test or a test class or an entire test bundle from the test navigator or the test \"buttons\" in the source will result in failure due to missing headers or missing products … where if the developer first performs Cmd-U through the point of \"Build Succeeded\" without running the entire test bundle and then choosing an individual test, the test will not fail.\r\n\r\nchoosing individual items should not rely solely on the existing test-bundle target and its stated dependencies, but should rather rely on the current scheme (since the test bundle could be a part of several different schemes designed to shard test-suites).\r\n\r\n================\r\n\r\n\r\n1. create project B in workspace W\r\n2. add project A in workspace W\r\n3. make project A dependent upon the product (and possibly headers) of B\r\n4. create a scheme S in the workspace that dos not find implicit dependencies, does not parallelize the build, and builds B properly before A\r\n5. clean the work space and DO NOT BUILD\r\n6. attempt to individually run one of the tests, test-classes, or the entire test-bundle of A (where the creation of the tests depends upon A being able to be properly built) … and DO NOT USE Cmd-U or choose \"Test\" from the Product menu, but rather use the context menu in the Test navigator, or one of the test-\"buttons\" in the editor\r\n\r\n7. after noticing the failure, perform Cmd-U while being prepared to hit \"STOP\"/Cmd-. as soon as the \"Build Succeeded\" message appears, before any tests are run\r\n8. when \"Build Succeeded\" appears, immediately stop the build/test operation\r\n9. now repeat step 5\r\n\r\n================\r\n\r\nby the end of step 6, the scheme mentioned should have built all of the necessary items listed in the test action, and the individual tests should be able to be run as though all dependencies are fulfilled.\r\n\r\n================\r\n\r\nduring step 6, compilation or linking will fail, and the tests cannot be run.\r\n\r\nduring steps 7-8, compilation & linking succeed\r\nduring step 9, the expected results finally occur\r\n\r\nthe developer should not be required to babysit steps 7 & 8 to perform step 6.\r\n\r\n================\r\n\r\nworkspace containing app, supporting lib.a files, supporting .framework projects, and schemes building them in the necessary order.\r\n\r\n================\r\n\r\nXcode Version: 5, 6 & 7\r\nOS X Build version: 10.9, 10.10, 10.11\r\n\r\n================\r\n\r\nwe have a large project with a lot of dependencies.  our graph is pretty straightforward, but it becomes much less so if we are forced to make a tree of subprojects to do this work.  further, the test bundle targets often depend upon other projects/bundles in order to be built & run.  it should be possible to count on the current scheme to do automatically what we now have to work around manually to accomplish."
    email: kbeitz@twitter.com
    modified: "2016-04-13T23:08:25.57032Z"
    number: "25081897"
    number_intvalue: 25081897
    originated: 2016 March 09
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: 5, 6, 7
    reproducible: Always
    resolved: Duplicate rdar://23567374
    status: Closed (Duplicate of 23567374)
    title: '"Run Test(s)"/"Run Test Class(es)"/"Run Test Bundle(s)" should use scheme for building before running'
