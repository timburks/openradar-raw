apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "29679268"
    labels:
        datastore_id: "4974822920552448"
data:
    classification: Other Bug
    created: "2016-12-15T08:14:26.1109Z"
    description: "This is a duplicate of rdar://23711954\n\nSummary:\r\nTrying to use a generic objective-c class's type in a generic type of a block parameter works when declaring methods, but not when defining them, but not using them produces a warning about mismatched parameter types. For example:\r\n\r\n@interface MyContainer <ObjectType: NSObject *> : NSObject\r\n// Declaring methods works fine:\r\n- (void)foo:(void (^)(MyContainer<ObjectType> *))block;\r\n- (void)bar:(void (^)(MyContainer<ObjectType> *))block;\r\n- (void)baz:(ObjectType)obj;\r\n@end\r\n\r\n@implementation MyContainer\r\n// With the generic type:\r\n// error: No type or protocol named 'ObjectType'\r\n// warning: conflicting parameter types in implementation of 'foo:': 'void (^__strong)(MyContainer<ObjectType> *__strong)' vs 'void (^__strong)(MyContainer *__strong)'\r\n- (void)foo:(void (^)(MyContainer<ObjectType> *))block {\r\n    block(self);\r\n}\r\n\r\n// Without the generic type:\r\n// warning: conflicting parameter types in implementation of 'bar:': 'void (^__strong)(MyContainer<ObjectType> *__strong)' vs 'void (^__strong)(MyContainer *__strong)'\r\n- (void)bar:(void (^)(MyContainer *))block {\r\n    block(self);\r\n}\r\n\r\n// Using NSObject rather than ObjectType does not produce a warning when\r\n// it isn't a block parameter\r\n- (void)baz:(NSObject *)obj {\r\n    (void)obj;\r\n}\r\n\r\nVersion:\r\nXcode 8.2 (8C38)"
    email: jp@jpsim.com
    modified: "2016-12-15T08:14:26.11125Z"
    number: "29679268"
    number_intvalue: 29679268
    originated: 15-Dec-2016 12:14 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 8.2 (8C38)
    reproducible: Always
    resolved: ""
    status: Open
    title: Warnings when defining methods which take a block using an obj-c class's generic type
