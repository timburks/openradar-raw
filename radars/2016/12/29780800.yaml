apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "29780800"
    labels:
        datastore_id: "6166718489559040"
data:
    classification: Feature (New)
    created: "2016-12-22T01:21:18.32616Z"
    description: "Summary:\nIt’s hard to collect output from unknown number of async events and verify it has expected outcome with XCTestExpectation.\n\nSteps to Reproduce:\nAs an example, imagine a notification system what gives its callback two payloads: the new one and the previous.\n\nnotification.subscribe { new, old in\n  newValue = new\n  oldValue = old\n}\nnotification.trigger(with: aValue)\nnotification.trigger(with: aValue)\n\n\nWe want to verify both `oldValue` and `newValue`, but it’s unclear when to call `fulfill()` on expectation in the call back block, since calling it multiple times is prohibited.\n\nAnother scenario is this: we expect a certain value from an asynchronous process, but there are other events that needs to run after the expected value is captured, we don’t know for sure when all async output will become available. Calling `fulfill` will terminate the tests, therefore this scenario is unsupported.\n\nNotes:\nIt’s possible to do it with a timer. But the ultimate feature to have is something similar to the `toEventually` operation in Quick/Nimble. As mentioned in \nrdar://29780337."
    email: DaNmarner@gmail.com
    modified: "2016-12-22T01:21:18.32641Z"
    number: "29780800"
    number_intvalue: 29780800
    originated: 21-Dec-2016 05:20 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 8.2
    reproducible: Always
    resolved: ""
    status: Open
    title: 'XCTest: no obvious way to verify outputs from unknown # of async events'
