apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "27388852"
    labels:
        datastore_id: "5052993825144832"
data:
    classification: Bug
    created: "2016-07-16T15:35:39.02996Z"
    description: "and I can file a radar if itâ€™s not so here the radar rdar://Summary:\r\nI have a containment controller which its view is a big scroll view and has 2 child view controllers. The top one's view is a detail view and the bottom one's view is a table view. I want these 2 child view controllers scrolled like it's the same view.\r\nI asked an Apple engineer during WWDC about is there a better way than this way because I worry about the table view performance (cell for row to be precise).\r\nBut Apple engineer told me that I don't have to worry about that because table view implementation take the visible bounds on the window to do cell for row not its bound and he told me that this is an expected behaviour of table view, if I found that table view does not work this way, I can file a radar.\r\nBut I found that it's not like what he told me. Table view uses its bound to do cell for row not the visible frame on window. So here's the radar for that :)\r\n\r\nSteps to Reproduce:\r\n1. Open the sample project, build and run\r\n2. Scroll the view.\r\nOR\r\n1. Create a table view and set its bound to cover all of its cells\r\n2. Add it to the scroll view\r\n\r\nExpected Results:\r\nCell for row get called when scrolling\r\n\r\nActual Results:\r\nCell for row get called for every cell during view did load.\r\n\r\nVersion:\r\niOS 9.3\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\niOS Simulator\r\n\r\nAttachments:\r\n'TableView.zip' was successfully uploaded."
    email: pitiphong.ph@gmail.com
    modified: "2016-07-16T15:35:39.03023Z"
    number: "27388852"
    number_intvalue: 27388852
    originated: 16/07/2016
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "9.3"
    reproducible: Always
    resolved: No
    status: Open
    title: UITableView behaviour is not what Apple engineer told me
