apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "27516321"
    labels:
        datastore_id: "6096315469529088"
data:
    classification: Security
    created: "2016-07-24T20:43:16.62212Z"
    description: "Summary:\r\nCurrently any application without warning can call `NSEvent.addGlobalMonitorForEventsMatchingMask` to capture any type of event they desire on the system. There is no way to know what apps are doing this, and what information they are capturing. This includes every single keyDown event with the key that was pressed, meaning they can silently create a functional keylogger (with the exception of secure text fields)\r\n\r\nSteps to Reproduce:\r\n1) Register a monitor with `NSEvent.addGlobalMonitorForEventsMatchingMask(.KeyDownMask)` (or any other mask you would like)\r\n\r\nExpected Results:\r\nYou are prompted by OS X to allow the application to use this monitor\r\n\r\nActual Results:\r\nIf you being behaving as normal on your machine, you can see that your monitor callback is fired with every single keyDown event, and the key that was pressed.\r\n\r\nVersion:\r\nOS X 10.11.5\r\n\r\nNotes:\r\n- I believe there are some consumers of this API that are using it because of the lack of alternatives to achieve things such as idle timers (rdar://26886501) in these cases an alternative more secure API should be provided."
    email: keithbsmiley@gmail.com
    modified: "2016-07-24T20:43:16.62229Z"
    number: "27516321"
    number_intvalue: 27516321
    originated: 24-Jul-2016 13:43
    parent_number: '&{NULL_VALUE}'
    product: OS X SDK
    product_version: OS X 10.11.5
    reproducible: Always
    resolved: ""
    status: Open
    title: NSEvent global monitor should require user consent
