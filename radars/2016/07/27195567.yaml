apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "27195567"
    labels:
        datastore_id: "4587308237979648"
data:
    classification: Enhancement
    created: "2016-07-06T15:03:56.78759Z"
    description: "Summary:\r\nI was in the process of answering https://lists.swift.org/pipermail/swift-users/Week-of-Mon-20160704/002488.html\r\n\r\nWhich fundamentally boils down to \"I would like some things visible to Swift, and other things I can hide from it.\r\n\r\nIt's possible to do something like\r\n\r\n\r\nProject-Bridging-Header.h\r\n\r\n...\r\n#define SUPPRESS_OLD_FOOD 1\r\n#import \"Foodies.h\"\r\n\r\n\r\nFoodies.h\r\n\r\ntypedef NS_OPTIONS(NSInteger, FoodType)\r\n{\r\n    FoodDairy = 1 << 0,\r\n    FoodMeat = 1 << 1,\r\n    FoodMushroom = 1 << 2,\r\n\r\n#if !SUPPRESS_OLD_FOOD\r\n// Old names\r\ndairyFood = FoodDairy,\r\nmeatFood = FoodMeat,\r\nmushroomFood = FoodMushroom\r\n#endif\r\n};\r\n\r\n\r\nWith the Bridging header, but Xcode doesn't seem to process \"Generated Interface\" by using the Bridging header (it shows the old and new names and doesn't simplify the Food* names), so now there's got two versions of the final generated header - the one Xcode will show you, and the one actually used by Swift.\r\n\r\nI figure always using the Project-Bridging-Header.h when building the generated preview is a non-starter, just from a performance / general sanity point of view.\r\n\r\nWhat I really want is a predefined macro that's only set during header generation that we can query to gate things like \"this junk is purely for objective-C, it's better if Swift's generated headers doesn't even know it exists."
    email: markd@badgertronics.com
    modified: "2016-07-06T15:03:56.78781Z"
    number: "27195567"
    number_intvalue: 27195567
    originated: 7/6/2016
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Version 8.0 beta 2 (8S162m)
    reproducible: N/A
    resolved: ""
    status: Open
    title: 'Xcode8: would like a preprocessor symbol when building a generated interface'
