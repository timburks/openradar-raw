apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "27220502"
    labels:
        datastore_id: "6075592252325888"
data:
    classification: UI/Usability
    created: "2016-07-07T13:36:11.44004Z"
    description: "Summary:\nWhen Xcode generates swift code, it does not contain any type information about the class contained in the relationship. This is very painful in the new swift world. If you write your own declaration, and define a to-many relationship as `var relationship: Set<MyRelatedMO>`, things work great. \n\nAn Apple Engineer stated that this is problematic because it does not use the core-data internal set that has faulting behavior, however, it appears to behave the same in practice. The first time the set is accessed, the entire content of the set is loaded (monitored via -com.apple.CoreData.SQLDebug 1) . I tried this on a relationship with 100,000 items on both the NSSet API and on the object defined as a Set object. The engineer seemed to indicate that this was not a safe practice, but everything appears to work fine.\n\nSteps to Reproduce:\nGenerate a to-many relationship and look at the generated code.\n\nExpected Results:\nThe generated code should have type information for the relationships\n\nActual Results:\nThe generated code does not have the type information\n\nRegression:\nThis is not a regression.\n\nNotes:\nProvide additional information, such as references to related problems, workarounds and relevant attachments."
    email: brianaking@gmail.com
    modified: "2016-07-07T13:36:11.44029Z"
    number: "27220502"
    number_intvalue: 27220502
    originated: 07-Jul-2016 09:36 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 8 beta 2
    reproducible: Always
    resolved: ""
    status: Open
    title: Generated swift code does not have generic information for set / ordered set relationships
