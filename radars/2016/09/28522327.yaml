apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "28522327"
    labels:
        datastore_id: "4998540401049600"
data:
    classification: UIKit
    created: "2016-09-28T18:35:43.55326Z"
    description: "The attached project demonstrates the bug in the \". AppleColorEmojiUI\" font.\r\n\r\nhttps://github.com/master-nevi/ClippedEmoji\r\n\r\nIt appears that when an attributed string contains ONLY the .AppleColorEmojiUI font, the height iOS reports for the attributed string (using [NSAttributedString boundingRectWithSize:options:context:]) is too short, and therefore the bounding box generated for the string will clip the bottom.\r\n\r\nAs soon as a string segment with a taller font is added, done by appending any non-emoji character, the bounding box calculation is corrected.\r\n\r\nThe other emoji font: AppleColorEmoji does not appear to possess this height issue, hence the workaround to find-and-replace the font attribute. It's also unknown when iOS 10 will decide to use .AppleColorEmojiUI vs AppleColorEmoji when the [NSMutableAttributedString fixAttributesInRange:] \"fixes\" the emoji characters to use the emoji font.\r\n\r\nSteps to Reproduce:\r\n1. Add the string \"\U0001F60A\U0001F614☺️\U0001F60F\" to an NSMutableAttributedString and call [NSMutableAttributedString fixAttributesInRange:] which will fix the emoji character attributes to possess the . AppleColorEmojiUI font. \r\n2. Then add this attributed string to any UIKit text view.\r\n\r\nExpected Results:\r\nNon-clipped emoji.\r\n\r\nActual Results:\r\nThe emojis will appear clipped at the bottom.\r\n\r\nVersion:\r\niOS 10\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\niOS 10 iPhone 7 Simulator"
    email: dave11186@gmail.com
    modified: "2016-12-03T01:14:56.62829Z"
    number: "28522327"
    number_intvalue: 28522327
    originated: 09/28/2016
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "10"
    reproducible: Always
    resolved: YES
    status: Open
    title: Emoji characters getting cutoff on many text components in UIKit
