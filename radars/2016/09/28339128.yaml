apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "28339128"
    labels:
        datastore_id: "4565518577041408"
data:
    classification: UI/Usability
    created: "2016-09-16T20:57:56.70885Z"
    description: "BJ Homer16-Sep-2016 11:04 AM\r\n\r\nSummary:\r\nIf I am looking at a Swift source file and Open Quickly to jump to an Objective-C header, I instead get the generated Swift interface. That's rarely what I wanted; if I'm navigating to my own header, I'm likely to want to modify it. And once I'm on the generated header, I have to use a menu item to get back to the original source.\r\n\r\nIt's useful to be able to see the generated Swift interface for an Objective-C type, but it's disruptive and annoying for Xcode to jump to it by default. If I chose to navigate to a `.h` file, please open the actual .h file.\r\n\r\nSteps to Reproduce:\r\n1. Add a Swift file and an Objective-C header file to a project.\r\n2. Open the Swift file in the editor.\r\n3. Use \"Open Quickly\" to navigate to the Objective-C header file.\r\n\r\nExpected Results:\r\nThe header file should appear in the editor.\r\n\r\nActual Results:\r\nThe Swift generated interface appears in the editor. And because it's just generated content, I can't edit it.\r\n\r\nVersion:\r\nXcode 8.0 (8A218a)\r\nmacOS Sierra GM (16A320)\r\n\r\nNotes:\r\nThere seems to be an assumption that navigating from a Swift file to an Objective-C header is primarily done in order to inspect the existing interface. In my experience, it's *more* likely that I want to edit the header file in order to add a method or improve how the existing interface is presented in Swift. An assumption of non-editability is not justified.\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: bjhomer@gmail.com
    modified: "2016-09-16T20:57:56.70904Z"
    number: "28339128"
    number_intvalue: 28339128
    originated: 16-Sep-2016
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "8.0"
    reproducible: Always
    resolved: ""
    status: Open
    title: Jumping to Swift Interface of my own headers is disruptive and annoying.
