apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "28462184"
    labels:
        datastore_id: "5048276122337280"
data:
    classification: UI/Usability
    created: "2016-09-24T14:23:57.1236Z"
    description: |-
        Summary:

        The internal version number of Better for macOS is 100.0 (don’t ask – we got into a rejection argument with iTunes Connect when I accidentally set the version number to “2” instead of “2.0” and then couldn’t increment the build number back for the 2.0 track… anyway, long story short, after a couple of rejections near midnight, I chose the nuclear option and set the version to 100.0 and the build number to 100 (because, what could possibly go wrong, right?)

        As you can see in the screenshot, the internal version number is being presented in the Safari Extensions panel.

        Steps to Reproduce:

        1. Mess up the version number in your binary and upload it to iTunes Connect (“2” seems to work)
        2. Get into a binary rejection back-and-forth with iTunes Connect by trying 2.0 (1), 2.0 (2), 3.0 (1) etc.
        3. Get angry
        4. Set the version to 100.0 (100)
        5. Release the app
        6. Look in the Extensions panel in Safari and see Your App 100.0 from Your App as the extension name.
        7. *sigh*

        Expected Results:

        * With the App from the Mac App Store: Safari App Extensions should show the same marketing version that people see in the App Store next to the extension name (e.g., for Better, it should read Better 1.1 from Better)

        * When testing with development builds: it’s OK to show the internal version (and probably better as it provides a visual distinction to the extension being tested versus the version installed from the App Store).

        Actual Results:

        Safari App Extensions downloaded from the Mac App Store show the internal version number (100.0)

        Notes:

        People using your app should not have to know or care about the internal version and may be confused when the version of the app extension they see in Safari differs from the marketing version that they saw while downloading the app itself. Since these versions cannot be different (or the binary is rejected) it makes sense to show the marketing version. The internal version would still make sense to show when the app is being tested in the debug configuration during development.
    email: aralbalkan@gmail.com
    modified: "2016-09-24T14:23:57.12382Z"
    number: "28462184"
    number_intvalue: 28462184
    originated: 24-Sep-2016 04:22 PM
    parent_number: '&{NULL_VALUE}'
    product: Safari
    product_version: Safari 10.0 (12602.1.50.0.8)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Safari 10.0: App Extensions should show marketing version number not internal version'
