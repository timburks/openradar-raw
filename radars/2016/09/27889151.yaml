apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "27889151"
    labels:
        datastore_id: "6097892309729280"
data:
    classification: Other Bug
    created: "2016-09-28T02:49:07.45419Z"
    description: "Summary:\r\nI’ve created a type copied and pasted from the documentation for the Hashable protocol, and trying to use arrays of them in a Set fails.\r\n\r\nSteps to Reproduce:\r\n1. Create a GridPoint type:\r\n\r\n/// A point in an x-y coordinate system.\r\nstruct GridPoint {\r\n    var x: Int\r\n    var y: Int\r\n}\r\n\r\n2. Add an extension to make GridPoint conform to Hashable:\r\n\r\nextension GridPoint: Hashable {\r\n    var hashValue: Int {\r\n        return x.hashValue ^ y.hashValue\r\n    }\r\n    \r\n    static func == (lhs: GridPoint, rhs: GridPoint) -> Bool {\r\n        return lhs.x == rhs.x && lhs.y == rhs.y\r\n    }\r\n}\r\n\r\n3. Use this new type in a function that returns a Set of Arrays of GridPoints:\r\n\r\nfunc routesToBottomRight(inGridOfSize size: Int) -> Set<[GridPoint]> {\r\n    return Set<[GridPoint]>()\r\n}\r\n\r\nExpected Results:\r\nThe above code will compile. Since GridPoint implements Hashable, [GridPoint] will implement Hashable.\r\n\r\nActual Results:\r\nError message: Type '[GridPoint]' does not conform to protocol 'Hashable'\r\n\r\nVersion:\r\niOS version 10.0 (14A5341a)"
    email: SlaunchaMan@gmail.com
    modified: "2016-09-28T02:49:07.45447Z"
    number: "27889151"
    number_intvalue: 27889151
    originated: 17-Aug-2016 01:51 PM
    parent_number: '&{NULL_VALUE}'
    product: Swift Playgrounds
    product_version: iOS version 10.0 (14A5341a)
    reproducible: Always
    resolved: ""
    status: Duplicate/17144340/Open
    title: 'Swift Playgrounds: Arrays of User-Defined Type Conforming to Hashable Can’t Be Used in Sets'
