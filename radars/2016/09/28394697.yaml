apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "28394697"
    labels:
        datastore_id: "4563896690016256"
data:
    classification: Enhancemnt
    created: "2016-09-20T21:59:13.31705Z"
    description: "Summary:\r\nWhen I first started using UIActivityItemProvider I had no idea the item method was supposed to return a nonnull value. This was before things were explicitly marked as such, and the documentation doesn't say anything about it. Moreover, it seemed to work fine, and gave me the result I was after: I could customize which items were shared based on the activity, by returning nil to exclude a particular item. Or if there was an error generating the content, I could return nil to skip that item.\r\n\r\nIt looks like it was marked as nonnull a while back, and Xcode 8 finally started giving me an error about it. I've tried to find a different solution to my problem but the API seems deficient. The UIActivityItemSource protocol allows you to return a nil value from activityViewController:itemForActivityType:, so it seemed simple enough to just use that instead. But activityViewController:itemForActivityType: is called on the main thread, and expects a return value immediately. This is causing other problems for me that seem impossible to work around: http://stackoverflow.com/q/39592642/813247\r\n\r\nSteps to Reproduce:\r\nDo something like this to set up an activity view controller:\r\n\r\nJUNActivityProvider *fileProvider = [[JUNActivityProvider alloc] initWithPlaceholderItem:[NSObject new]];\r\nfileProvider.objectID = objectID;\r\nfileProvider.fileURL = fileURL;\r\n\r\nJUNActivityProvider *textProvider = [[JUNActivityProvider alloc] initWithPlaceholderItem:[NSString new]];\r\ntextProvider.objectID = objectID;\r\n\r\n...\r\n\r\nUIActivityViewController *activityController = [[UIActivityViewController alloc]\r\n    initWithActivityItems:@[fileProvider,imageProvider,textProvider,urlProvider,printFormatter]\r\n    applicationActivities:nil];\r\n\r\nThen in JUNActivityProvider (a UIActivityItemProvider subclass), create an item method that customizes the return value based on the activityType:\r\n\r\n- (id)item {\r\n\r\n    if (self.fileURL) {\r\n\r\n        if ([self.activityType isEqualToString:UIActivityTypeAirDrop]) {\r\n\r\n            // Create the file\r\n            return url;\r\n\r\n        }\r\n\r\n    } else if ([self.placeholderItem isKindOfClass:[UIImage class]]) {\r\n\r\n        if ([self.activityType isEqualToString:UIActivityTypeAirDrop] == NO &&\r\n            [self.activityType isEqualToString:UIActivityTypeMail] == NO &&\r\n            [self.activityType isEqualToString:UIActivityTypePrint] == NO) {\r\n\r\n            // Create the image\r\n            return image;\r\n\r\n        }\r\n\r\n    } else if ([self.placeholderItem isKindOfClass:[NSString class]]) {\r\n\r\n        if ([self.activityType isEqualToString:UIActivityTypeMail]) {\r\n\r\n            return @\"example one\";\r\n\r\n        } else if ([self.activityType isEqualToString:UIActivityTypeMessage] ||\r\n            [self.activityType isEqualToString:UIActivityTypeCopyToPasteboard]) {\r\n\r\n            return @\"example two\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return nil;\r\n\r\n}\r\n\r\nThe idea here is that certain items are not appropriate for certain methods of sharing. In the context of my app, it makes sense to send a file representing the item over AirDropâ€”but not an image or text.\r\n\r\nExpected Results:\r\nI'd expect the documentation, header files, and actual behavior to match up more. Given that returning nil has worked fine for years and the documentation doesn't mention the nonnull requirement, I didn't expect the header file to say otherwise. Generally I'd expect a crash if I return a nil value where it's not expected.\r\n\r\nDirectly implementing the UIActivityItemSource protocol is both limiting and requires more work. In my case it seems to be impossible to use it to do what I want. So I'd prefer to see the nullability of the item property changed to allow more flexibility.\r\n\r\nActual Results:\r\nEverything works fine, but since the item property is defined as nonnull, Xcode 8 gives an appropriate error when you choose Product > Analyze.\r\n\r\nVersion:\r\niOS 10.0.1, Xcode 8\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\niPhone 7, 256GB, AT&T\r\n\r\nAttachments:"
    email: robotspacer@gmail.com
    modified: "2016-09-20T21:59:13.31726Z"
    number: "28394697"
    number_intvalue: 28394697
    originated: 20-Sep-2016 05:58 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 10.0.1
    reproducible: N/A
    resolved: ""
    status: Open
    title: UIActivityItemProvider's item property should be nullable
