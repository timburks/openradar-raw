apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "29390569"
    labels:
        datastore_id: "4956538439467008"
data:
    classification: Other Bug
    created: "2016-11-25T20:36:59.72571Z"
    description: "Summary:\r\nWhen using the code coverage tool, it is possible to get a false negative on a line of code not being run. Specifically, in an else statement, the closing brace (}) will be marked as not being run.\r\n\r\nSteps to Reproduce:\r\n1. Write code in the form:\r\n\r\nif condition 1 {\r\n    return x\r\n} else if condition 2 {\r\n    return y\r\n} else {\r\n    return nil\r\n} //code coverage will report < 100% and mark this line as untested\r\n\r\n2. Write unit tests that exercise the code\r\n\r\n3. Turn on test coverage\r\n\r\n4. Run the unit tests\r\n\r\n5. View the coverage report. Note < 100% coverage for the file containing the code\r\n\r\n6. Click the arrow to see which code is missed. See that it's the closing braces in the method that returned nil\r\n\r\nAttached project demonstrates this\r\n\r\nExpected Results:\r\n100% code coverage\r\n\r\nActual Results:\r\n< 100% code coverage with the closing brace being marked as unrun\r\n\r\nVersion:\r\nXcode Version 8.1 (8B62)\r\nmacOS 10.12.1 (16B2555)\r\n\r\n\r\nNotes:\r\nCan workaround with this code instead:\r\nif condition 1 {\r\n    return x\r\n} else if condition 2 {\r\n    return y\r\n}\r\nreturn nil //code coverage reports 100%\r\n\r\nConfiguration:\r\nSwift\r\nCollect Test Coverage\r\n\r\nAttachments:\r\n'Test.zip' and 'Screen Shot 2016-11-25 at 1.32.07 PM.png' were successfully uploaded."
    email: stephen.gazzard@robotsandpencils.com
    modified: "2016-11-25T20:36:59.72597Z"
    number: "29390569"
    number_intvalue: 29390569
    originated: Nov. 25, 2016
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Version 8.1 (8B62)
    reproducible: Always
    resolved: ""
    status: Open
    title: Code Coverage tool tracks closing brace as not executed in else
