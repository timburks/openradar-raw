apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24526037"
    labels:
        datastore_id: "5038703596535808"
data:
    classification: Performance
    created: "2016-02-05T17:16:30.98588Z"
    description: "Bug ID 24526037\r\n\r\nDescription:\r\n\r\nUIPageViewController does not give up any of the view controllers in its internal cache when didReceiveMemoryWarning is called. Furthermore, setViewControllers:direction:animated:completed adds to the retainCount in unexpected ways.\r\n\r\n1) Calling setViewControllers:direction:animated:completed before you've added the UIPageViewController to the controller view hierarchy adds an extra ref to the first view controller that makes it never get deallocated. \r\n\r\n2) To get the UIPageViewController to clear it's internal cache, you can call setViewControllers:direction:animated:completed with the visible view controller and animated set to NO. But this will add refs to the visible view controller that never get cleared.\r\n\r\n3) You can get around 2) by first calling setViewControllers:direction:animated:completed with a dummy view controller and then the visible view controller. As long as the dummy view controller is relatively inexpensive compared to actual pages this works out well.\r\n\r\nI've attached an example project as a zip and it's also reachable at https://drive.google.com/file/d/0BzO-ucTGhRD0T3pVcklqdFhpUEU/view?usp=sharing\r\n\r\n\r\nSteps to reproduce:\r\n\r\nFor problem 1)\r\n\r\nIn the example project attached comment out RootViewController's didReceiveMemoryWarning implementation.\r\n\r\nIn viewDidLoad move the definition of startViewController and the first call to setViewControllers:direction:animated:completed before the call to self.addChildVieController (where page view controller project template originally has it).\r\n\r\nComment out the initialization of _dummyViewController.\r\n\r\nRun the app in Instruments using the Allocations tool/scheme.\r\n\r\nScroll through the pages all way to the right. You'll see DataViewController objects being alloced/dealloced but the first instance will always still be alive.\r\n\r\nFor Problem 2)\r\n\r\nIn the example project attached, in RootViewController's didReceiveMemoryWarning, uncomment [self clearPageViewControllerCacheWithExtraRef]; and comment [self clearPageViewControllerCache];\r\n\r\nComment out the initialization of _dummyViewController.\r\n\r\nRun the app in Instruments using the Allocations tool/scheme.\r\n\r\nScroll to Febuary's page. There's be 3 DataViewControllers. Note the retain count of the current visible view controller.\r\n\r\nTrigger a memory warning. Not how tthe retain count of the visible view controller has increased.\r\n\r\nSee the number of instances of DataViewController go down to one.\r\n\r\nScroll to the right to March's page. Trigger another Memory warning.\r\n\r\nSee that there's 2 DataViewControllers still alive. \r\n\r\nFor Problem 3)\r\n\r\nIn the example project attached, in RootViewController's didReceiveMemoryWarning, comment [self clearPageViewControllerCacheWithExtraRef]; and uncomment [self clearPageViewControllerCache];\r\n\r\nRun the app in Instruments using the Allocations tool/scheme.\r\n\r\nScroll to Febuary's page. There'll be four DataViewControllers. Note the retain count of the current visible view controller.\r\n\r\nTrigger a memory warning. Not how the retain count of the visible view controller is the same.\r\n\r\nSee the number of instances of DataViewController go down to two.\r\n\r\nScroll to the right to March's page. Trigger another Memory warning.\r\n\r\nSee that there's only two DataViewControllers still alive. \r\n\r\nExpected Results:\r\n\r\n[UIPageViewController didReceiveMemoryWarning] gives up ownership of view controllers that aren't on screen. Or there is an option that lets us do this ourselves if this is not an acceptable default.\r\n\r\nActual Results:\r\n\r\nThe steps to get this internal cache cleared are unclear and unintuitive. \r\n\r\nConfiguration:\r\n\r\nSeen in Simulator (iPad2) and hardware (iPad Mini, iPhone 6)\r\n\r\nVersion and Build:\r\n\r\niOS 9.2 (but seen in iOS 8.1 also)"
    email: kmensah@google.com
    modified: "2016-02-05T17:16:30.98624Z"
    number: "24526037"
    number_intvalue: 24526037
    originated: 2/5/2016
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: ios 8.1 - current
    reproducible: Always
    resolved: ""
    status: ""
    title: Getting UIPageViewController to clear its internal cache on didRecieveMemoryWarning is unintuitive
