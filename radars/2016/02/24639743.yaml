apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "24639743"
    labels:
        datastore_id: "5007400465596416"
data:
    classification: ""
    created: "2016-02-13T00:37:42.61411Z"
    description: "Summary:\r\nIf your device is set to use 24hr time (instead of AM/PM), the NSDateIntervalFormatter will still show times in AM/PM format. NSDateFormatter will correctly format using the 24hr time value.\r\n\r\nSample App:\r\nhttps://github.com/jffmrk/NSDateIntervalFormatterBug\r\n\r\nSteps to Reproduce:\r\n1 - Device is in en_US locale\r\n2 - Go to Settings -> Date & Time\r\n3 - Turn on \"24-Hour Time\" switch\r\n4 - Format a time interval using NSDateIntervalFormatter\r\n\r\nExample code:\r\n\r\n// Setup dates\r\nlet now = NSDate()\r\nlet next = NSDate(timeInterval: 14400)\r\n\r\n// This formats 24-hr preferences correctly\r\nlet dateFormatter = NSDateFormatter()\r\ndateFormatter.dateStyle = .MediumStyle\r\ndateFormatter.timeStyle = .LongStyle\r\nlet str = dateFormatter.stringFromDate(now)\r\nNSLog(\"Date: \\(str)\")\r\n        \r\n// This ignores the 24-hr preference toggle\r\nlet dateIntervalFormatter = NSDateIntervalFormatter()\r\ndateIntervalFormatter.dateStyle = .MediumStyle\r\ndateIntervalFormatter.timeStyle = .LongStyle\r\nlet strInterval = dateIntervalFormatter.stringFromDate(now, toDate: next)\r\nNSLog(\"DateInterval: \\(strInterval)\")\r\n\r\nExpected Results:\r\nNSDateIntervalFormatter should format the times using the 24hr format or 12hr format depending on device setting.\r\n\r\nActual Results:\r\nNSDateIntervalFormatter uses 12hr time format\r\n\r\nVersion:\r\niOS 9.2.1 (13D15)"
    email: jeff@jeffmark.com
    modified: "2016-02-13T00:38:44.88279Z"
    number: "24639743"
    number_intvalue: 24639743
    originated: 2/12/2016
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: 9.2.1
    reproducible: Always
    resolved: ""
    status: Open
    title: NSDateIntervalFormatter does not use 24hr time preference
