apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8829382"
    labels:
        datastore_id: "1009401"
data:
    classification: ""
    created: "2011-01-07T14:13:07.274465Z"
    description: "06-Jan-2011 02:42 PM Daniel Jalkut:\r\nCurrently there is a conundrum for App Store developers who opted to choose unique bundle IDs for their Mac App Store apps, versus their traditional, self-sold Mac apps. For example, MarsEdit may now be present in two flavors on a particular user's Mac:\r\n\r\ncom.red-sweater.marsedit - Downloaded from red-sweater.com\r\ncom.red-sweater.macappstore - Downloaded from Mac App Store\r\n\r\nThe differing bundle IDs leads to a situation where the Mac App Store has no notion of the app already \"existing\" on the computer, and so encourages the customer to buy the app. Especially given the experience of the iOS App Store, where \"Buying\" an already-downloaded app is a safe, charge-free transaction, it seems like customers will be inclined to take this risk and repurchase even though they didn't want to.\r\n\r\nA short term solution would be for the App Store app to recognize through some metadata on an app listing \"equivalent\" bundle IDs, the presence of which on the system should be considered conceptually the same as the app for sale, albeit not manageable using the Mac App Store's update facility.\r\n\r\nIn this way, the App Store app would look for either of the above bundle IDs on a user's Mac, and if present, would not display the \"Buy\" button.\r\n\r\nThanks,\r\nDaniel"
    email: jalkut@gmail.com
    modified: "2011-08-28T05:38:30.954325Z"
    number: "8829382"
    number_intvalue: 8829382
    originated: 06-Jan-2011 02:42 PM
    parent_number: '&{NULL_VALUE}'
    product: App Store
    product_version: "1.0"
    reproducible: ""
    resolved: ""
    status: Open
    title: Provide means of App Store app identifying bundle IDs of "equivalent" apps
