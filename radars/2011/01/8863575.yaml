apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8863575"
    labels:
        datastore_id: "1045401"
data:
    classification: Crash
    created: "2011-01-14T02:40:04.266071Z"
    description: "Summary:\r\nThere seems to be a bug inside the Apple OpenAL implementation that leads to a crash. The bug seems to be brought out when the OpenAL buffer queue system gets starved. This bug is tricky to reproduce, but usually happens when a system is under stress and buffer queuing can't keep up. Usually in those cases, I also do more queries to OpenAL to find out the state of OpenAL which probably makes the problem worst.\r\n\r\nAttached is a mostly reproducible test program. It uses a very small number of buffers and very small buffers to try to increase the chance of a problem. Sometimes adding more overhead to the program helps trigger the crash. Or running in simulator sometimes gives me better luck. Sometimes running other processes to slow down my machine helps too.\r\n\r\nI think this problem may also exist in Mac OS X as well as iOS, though I have a harder time reproducing it on Mac.\r\n \r\n\r\nI have pasted a backtrace of one of my crashes in the simulator. Sometimes the backtrace looks different but it always crashes on a background thread and inside Apple OpenAL implementation of OpenAL.\r\n\r\n\r\nA backtrace of a crash on thread 9\r\n\r\n(gdb) bt\r\n#0  0x00d89427 in OALSource::ClearActiveQueue ()\r\n#1  0x00d8b8ad in OALSource::GetBuffersProcessed ()\r\n#2  0x00d844cf in alGetSourcei ()\r\n#3  0x0000c748 in Update_ALmixer (data=0x0) at /Users/ewing/Source/AppleBugs/OpenALBufferQueueCrash/ALmixer/ALmixer.c:5496\r\n#4  0x0000d658 in Stream_Data_Thread_Callback (data=0x0) at /Users/ewing/Source/AppleBugs/OpenALBufferQueueCrash/ALmixer/ALmixer.c:6184\r\n#5  0x00012931 in Internal_RunThread (user_data=0x4e56ee0) at /Users/ewing/Source/AppleBugs/OpenALBufferQueueCrash/ALmixer/Isolated/SimpleThreadPosix.c:76\r\n#6  0x9961785d in _pthread_start ()\r\n#7  0x996176e2 in thread_start ()\r\n\r\n\r\n\r\n\r\nA different run/crash backtrace on thread 10.\r\n\r\n(gdb) bt\r\n#0  0x00d8d17f in CAMutex::Lock ()\r\n#1  0x00d7bde7 in OALBuffer::ReleaseBuffer ()\r\n#2  0x00d88652 in BufferQueue::RemoveQueueEntryByIndex ()\r\n#3  0x00d8b78c in OALSource::RemoveBuffersFromQueue ()\r\n#4  0x00d83b0a in alSourceUnqueueBuffers ()\r\n#5  0x0000d227 in Update_ALmixer (data=0x0) at /Users/ewing/Source/AppleBugs/OpenALBufferQueueCrash/ALmixer/ALmixer.c:5953\r\n#6  0x0000d658 in Stream_Data_Thread_Callback (data=0x0) at /Users/ewing/Source/AppleBugs/OpenALBufferQueueCrash/ALmixer/ALmixer.c:6184\r\n#7  0x00012931 in Internal_RunThread (user_data=0x4b35290) at /Users/ewing/Source/AppleBugs/OpenALBufferQueueCrash/ALmixer/Isolated/SimpleThreadPosix.c:76\r\n#8  0x9961785d in _pthread_start ()\r\n#9  0x996176e2 in thread_start ()\r\n\r\n\r\nAnother run on thread 8\r\n(gdb) bt\r\n#0  0x00d89427 in OALSource::ClearActiveQueue ()\r\n#1  0x00d8caff in OALSource::DoPostRender ()\r\n#2  0x00d7d3fd in OALContext::DoPostRender ()\r\n#3  0x00d7d468 in OALContext::ContextNotificationProc ()\r\n#4  0x00c66f29 in AudioUnitGraph::HandleRenderNotify ()\r\n#5  0x00c67148 in AudioUnitGraph::GraphRenderCallback ()\r\n#6  0x00ba1c35 in AUBase::DoRender ()\r\n#7  0x00c7d100 in AURemoteIO::PerformIO ()\r\n#8  0x00c7d4f1 in AURIOCallbackReceiver_PerformIO ()\r\n#9  0x00c71ecf in _XPerformIO ()\r\n#10 0x00bc2161 in mshMIGPerform ()\r\n#11 0x00c3dd50 in MSHMIGDispatchMessage ()\r\n#12 0x00c8049c in AURemoteIO::IOThread::Entry ()\r\n#13 0x00b91ee2 in CAPThread::Entry ()\r\n#14 0x9961785d in _pthread_start ()\r\n#15 0x996176e2 in thread_start ()\r\n\r\n\r\nThis code is part of the open source SDL related library, ALmixer. ALmixer is also used in the 3rd party SDK called Corona (featured on Apple's site). Corona has thousands of developers and hundreds of thousands of end users. (A Corona based app (Bubble Ball) just made the #2 free download today on the App Store.) So a lot of users are potentially impacted by this crash.\r\n\r\n\r\n\r\n\r\n\r\nSteps to Reproduce:\r\nBuild and run the attached program in the simulator or device. You might need to throw more things at it to stress out the system even more.\r\n\r\nExpected Results:\r\nProgram should not crash\r\n\r\nActual Results:\r\nThe program crashes\r\n\r\nRegression:\r\nSeems to happen as far as 3.0 and also possibly Mac OS X.\r\n\r\n\r\nNotes:\r\nAlso, occasionally, ALmixer reports OpenAL errors instead of crashing which shouldn't happen. This means something is failing to behave correctly in the OpenAL implementation. These are harder for me to reproduce, but they sometimes happen. The message is 'Error with unqueue: '"
    email: ewmailing@gmail.com
    modified: "2011-08-28T05:38:22.492294Z"
    number: "8863575"
    number_intvalue: 8863575
    originated: "2011-01-13"
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "4.2"
    reproducible: Sometimes
    resolved: ""
    status: Open
    title: Crash inside Apple OpenAL implementation in stressed/starved buffer queue scenar
