apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "7074833"
    labels:
        datastore_id: "1031401"
data:
    classification: Bug
    created: "2011-01-10T22:21:04.833393Z"
    description: "20-Jul-2009 10:20 AM W Lewis:\r\nSummary: \r\n\r\nThe SecKeychainItemImport() function hangs (chews CPU indefinitely) if given an input PEM file containing nothing but newline(s).\r\n\r\nSteps to Reproduce:\r\n\r\nCompile and run the short C program attached in the \"Notes\" section.\r\n\r\nExpected Results:\r\n\r\nGiven that such a file is a perfectly valid PEM file containing no items, I'd expect SecKeychainItemImport() to return success and produce a zero-length array of results. Alternatively an error code would be acceptable, if it were distinguishable from actual errors.\r\n\r\nActual Results:\r\n\r\nSecKeychainItemImport() never returns.\r\n\r\nRegression:\r\n\r\nHappens for various numbers of newlines. If given an actual 0-byte buffer, SecKeychainItemImport() will return  paramErr, which is kind of unexpected.\r\n\r\nNotes:\r\n\r\n#import <Security/Security.h>\r\n#import <CoreFoundation/CoreFoundation.h>\r\n\r\nint main(int argc, char **argv)\r\n{\r\n    unsigned char buf[10];\r\n    \r\n    memset(buf, '\\n', 10);\r\n    \r\n    CFDataRef inputData = CFDataCreate(kCFAllocatorDefault, buf, 1);\r\n    \r\n    SecKeyImportExportParameters  keyParams = (SecKeyImportExportParameters){\r\n        .version = SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION,\r\n        .flags = 0,\r\n        .passphrase = NULL,\r\n        .alertTitle = NULL,\r\n        .alertPrompt = NULL,\r\n        .accessRef = NULL,\r\n        .keyUsage = CSSM_KEYUSE_VERIFY,\r\n        .keyAttributes = CSSM_KEYATTR_EXTRACTABLE | CSSM_KEYATTR_RETURN_DATA\r\n    };\r\n    \r\n    SecExternalFormat inputFormat = kSecFormatPEMSequence;\r\n    SecExternalItemType itemType = kSecItemTypeCertificate;\r\n    CFArrayRef outItems = NULL;\r\n    OSStatus err = SecKeychainItemImport(inputData, CFSTR(\"/tmp/whatever.pem\"),\r\n                                         &inputFormat, &itemType, 0, &keyParams, NULL, &outItems);\r\n    \r\n    printf(\"SecKeychainItemImport returned err=%ld\\n\", (long)err);\r\n    if (err == noErr)\r\n        printf(\"-> outItems contains %u items\\n\", (unsigned)CFArrayGetCount(outItems));\r\n    \r\n    CFRelease(inputData);\r\n}\r\n\r\n\r\nAnalysis of sampling a.out (pid 303) every 1 millisecond\r\nCall graph:\r\n    8803 Thread_2907\r\n      8803 start\r\n        8803 main\r\n          8803 SecKeychainItemImport\r\n            8803 impExpParsePemToImportRefs\r\n              7926 impExpImportSinglePEM(char const*, unsigned int, __CFArray*)\r\n                3711 getLine(char const*, unsigned int, unsigned int*)\r\n                  2000 malloc\r\n                    1539 malloc_zone_malloc\r\n                      997 szone_malloc\r\n                        997 szone_malloc\r\n                      542 malloc_zone_malloc\r\n                    461 malloc\r\n                  1027 __memcpy\r\n                    1027 __memcpy\r\n                  602 getLine(char const*, unsigned int, unsigned int*)\r\n                  82 dyld_stub_malloc_zone_malloc\r\n                    82 dyld_stub_malloc_zone_malloc\r\n                3081 free\r\n                  2201 szone_free\r\n                    2201 szone_free\r\n                  555 free\r\n                  325 malloc_zone_free\r\n                    325 malloc_zone_free\r\n                761 impExpImportSinglePEM(char const*, unsigned int, __CFArray*)\r\n                146 strchr\r\n                  146 strchr\r\n                68 dyld_stub_malloc_zone_free\r\n                  68 dyld_stub_malloc_zone_free\r\n                54 dyld_stub_malloc\r\n                  54 dyld_stub_malloc\r\n                43 dyld_stub_memmove\r\n                  43 dyld_stub_memmove\r\n                29 malloc_zone_free\r\n                  29 malloc_zone_free\r\n                27 strlen\r\n                  27 strlen\r\n                6 memmove\r\n                  6 memmove\r\n              593 strlen\r\n                593 strlen\r\n              118 dyld_stub_strchr\r\n                118 dyld_stub_strchr\r\n              91 dyld_stub_free\r\n                91 dyld_stub_free\r\n              75 dyld_stub_strlen\r\n                75 dyld_stub_strlen\r\n\r\n\r\n\r\n10-Jan-2011 02:24 PM W Lewis:\r\nProblem persists unchanged in OS X 10.6.6 (10J537).\r\n\r\n\r\n01-Jun-2011 12:28 PM W Lewis:\r\nConfirmed fixed in 10.7/11A390."
    email: wiml@omnigroup.com
    modified: "2012-03-27T21:28:07.44196Z"
    number: "7074833"
    number_intvalue: 7074833
    originated: 20-Jul-2009
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: ""
    reproducible: Always
    resolved: 01-Jun-2011
    status: Closed
    title: SecKeychainItemImport() hangs if given an empty file
