apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "8543491"
    labels:
        datastore_id: "1041401"
data:
    classification: Other Bug
    created: "2011-01-13T03:36:30.874186Z"
    description: "'SpaceRocksOpenALStreaming2_conebug.zip' was successfully uploaded\r\n\r\n12-Oct-2010 04:17 PM Eric Wing:\r\nSummary:\r\nSetting AL_CONE_OUTER_GAIN to 0.0 triggers an OpenAL error, but it shouldn't. 0.0 is a legit value according to the OpenAL spec.\r\n\r\nSteps to Reproduce:\r\nBuild and run the attached program in the Xcode 4.1 Simulator. (I haven't tried the device yet.) Watch the console for NSLog error messages particularly when the missiles fire. \r\n\r\nThere are two parts to look at in the code:\r\n\r\nIn EWSoundSourceObject.m look for:\r\n\r\n\r\n\t\t// Apple BUG HERE: Gain at 0.0 fails when it shouldn't. New to iOS 4.1 simulator.\r\n\t\tconeOuterGain = 0.0;\r\n\r\nand further down in the file look for:\r\n\r\n\t\talSourcef(sourceID, AL_CONE_OUTER_GAIN, coneOuterGain);\r\n\t\tal_error = alGetError();\r\n\t\tif(AL_NO_ERROR != al_error)\r\n\t\t{\r\n\t\t\tNSLog(@\"alSourcei AL_CONE_OUTER_GAIN: %s, %f\", alGetString(al_error), coneOuterGain);\r\n\t\t}\r\n\r\n\r\nExpected Results:\r\nShouldn't get an error.\r\n\r\nActual Results:\r\nGet errors.\r\n\r\nRegression:\r\nThis worked fine in 3.x and I think 4.0. I started noticing the problem in the 4.1 simulator.\r\n\r\nNotes:"
    email: ewmailing@gmail.com
    modified: "2011-08-28T05:39:35.641954Z"
    number: "8543491"
    number_intvalue: 8543491
    originated: "2010-10-12"
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "4.0"
    reproducible: Always
    resolved: ""
    status: Open
    title: AL_CONE_OUTER_GAIN set to 0 triggers OpenAL error when it shouldn't
