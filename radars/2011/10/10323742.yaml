apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10323742"
    labels:
        datastore_id: "1402405"
data:
    classification: Enhancement
    created: "2011-10-21T12:22:32.527964Z"
    description: "Summary:\r\nAssuming the kSecZLibEncoding encoder/decoder transforms are wrappers around zlib, supporting gzip format in addition to zlib format and raw deflate is essentially free, saving users of the API from implementing near-identical transforms.\r\n\r\nSteps to Reproduce:\r\nPass gzip data to a transform created with SecDecodeTransformCreate(kSecZLibEncoding, ...)\r\n\r\nExpected Results:\r\nDecompressed data.\r\n\r\nActual Results:\r\ncom.apple.security.transforms.error error 10 - Zlib error#-3\r\n\r\nRegression:\r\nn/a\r\n\r\nNotes:\r\nGzip format differs from zlib format only in that it has a different header. For decompression, transparent gzip support in zlib is enabled by adding 32 to the windowBits parameter to inflateInit2(). (inflateInit() is equivalent to inflateInit2(..., 15).) If it is preferable to control gzip support with an explicit attribute, you can require a gzip header by adding 16 instead of 32.\r\n\r\nSimilarly, it is possible to generate gzip format with zlib simply by adding 16 to the windowBits parameter of deflateInit2(). (deflateInit() is equivalent to deflateInit2(..., Z_DEFLATED, 15, 8, Z_DEFAULT_STRATEGY).) In this case, an explicit parameter would be required. Using deflateInit2() to generate gzip data is somewhat limited since the metadata in the gzip header will be empty, but this would still be convenient."
    email: jens.ayton@gmail.com
    modified: "2011-12-08T15:10:00.931372Z"
    number: "10323742"
    number_intvalue: 10323742
    originated: "2011-10-21"
    parent_number: "10435779"
    product: Mac OS X
    product_version: "10.7"
    reproducible: n/a
    resolved: ""
    status: Open
    title: 'Security.framework: support for gzip format in kSecZLibEncoding transforms'
