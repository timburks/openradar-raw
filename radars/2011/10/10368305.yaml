apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10368305"
    labels:
        datastore_id: "1416406"
data:
    classification: Serious bug
    created: "2011-10-30T20:08:15.791135Z"
    description: "See test project here: http://dl.dropbox.com/u/366830/Bugs/nsseterror.zip\r\n\r\nSummary:\r\n\r\nWhen running in 32 bit mode, (including on iOS), NSSet adds duplicate NSNumbers with equivalent values (isEqual returns YES on both added objects).\r\n\r\nThe NSSet documentation is somewhat ambiguous about what method it uses to decide object uniqueness in the collection.\r\n\r\nSteps to Reproduce:\r\n\r\n1) Please see attached test project\r\n\r\n2) See this code for an overview\r\n\r\n\tNSSet *testSet = [[NSSet alloc] initWithObjects:[NSNumber numberWithInt:1], [NSNumber numberWithBool:1], nil];\r\n\r\n\tNSLog(@\"Test set %@\", testSet);\r\n\r\nActual results:\r\n\r\nNSLog(@\"Test set %@\", testSet);\r\n\r\nOutput, 2011-10-30 01:25:06.507 nsseterror[56108:707] Test set {(\r\n    1,\r\n    1\r\n)}\r\n\r\nExpected results\r\n\r\n2011-10-30 01:19:47.706 nsseterror[56084:707] Test set {(\r\n    1\r\n)}\r\n\r\nNotes:\r\n([[NSNumber numberWithBool:YES] isEqual:[NSNumber numberWithInt:1]])\r\n\r\nEvaluates to YES on both 64 bit and 32 bit\r\n\r\nThis affects NSCountedSet as well.\r\n\r\nI found this bug while using an NSCountedSet with countForObject trying to find NSNumbers created by Core Data booleans and finding that numberWithInt would work (returned the right object count) but not numberWithBool (returned 0)"
    email: santusmarc@gmail.com
    modified: "2011-10-30T20:08:15.791443Z"
    number: "10368305"
    number_intvalue: 10368305
    originated: Sun Oct 30 2011
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X SDK
    product_version: 10.7.2
    reproducible: Always
    resolved: ""
    status: Open
    title: NSSet with NSNumber ignores isEqual and adds duplicate objects (32 bits only)
