apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "9748916"
    labels:
        datastore_id: "1229422"
data:
    classification: Enhancement
    created: "2011-07-09T12:34:54.252236Z"
    description: "Summary:\r\nI would like Xcode to treat the corresponding unit test file for the selected class as a counterpart.\r\n\r\n\r\nSteps to Reproduce:\r\n1. Select a .m file, which we will call Foo.m\r\n2. Use the Navigate > Jump to Next Counterpart in Assistant Editor menu item (you may need to hold down the Option ⌥ key for it to become visible).\r\n3. Repeat #2.\r\n\r\n\r\nExpected Results:\r\nAt step #2, it will select Foo.h. Then, at step #3, I would like it to select the unit test file corresponding to the Foo class.\r\n\r\n\r\nActual Results:\r\nIt selects Foo.h, but does not proceed on the next invocation to select the unit test file(s).\r\n\r\n\r\nRegression:\r\nN/A\r\n\r\n\r\nNotes:\r\nI use a simple pattern for my unit tests: for a class named Foo, the unit test class is named FooTests and lives in FooTests.m. I do not have a corresponding FooTests.h unless I wish to subclass FooTests for some reason (perhaps testing concrete subclasses of an abstract class). Other users may use FooTest.h/m, so it would probably be wise to support both.\r\n\r\nIn the event of a user having both .h and .m files for their unit test class (as is the default with the templates in Xcode 4), it should include both of them in the counterparts list. I would suggest that the order be: class implementation, class header, unit test implementation, unit test header. (Subtracting whichever is in the primary editor, obviously.)\r\n\r\nIf the unit test files are selected, then the class files should still be in the counterparts list.\r\n\r\nI like to have all my tests in $(SRCROOT)/Tests, but this may vary widely. I would be willing to relocate the test class beside the original class if it would make this feature more reliable.\r\n\r\nAs a workaround, you can select a file manually in the assistant editor; however, there is no quick-and-easy shortcut for this, and you have to manage it yourself; it isn’t updated when you select another class file in the primary editor.\r\n\r\nAs another (untested) workaround, assuming you set up a build rule to treat .test files as though they were .m files, you could make the test file be Foo.test and place it alongside Foo.h/m; this is, however, invalid for aesthetic reasons. One should not have to jump through this kind of weird hoop :)\r\n\r\nHaving my unit tests right beside the class implementation is a great reminder to test, and having the unit tests in the primary editor while the class itself is in the assistant editor is a great way to do test-driven development."
    email: rix.rob@gmail.com
    modified: "2011-08-28T05:35:47.502109Z"
    number: "9748916"
    number_intvalue: 9748916
    originated: 09-Jul-2011 08:33 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 4
    reproducible: Always
    resolved: ""
    status: Open
    title: Treat unit test files as counterparts of class files
