apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "9724315"
    labels:
        datastore_id: "1236404"
data:
    classification: Serious Bug
    created: "2011-07-05T19:43:06.067037Z"
    description: "The Xcode templates for new iPhone applications create an NSAutoreleasePool in their main() function. This is wrong, as any object released without a pool will end up in this autorelease pool, which persists for the entire duration of the application. So effectively the object is still leaked.\r\n\r\nUsually, if there is no autorelease pool in place, the runtime logs an error message about the missing pool and tells the developer to set a breakpoint on _NSAutoreleaseNoPool to find where the pool-less autorelease happens. The top-level NSAutoreleasePool as found in the templates thus actually *hides* this leak from the users.\r\n\r\nUIApplicationMain() should build its own autorelease pool as needed. If someone thinks they really need to run ObjC code before calling UIApplicationMain() (and they can't do the same work in applicationDidFinishLaunching: or the likes), they can always create a pool *before* UIApplicationMain(). Since UIApplicationMain() is documented to never return (like exit()), there is no point in having commands following it anyway. The pool would never get released.\r\n\r\nPlease fix the templates, or provide an FAQ or other documentation why this should be necessary on iOS (when it's clearly unneeded on Mac)."
    email: kusterer@gmail.com
    modified: "2011-08-28T05:35:53.28906Z"
    number: "9724315"
    number_intvalue: 9724315
    originated: 05-Jul-2011 09:38 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: "4"
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Autorelease pool in main() in Xcode templates is wrong
