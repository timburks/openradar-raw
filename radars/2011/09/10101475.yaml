apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10101475"
    labels:
        datastore_id: "1327415"
data:
    classification: UI/Usability
    created: "2011-09-09T19:37:07.211174Z"
    description: "Summary:\r\n\r\nWhen a sandboxed app requests an icon for a special folder like ~/Downloads a generic folder icon is returned instead of the standard icon shown in Finder.\r\n\r\nSteps to Reproduce:\r\n\r\nExecute the following code in a sandboxed Cocoa app with the com.apple.security.files.downloads.read-write entitlement:\r\n\r\nNSString *downloadsPath = [@\"~/Downloads\" stringByExpandingTildeInPath];\r\nNSImage *icon = [[NSWorkspace sharedWorkspace] iconForFile:downloadsPath];\r\n[[icon TIFFRepresentation] writeToFile:[downloadsPath stringByAppendingPathComponent:@\"folder.tiff\"] atomically:NO];\r\n\r\nNSURL *url = [NSURL fileURLWithPath:downloadsPath];\r\nNSDictionary *values = [url resourceValuesForKeys:[NSArray arrayWithObject:NSURLEffectiveIconKey] error:NULL];\r\nicon = [values objectForKey:NSURLEffectiveIconKey];\r\n[[icon TIFFRepresentation] writeToFile:[downloadsPath stringByAppendingPathComponent:@\"folder2.tiff\"] atomically:NO];\r\n\r\nExpected Results:\r\n\r\nBoth image files contain the standard Downloads folder icon shown in Finder.\r\n\r\nActual Results:\r\n\r\nThe folder image is a generic folder icon and the folder2 image is a symlink folder icon.\r\n\r\nRegression:\r\n\r\nThe example code works as expected in non-sandboxed applications."
    email: matt@alloysoft.com
    modified: "2011-11-09T02:15:41.714919Z"
    number: "10101475"
    number_intvalue: 10101475
    originated: 09-Sep-2011
    parent_number: "9720925"
    product: Mac OS X
    product_version: 10.7.1
    reproducible: Always
    resolved: ""
    status: Duplicate/9720925
    title: 'App Sandbox: NSWorkspace and NSURL return generic icons for special folders'
