apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10207615"
    labels:
        datastore_id: "1364402"
data:
    classification: Other Bug
    created: "2011-09-29T15:19:54.457677Z"
    description: "Summary:\r\n\r\nWhen a NSManagedObjectContext is saved with both inserts and updates/deletes and an NSFetchedResultsController merges those changes, the NSFetchedResultsControllerDelegate methods are called twice, once for inserts and again for updates/deletes.\r\n\r\nThis causes a situation where - controllerDidChangeContent: is sent while the fetched results controller is in an intermediate state, having only processed a portion of the changes in the change notification.\r\n\r\nI've tested this in both the iPhone Simulator 4.3.2 and on an iPhone running iOS 4.3.5, with identical results.\r\n\r\n\r\nSteps to Reproduce:\r\n\r\nAttached is the CoreDataBooks sample project, updated with a toolbar button that triggers the behavior. Console messages are logged when each delegate method is called.\r\n\r\nThe steps to reproduce are:\r\n\r\n1. Query results using an NSFetchedResultsController\r\n2. Insert a record and update or delete another record in a separate context.\r\n3. Save the context\r\n4. The NSFetchedResultsController will process the change notification and call the delegate methods twice, once for the insert and again for the update/delete.\r\n\r\n\r\nExpected Results:\r\n\r\n- controllerWillChangeContent:\r\nprocess all inserts, updates, moves, and deletes\r\n- controllerDidChangeContent:\r\n\r\nThe documentation for NSFetchedResultsControllerDelegate is not explicit that this is the intended behavior, but it does hint at it:\r\n\r\n\"Rather than responding to changes individually (as illustrated in “Typical Use”), you could just implement controllerDidChangeContent: **(which is sent to the delegate when all pending changes have been processed)** to reload the table view.\"\r\n\r\nI expect the console log from the attached sample app to look like this:\r\n\r\n2011-09-29 11:02:51.573 CoreDataBooks[10229:b603] --> content will change\r\n2011-09-29 11:02:51.574 CoreDataBooks[10229:b603] did change object\r\n2011-09-29 11:02:51.575 CoreDataBooks[10229:b603] insert object\r\n2011-09-29 11:02:51.579 CoreDataBooks[10229:b603] did change object\r\n2011-09-29 11:02:51.581 CoreDataBooks[10229:b603] delete object\r\n2011-09-29 11:02:51.584 CoreDataBooks[10229:b603] did change object\r\n2011-09-29 11:02:51.585 CoreDataBooks[10229:b603] update object\r\n2011-09-29 11:02:51.586 CoreDataBooks[10229:b603] --> content did change\r\n2011-09-29 11:02:51.587 CoreDataBooks[10229:b603] fetched objects count: 11\r\n\r\n\r\nActual Results:\r\n\r\n– controllerWillChangeContent:\r\nprocess all inserts\r\n– controllerDidChangeContent:\r\n\r\nprocess updates and deletes:\r\n– controllerWillChangeContent:\r\nprocess all updates, moves, and deletes\r\n– controllerDidChangeContent:\r\n\r\nThe actual console log from the attached sample app looks like this:\r\n\r\n2011-09-29 11:02:51.573 CoreDataBooks[10229:b603] --> content will change\r\n2011-09-29 11:02:51.574 CoreDataBooks[10229:b603] did change object\r\n2011-09-29 11:02:51.575 CoreDataBooks[10229:b603] insert object\r\n2011-09-29 11:02:51.575 CoreDataBooks[10229:b603] --> content did change\r\n2011-09-29 11:02:51.576 CoreDataBooks[10229:b603] fetched objects count: 12\r\n2011-09-29 11:02:51.578 CoreDataBooks[10229:b603] --> content will change\r\n2011-09-29 11:02:51.579 CoreDataBooks[10229:b603] did change object\r\n2011-09-29 11:02:51.581 CoreDataBooks[10229:b603] delete object\r\n2011-09-29 11:02:51.584 CoreDataBooks[10229:b603] did change object\r\n2011-09-29 11:02:51.585 CoreDataBooks[10229:b603] update object\r\n2011-09-29 11:02:51.586 CoreDataBooks[10229:b603] --> content did change\r\n2011-09-29 11:02:51.587 CoreDataBooks[10229:b603] fetched objects count: 11\r\n\r\n\r\nNotes:\r\n\r\nThis definitely looks like a bug to me, but if it's the intended behavior, then the documentation should be updated to clearly describe this behavior.\r\n\r\n\r\nAttachment: http://yaychris.com/radar/10207615/CoreDataBooks.zip\r\n\r\n\r\n\r\n07-Oct-2011 05:15 PM Apple Developer Bug Reporting Team :\r\nPlease test this issue with the iOS 5 GM seed (Build #: 9A334) and reply back with your results.\r\n\r\niOS GM seed 9A334\r\nhttps://developer.apple.com/devcenter/ios/index.action#\r\nDate Posted: October 4th, 2011\r\n\r\n\r\n\r\n10-Oct-2011 10:39 AM Chris Jones:\r\nBuilt against the iOS 5 SDK in Xcode 4.2 4D199 and tested on the Simulator running 9A334 and experienced the same issue described in this report."
    email: chrisdavidjones@gmail.com
    modified: "2011-10-10T14:40:59.502735Z"
    number: "10207615"
    number_intvalue: 10207615
    originated: 29-Sep-2011 11:16 AM
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: "4.3"
    reproducible: Always
    resolved: ""
    status: Open
    title: NSFetchedResultsControllerDelegate methods are called twice
