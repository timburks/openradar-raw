apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10421964"
    labels:
        datastore_id: "1424403"
data:
    classification: Serious Bug
    created: "2011-11-09T22:24:35.290208Z"
    description: "09-Nov-2011 02:20 PM Colin Cornaby:\r\nSummary:\r\nWe have an app store application that uses an AVCaptureSession to continuously capture frames from the camera for augmented reality use. The capture session is active as long as the user is within a specific tab.\r\n\r\nThe view within the tap starts the capture session on viewDidLoad:, and only starts/stops the application on viewWillDisapear and viewDidAppear.\r\n\r\nFrom our understanding, iOS should automatically handle shutting down and restarting our capture session for us when the app goes into the background. Generally, this seems to be what occurs. We get proper session interrupted and session resumed messages when we move between background and foreground. However, occasionally the capture session fails to resume, and we get one of the following messages logged to the console.\r\n\r\n- The \"back camera access not allowed in background\" message.\r\n- A console log like the following:\r\nOct 27 17:05:51 unknown misd[3273] <Notice>: Airplane Mode is ON\r\nOct 27 17:05:51 unknown misd[3273] <Info>: checking for carrier provisioning\r\nOct 27 17:05:51 unknown misd[3273] <Info>: carrier service is available\r\nOct 27 17:05:51 unknown misd[3273] <Info>: maximum number of wireless tethered hosts is 5\r\nOct 27 17:05:51 unknown misd[3273] <Debug>: published changes: success\r\nOct 27 17:05:53 unknown misd[3273] <Debug>: attached to SpringBoard (0x1c528fe0, port 0x4b3f)\r\nOct 27 17:05:53 unknown misd[3273] <Debug>: detached from SpringBoard (0x1c528fe0, port 0x1c529020)\r\nOct 27 17:05:55 unknown mediaserverd[686] <Error>: <<<< FIGSERVER >>>> FigPlayerRemoteServer_KillAndForceCrashReport: RPCTimeout message received to terminate [686] with reason 'fig rpc timeout -- frlremote_AssureFormatReaderSync'\r\nOct 27 17:05:56 unknown DigimarcDiscover[3445] <Warning>: DMVideoCaptureLib AVCaptureSessionWasInterruptedNotification\r\nOct 27 17:05:56 unknown DigimarcDiscover[3445] <Warning>: DMVideoCaptureLib AVCaptureSessionDidStopRunningNotification\r\nOct 27 17:05:56 unknown DigimarcDiscover[3445] <Warning>: DMVideoCaptureLib AVCaptureSessionInterruptionEndedNotification\r\nOct 27 17:05:56 unknown ReportCrash[3454] <Error>: Saved crashreport to /Library/Logs/CrashReporter/mediaserverd-2011-10-27-170555.plist using uid: 0 gid: 0, synthetic_euid: 0 egid: 0\r\nOct 27 17:05:56 unknown mediaserverd[686] <Error>: <<<< FIGSERVER >>>> FigPlayerRemoteServer_KillAndForceCrashReport: RPCTimeout message received; stackshot generated\r\nOct 27 17:05:56 unknown mediaserverd[686] <Error>: <<<< FIGSERVER >>>> FigPlayerRemoteServer_KillAndForceCrashReport: TERMINATING our process [686]\r\nOct 27 17:05:56 unknown MobileMusicPlayer[3036] <Warning>: _serverConnectionDiedNotification. Info -- notification=NSConcreteNotification 0x1fda1a50 {name = AVController_ServerConnectionDiedNotification; object = <AVController: 0x1fda9ba0>}, AVController = <AVController: 0x1fda9ba0>, currentTime = 0.00\r\nOct 27 17:05:56 unknown DigimarcDiscover[3445] <Warning>: \r\n\tapplicationWillEnterForeground\r\n\r\nWe have also noticed this behavior on iOS 4.3.5 and 4.3.3.\r\n\r\nSteps to Reproduce:\r\n1) Use the application for an unknown period of time.\r\n2) Leave the application, and possibly interact with other applications.\r\n3) Resume the application.\r\n\r\nExpected Results:\r\nThe capture session should properly resume and the camera preview should be working.\r\n\r\nActual Results:\r\nThe capture session will fail to restart, and the camera preview will remain black.\r\n\r\nRegression:\r\nWe had noticed this behavior in previous versions of our application in which we had specifically tried to start the capture session manually when our application resumed. We removed this behavior and let the system manage resumption, and it temporarily seemed to cut down on this behavior. After making some changes to our application, the behavior began to re-surface. We are not sure if changes may have brought this issue back, but we don't have access to enough information to determine that. In addition, the crashing of mediaserverd happens outside our process.\r\n\r\nWe were advised by DTS to create a bug.\r\n\r\nTabbing out and tabbing back (which calls stop/start on the capture session) will make the capture session start again.\r\n\r\nNotes:\r\nThis being observed in a shipping application and we consider it a critical bug.\r\n\r\n14-Nov-2011 02:58 PM Colin Cornaby:\r\nQA encountered this problem today and had a different log message appear:\r\n\r\nNov 14 14:32:16 unknown DigimarcDiscover[1356] <Warning>: DMVideoCaptureLib AVCaptureSessionInterruptionEndedNotification\r\nNov 14 14:32:16 unknown kernel[0] <Debug>: AppleH4CamIn::newUserClient\r\nNov 14 14:32:16 unknown kernel[0] <Debug>: AppleH4CamInUserClient::init\r\nNov 14 14:32:16 unknown kernel[0] <Debug>: AppleH4CamInUserClient::start\r\nNov 14 14:32:16 unknown kernel[0] <Debug>: AppleH4CamIn::setPowerStateGated: 1\r\nNov 14 14:32:16 unknown kernel[0] <Debug>: AppleH4CamIn::power_on_hardware\r\nNov 14 14:32:16 unknown kernel[0] <Debug>: AppleH4CamIn::ISP_Init - Sending full-res lens-shading table for back-camera to firmware\r\nNov 14 14:32:17 unknown DigimarcDiscover[1356] <Warning>: DMVideoCaptureLib AVCaptureSessionDidStartRunningNotification\r\n\r\nThe camera did not resume after the AVCaptureSessionDidStartRunningNotification."
    email: colin.cornaby@gmail.com
    modified: "2011-11-14T22:59:42.24382Z"
    number: "10421964"
    number_intvalue: 10421964
    originated: 09-Nov-2011 02:20 PM
    parent_number: '&{NULL_VALUE}'
    product: iPhone/iPod Touch
    product_version: 9A334
    reproducible: Sometimes
    resolved: ""
    status: Open
    title: Camera Capture Session Sometimes Fails To Resume After Application Suspension
