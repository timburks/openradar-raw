apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10460259"
    labels:
        datastore_id: "1425407"
data:
    classification: Enhancement
    created: "2011-11-17T03:34:18.976188Z"
    description: "Mac OS X Sandboxing needs a way to allow apps like Xcode where the user would open the xcodeproj folder, but  the app also needs to access files in the same folder or subfolders.\r\n\r\nMy concrete example is our Mac App Store app Linguan. This parses the xcodeproj for the structure of the project and then needs to read and modify the Localizable.strings files which are located in the lang.lproj subfolders.\r\n\r\nThis can be solved either by a permanent exception allowing Linguan to access all files everywhere, or by the following idea:\r\n\r\nHow about adding a file access mode that exceeds the sandbox access to the whole folder if the user selects a file?\r\n\r\nWithout such a solution I would have to make my app clunkier to use because I would have to change it for users to open the whole project folder instead of the xcodeproj. This is inconvenient because right now the app can register itself for .strings and .xcodeproj \"files\" to open these via \"Open In\".  You cannot however register folders to be openable by your app. \r\n\r\nAlso another problem for the user is that I would have to explain to him why he no longer can open the xcodeproj but instead needs to select the folder. Linguan has two modes (single strings file, project mode) which presently are both accessible via the same open file menu. \r\n\r\nSo by extending Sandboxing as suggested above you still permit the same unified experience by the user while still limiting access to files outside of the chosen project."
    email: oliver.drobnik@gmail.com
    modified: "2011-11-17T03:34:18.976585Z"
    number: "10460259"
    number_intvalue: 10460259
    originated: 11/17/2011
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: 10.7.2
    reproducible: Always
    resolved: ""
    status: Open
    title: Sandboxing needs to support project-based apps
