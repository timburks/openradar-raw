apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "10490954"
    labels:
        datastore_id: "1450403"
data:
    classification: Hang
    created: "2011-11-28T17:36:50.492227Z"
    description: "28-Nov-2011 05:34 PM Matt Mower:\r\n'TestGCD.zip' and 'Shaddam.spx' were successfully uploaded\r\n\r\n28-Nov-2011 05:34 PM Matt Mower:\r\nSummary:\r\n\r\nUsing a queue with DISPATCH_QUEUE_CONCURRENT can hang your applications Cocoa UI when you mouse into the menu.\r\n\r\nSteps to Reproduce:\r\n\r\nSchedule a number of high-CPU blocks onto the queue. At the point where the queue is fully loaded try to use the menubar of the application. The main thread will get blocked and the app will beach-ball.\r\n\r\nPLEASE SEE EXAMPLE PROJECT ATTACHED.\r\n\r\nExpected Results:\r\n\r\nNo blockage on the main thread.\r\n\r\nActual Results:\r\n\r\nThe main thread is blocked until the queue has finished processing all queued blocks. Here's the stack trace:\r\n\r\n#0\t0x00007fff8e4936b6 in semaphore_wait_trap ()\r\n#1\t0x00007fff8965a03e in _dispatch_semaphore_wait_slow ()\r\n#2\t0x00007fff8f7b72c9 in -[NSXPCConnection sendMessage:waitForAck:] ()\r\n#3\t0x00007fff8f782852 in _CFXNotificationPost ()\r\n#4\t0x00007fff8f793da8 in CFNotificationCenterPostNotification ()\r\n#5\t0x00007fff924b584a in HIS_XPC_CFNotificationCenterPostNotification ()\r\n#6\t0x00007fff8f4b5f2f in BroadcastToolboxMessage ()\r\n#7\t0x00007fff8f4279ef in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned int, unsigned int, __CFDictionary*, unsigned char, unsigned char*) ()\r\n#8\t0x00007fff8f42aff5 in DrawTheMenu(MenuSelectData*, __CFArray**, unsigned char, unsigned char*) ()\r\n#9\t0x00007fff8f42b4ff in MenuChanged(MenuSelectData*, unsigned char, unsigned char) ()\r\n#10\t0x00007fff8f2fccaf in TrackMenuCommon(MenuSelectData&, unsigned char*) ()\r\n#11\t0x00007fff8f2f818f in MenuSelectCore(MenuData*, Point, double, unsigned int, OpaqueMenuRef**, unsigned short*) ()\r\n#12\t0x00007fff8f2f780e in _HandleMenuSelection2 ()\r\n#13\t0x00007fff888e44ce in _NSHandleCarbonMenuEvent ()\r\n#14\t0x00007fff88879941 in _DPSNextEvent ()\r\n#15\t0x00007fff88878cf5 in -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] ()\r\n#16\t0x00007fff8887562d in -[NSApplication run] ()\r\n#17\t0x00007fff88af480c in NSApplicationMain ()\r\n#18\t0x00000001000015d2 in main at /Volumes/Corrino/matt/Projects/smartfish/TestGCD/TestGCD/main.m:13\r\n\r\nNotes:\r\n\r\nUncommenting the line to change the concurrent queue to use a low priority queue works around the problem but it seems like NSXPCConnection should be using a higher priority queue itself."
    email: matt.mower@gmail.com
    modified: "2011-11-28T17:36:50.492572Z"
    number: "10490954"
    number_intvalue: 10490954
    originated: 28/11/2011
    parent_number: '&{NULL_VALUE}'
    product: MAC OS X
    product_version: 10.7.2
    reproducible: Always
    resolved: ""
    status: Open
    title: Fully-loaded global concurrent queue hangs NSXPCConnection and Cocoa UI
