apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "5006274"
    labels:
        datastore_id: "1161402"
data:
    classification: Enhancement
    created: "2011-04-06T09:40:33.983878Z"
    description: "17-Feb-2007 04:28 PM Dair Grant:\r\nI have a CF object wrapper, which uses the CFxxxCreateCopy APIs to attempt to \"copy\" immutable objects via a retain wherever possible.\r\n\r\nIn practice it looks like most (all?) of the CF types except for CFString do not implement this optimisation, and simply create a new object even if they were asked to copy an immutable object.\r\n\r\nI would like to request that this behaviour be improved for all types, so that copying all immutable objects will simply be a retain.\r\n\r\n\r\nI have a very common object type which carries a CFData internally, which it creates as an immutable 0-byte data and then replaces it with a mutable CFData object on demand.\r\n\r\nWe spend about 5% of the time in malloc/free, creating and destroying new copies of these immutable objects (as our objects come into existence, they use CFDataCreateCopy on a global CFDataRef to ideally avoid doing anything but a retain - unfortunately since CF always duplicates CFData objects, this gives us no benefit at present)."
    email: dairgrant@gmail.com
    modified: "2011-08-28T05:51:13.851846Z"
    number: "5006274"
    number_intvalue: 5006274
    originated: 17-Feb-2007
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Improve CFxxxCreateCopy performance
