apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "4872308"
    labels:
        datastore_id: "1156403"
data:
    classification: Feature (New)
    created: "2011-04-06T09:43:35.970969Z"
    description: "08-Dec-2006 04:50 PM Dair Grant:\r\nThe FSCopyObject and FSMoveObject APIs provide a simple and robust way for applications to copy or move arbitrary filesystem objects around (including progress information, making them ideal for in-application copy operations).\r\n\r\nAlthough they can be set to fail/skip if some items can't be read, it would be useful if these APIs could support an additional flag which would prompt the user to authorise if necessary.\r\n\r\n\r\nE.g., at present an application which wants to copy a file (with progress information, so shelling out to ditto is not an option) needs to:\r\n\r\n1. Check to see if the destination folder can't be written to.\r\n2. Save the current permissions, run an authorized chmod command to make it writeable.\r\n3. Perform the FSCopyObject operation, updating the UI in response to progress.\r\n4. Restore the original permissions.\r\n\r\nAlthough this works for writing, it does mean the destination directory has its permissions made writeable for the duration (and it also doesn't handle the case where the user doesn't have permission to read the source items, but could if they were authorised).\r\n\r\n\r\nOne workaround would be to create a helper tool that performs FSCopyObject and emits progress information, which can be launched with authorisation.\r\n\r\nHowever this requires an additional tool (so isn't appropriate for code deployed as a static library), requires an extra process to be launched, and also needs the app to do its own pre-flighting to check to see if authorisation would actually be required to either read or write the files.\r\n\r\nAnother workaround is to ask the Finder to do the move/copy for you, however that defeats the purpose of having these APIs - and means progress information can't be shown in the application's own UI.\r\n\r\n\r\nI appreciate that filesystem APIs shouldn't be concerned with UI, and the authorization services model is that external tools are launched with extra privileges rather than raising the privileges of the current process, however these two aspects clash when a developer wants to copy or move arbitrary objects around.\r\n\r\nIt would be very useful if these APIs could support a kFSFileOperationCanAuthorize flag, whereby they would prompt the user for authorisation if necessary to ensure that the only time the operation fails it is because a real error occurred (i.e., out of disk space/memory/etc).\r\n\r\nEven if this flag was only available to GUI applications, or if it had to be implemented by some internal copy engine tool that got launched as a result, it would help make these two APIs more useful in a permission-aware environment."
    email: dairgrant@gmail.com
    modified: "2011-08-28T05:51:15.83314Z"
    number: "4872308"
    number_intvalue: 4872308
    originated: 08-Dec-2006
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Add authorization flag to FSCopy/MoveObject
