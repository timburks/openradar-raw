apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "9227352"
    labels:
        datastore_id: "1154406"
data:
    classification: Feature (New)
    created: "2011-04-03T18:50:30.260614Z"
    description: "Blocks (as in, closures) are created on the stack and these stack blocks are implicitly destroyed when they go out of scope. However, in reality, the memory is often left undisturbed and this makes it extremely easy to accidentally use these blocks after the point where it becomes illegal to do so.\r\n\r\nI propose that a compiler option be added that explicitly destroys stack-allocated blocks after they go out of scope by writing over their isa and implementation pointers. This would cause a small speed hit in exchange for catching all such misuses of blocks.\r\n\r\nI believe the isa pointer should be overwritten with some sort of small proxy class that reports all accesses, like NSZombie. Perhaps even simply reusing NSZombie for this purpose would be sufficient. For the implementation pointer, a function with an informative name, like CRASHED_BECAUSE_CODE_CALLED_A_STACK_BLOCK_THAT_HAS_GONE_OUT_OF_SCOPE which simply abort()s would be really helpful.\r\n\r\nThis should be optional because it will add a small speed hit, and could also break nonconforming code that happens to be working at the moment."
    email: michael.ash@gmail.com
    modified: "2011-08-28T05:37:18.180616Z"
    number: "9227352"
    number_intvalue: 9227352
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: Mac OS X
    product_version: "10.6"
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Wipe out stack blocks when they go out of scope
