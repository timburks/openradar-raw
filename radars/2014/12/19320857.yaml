apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19320857"
    labels:
        datastore_id: "5833436996567040"
data:
    classification: Crash/Hang/Data Loss
    created: "2014-12-21T18:18:01.540372Z"
    description: |-
        Summary:



        Steps to Reproduce:
        1. Compile & run this:

        struct RoseTree<T> {
        	let value: T
        	let branches: [RoseTree]
        }

        RoseTree(value: 1, branches: [])


        Expected Results:
        I expected it to compile & run.


        Actual Results:
        It compiles, but deadlocks as soon as it hits the last line (which constructs a RoseTree).


        Regression:
        It doesn’t deadlock if you remove the branches.
        It doesn’t deadlock if the struct is not generic.
        It doesn’t deadlock if the generic value is placed in an array.
        It does deadlock if you use Box instead of arrays and make it a binary tree, cf https://github.com/robrix/Box/issues/12


        Notes:
        h/t https://github.com/regexident for finding this: https://github.com/robrix/Box/issues/12
    email: rix.rob@gmail.com
    modified: "2014-12-21T18:18:01.540567Z"
    number: "19320857"
    number_intvalue: 19320857
    originated: 21-Dec-2014 01:17 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1.1 (6A2008a)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Generic metadata deadlock when initializing generic, indirectly recursive struct'
