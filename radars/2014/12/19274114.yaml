apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19274114"
    labels:
        datastore_id: "6670571219714048"
data:
    classification: Serious Bug
    created: "2014-12-17T03:06:28.589548Z"
    description: "Summary:\r\nGiven a generic class that takes a type T constrained to base class A. If T is set to a subclass B of A, creating an instance of T incorrectly creates an instance of A. The compiler thinks it has an instance of B. Chaos ensues.\r\n\r\nSteps to Reproduce:\r\n\r\nclass A { init() {} }\r\nclass B : A { var prop = “prop” }\r\n\r\nclass G<T: A> {\r\n    func t() -> T {\r\n        return T() // incorrectly returns an instance of A even when T == B\r\n    }\r\n}\r\n\r\nlet g = G<B>()\r\nlet t = g.t()        // The compiler thinks it has an instance of B but it really has an instance of A\r\nprintln t.prop    // Causes an error\r\n\r\nExpected Results:\r\nPrints “prop”\r\n\r\nActual Results:\r\nBAD_ACCESS error"
    email: thephatmann@gmail.com
    modified: "2015-01-07T17:26:13.981427Z"
    number: "19274114"
    number_intvalue: 19274114
    originated: 16-Dec-2014 09:03 P
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 6.1.1
    reproducible: Always
    resolved: 06-Jan-2014
    status: Duplicate of 18537723
    title: 'Swift: instantiated generic instance is wrong type'
