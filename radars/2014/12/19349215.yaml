apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19349215"
    labels:
        datastore_id: "6463190871310336"
data:
    classification: Crash/Hang/Data Loss
    created: "2014-12-26T15:24:14.444005Z"
    description: |-
        Summary:
        Normally when you nest a type within a generic type you get this error:

        error: type 'S' nested in generic type 'Foo' is not allowed

        If you do it within an extension, it crashes instead.


        Steps to Reproduce:
        1. This:

        enum Foo<T> {
        	case Bar(T)
        }
        extension Foo {
        	struct S {}
        }


        or equivalently, this:

        extension Optional {
        	struct S {}
        }



        Expected Results:
        I expected the error (or else for it to compile because that restriction is just terrible).


        Actual Results:
        Crash.


        Regression:
        N/A


        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2014-12-26T15:24:14.444224Z"
    number: "19349215"
    number_intvalue: 19349215
    originated: 26-Dec-2014 10:23 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1.1 (6A2008a)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Crash when nesting type within extension of generic type'
