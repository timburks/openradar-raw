apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19153007"
    labels:
        datastore_id: "5905733107318784"
data:
    classification: Crash/Hang/Data Loss
    created: "2014-12-05T04:42:55.241698Z"
    description: |-
        Summary:
        This one is pretty specific.


        Steps to Reproduce:
        1. Compile this, IF YOU DARE:
        func f<T>() {
        	func g(y: T) {
        		let h: T -> T? = { _ in nil }
        		h(y).map { _ in
        			g
        		}
        	}
        }


        Expected Results:
        I expected it to compile or at least to error.


        Actual Results:
        Crash crash crashity crash crash crash.


        Regression:
        It does NOT crash if:

        - h receives x instead of y
        - h is defined outside of g
        - the innermost closure doesn’t reference g

        If you change the type parameter to be non-generic e.g. Int, it still crashes, but then it’s just boring old rdar://19152922


        Notes:
        N/A
    email: rix.rob@gmail.com
    modified: "2014-12-05T04:42:55.241837Z"
    number: "19153007"
    number_intvalue: 19153007
    originated: 04-Dec-2014 11:42 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1.1 (6A2006)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Referencing a local function within a closure receiving a value unboxed from its parameter crashes the compiler'
