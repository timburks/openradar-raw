apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19343048"
    labels:
        datastore_id: "5829206453780480"
data:
    classification: ""
    created: "2014-12-24T15:33:00.160503Z"
    description: "Summary:\r\n`respondsToSelector` doesn't work with generic classes. Since it seems like UIKit uses `respondsToSelector` internally this can cause crashes when using generic classes in combination with `UIViewController`s or `UITableViewDataSource`.\r\n\r\nSteps to Reproduce:\r\n// with Generics\r\npublic class ArrayDataSource<T>: NSObject, UITableViewDataSource { ... }\r\n\r\nvar ds = ArrayDataSource<String>()\r\nds.respondsToSelector(\"tableView:numberOfRowsInSection:\") // false\r\n\r\n// without Generics\r\npublic class ArrayDataSource2: NSObject, UITableViewDataSource { ... }\r\n\r\nvar ds2 = ArrayDataSource2()\r\nds2.respondsToSelector(\"tableView:numberOfRowsInSection:\") // true\r\n\r\nExpected Results:\r\n`respondsToSelector:` should do its job\r\n\r\nActual Results:\r\nIt just doesn't work, which will also lead to crashes since `respondToSelector:` seems to be used in multiple frameworks. So when you use generic classes with for example UITableView it will lead to an crash.\r\n\r\nVersion:\r\niOS 8.1.1, Xcode 6.1.1\r\n\r\nNotes:\r\nThis issue got found when having troubles with UITableViewDataSource implemented as generic class. See the following StackOverflow question for more details: http://stackoverflow.com/questions/27483560/nsinvalidargumentexception-when-putting-uitableviewdatasource-in-its-own-class/27638112#27638112\r\n\r\nConfiguration:\r\nSeems to be any configuration, tested on iPhone 5 and the Simulator\r\n\r\nAttachments:"
    email: hohl.mi@gmail.com
    modified: "2014-12-24T15:33:00.160704Z"
    number: "19343048"
    number_intvalue: 19343048
    originated: 24/12/2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 8.1.1, Xcode 6.1.1
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: `respondsToSelector:` always returns `false` when used with generic class'
