apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19136247"
    labels:
        datastore_id: "5249865831415808"
data:
    classification: Crash/Hang/Data Loss
    created: "2014-12-04T00:29:44.440455Z"
    description: "Summary:\r\nI have a generic class with a restriction <T: BaseClass>. If I initialize instances of T within my generic class, such as by T(), it will return instances of BaseClass even if I initialize my generic class with a subclass of BaseClass\r\n\r\nSteps to Reproduce:\r\nCopy this into a playground or xcode project and run:\r\n\r\n---------------------------------\r\n\r\nclass BaseClass { \r\n}\r\n\r\nclass SubClass: BaseClass {\r\n    var value: String { return \"yay\" }\r\n}\r\n\r\nclass GenericClass<T: BaseClass> {\r\n    func createObject() -> T {\r\n        return T()\r\n    }\r\n}\r\n\r\nlet generic = GenericClass<SubClass>()\r\nlet object: SubClass = generic.createObject()\r\nlet value = object.value // EXC_BAD_ACCESS\r\n\r\n\r\nExpected Results:\r\nObject should be an instance of \"SubClass\". Value should equal \"yay\"\r\n\r\nActual Results:\r\nObject is an instance of \"BaseClass\". Calling \"value\" on it causes EXC_BAD_ACCESS\r\n\r\nVersion:\r\nXCode 6.1.1 and 6.1, OSX Yosemite 10.10\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nThis still occurs even if I create custom initializers in BaseClass."
    email: ggurantz@gmail.com
    modified: "2014-12-04T00:29:44.440623Z"
    number: "19136247"
    number_intvalue: 19136247
    originated: 03-Dec-2014 04:21 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Version 6.1.1 (6A2006)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Initializing instance of a generic object in a generic class will only initialize its base class'
