apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19175346"
    labels:
        datastore_id: "5277568370475008"
data:
    classification: ""
    created: "2014-12-08T14:07:11.388535Z"
    description: "Summary:\r\nIn Swift Array<() -> ()>() can be used to initialise an empty array of closures that take no input and return nothing.\r\n\r\nThe Swift Programming Language Guide claims that \"the two forms are functionally identical\" and says that \"the shorthand form is preferred\".\r\n\r\nHowever, when trying to create an array of closures, only the longer syntax variant is accepted by the compiler.\r\nThe same applies to dictionaries that involve closures.\r\n\r\nSteps to Reproduce:\r\nCreate a playground with following content:\r\n\r\nimport UIKit\r\n\r\n// Creating an array and dictionary of/with closures:\r\nvar arrayOfClosures = Array<() -> ()>()\r\nvar dictionaryWithClosures = Dictionary<String, () -> ()>()\r\n\r\n// Should be functionally identical:\r\nvar arrayOfClosures2 = [() -> ()]()\r\nvar dictionaryWithClosures2 = [String, () -> ()]()\r\n\r\nExpected Results:\r\nThe playground should compile without errors.\r\n\r\n[() -> ()]() should have the same behaviour as Array<() -> ()>()\r\n[String, () -> ()]() should have the same behaviour as Dictionary<String, () -> ()>()\r\n\r\nActual Results:\r\nThe usage of [() -> ()]() or [String, () -> ()]() throws errors.\r\n\r\nVersion:\r\nXcode Version 6.1.1 (6A2008a)\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nN/A\r\n\r\nAttachments:\r\n'ArrayClosureBug.playground.zip' was successfully uploaded."
    email: timbogeld@googlemail.com
    modified: "2014-12-08T14:07:11.38876Z"
    number: "19175346"
    number_intvalue: 19175346
    originated: 08-Dec-2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: Shorthand Array and Dictionary syntax in Swift doesn't support closures
