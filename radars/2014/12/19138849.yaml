apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19138849"
    labels:
        datastore_id: "5545140538048512"
data:
    classification: Crash
    created: "2014-12-04T04:19:14.031476Z"
    description: "I was trying to write a function that took a closure that allowed the caller to configure an object created before it continued with its logic. I didn't want to make it a required parameter, but trying to call it without being required, the compiler would crash.\r\n\r\nI reduced my code down to the following, which crashes in the Playground, but works when the parameter is not Optional: \r\n\r\nclass MyType<T where T: NSObject> {\r\n    \r\n    func createObject(populate: ((inout T)->())?) -> T {\r\n        var t: T = T()\r\n        populate?(&t)\r\n        return t\r\n    }\r\n    \r\n}\r\n\r\nVersion:\r\nVersion 6.2 (6C86e), Version 6.1 (6A1052d) (tested)\r\nMac OS X 10.9.5 Build 13F34"
    email: wirth_caesar@cyberagent.co.jp
    modified: "2015-11-21T09:26:41.13115Z"
    number: "19138849"
    number_intvalue: 19138849
    originated: 04-Dec-2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1, 6.2
    reproducible: Always
    resolved: ""
    status: Duplicate of 18841652 (Closed)
    title: 【Swift】Compiler segfault when calling an optional closure that takes an inout parameter of generic type
