apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17879122"
    labels:
        datastore_id: "5587331947954176"
data:
    classification: Serious Bug
    created: "2014-08-01T01:02:39.212932Z"
    description: "Summary:\r\nDue to Swift’s more rigid rules about designated and convenience initializers, the implementation of -[UITableViewController initWithStyle:] is problematic. If I have a subclass of UITableViewController, and I want to define a new designated initializer:\r\n\r\nclass MyTableVC : UITableViewController {\r\n\tlet foo: Int\r\n\tinit(foo: Int) {\r\n\t\tself.foo = foo\r\n\t\tsuper.init(style: .Grouped)\r\n\t}\r\n}\r\n\r\nThis will build but crash at runtime because MyTableVC doesn’t implement init(nibName:bundle:). However, it shouldn’t have to! If we implement that method, we have a problem with the “foo” property:\r\n\r\nclass MyTableVC : UITableViewController {\r\n\tlet foo: Int\r\n\tinit(foo: Int) {\r\n\t\tself.foo = foo\r\n\t\tsuper.init(style: .Grouped)\r\n\t}\r\n\tinit(nibName: String!, bundle: String!) {\r\n\t\t// what do we set foo to?\r\n\t\tsuper.init(nibName: nibName, bundle: bundle)\r\n\t}\r\n}\r\n\r\nIf backwards compatibility is a problem, perhaps a new (truly designated) initializer could be added to UITableViewController for use from Swift subclasses.\r\n\r\nNotes:\r\n\r\nSee some discussion here: https://devforums.apple.com/message/987922"
    email: jgallagher@bignerdranch.com
    modified: "2014-08-01T01:02:39.213094Z"
    number: "17879122"
    number_intvalue: 17879122
    originated: July 31, 2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 7, 8
    reproducible: Always
    resolved: ""
    status: Open
    title: -{UITableViewController initWithStyle:] should NOT call [self initWithNibName:bundle:]
