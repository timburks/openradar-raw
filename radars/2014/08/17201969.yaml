apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17201969"
    labels:
        datastore_id: "5300348675686400"
data:
    classification: Enhancement
    created: "2014-08-11T11:29:46.786901Z"
    description: "Summary:\r\nIt would be great if developers could easily create NS_OPTIONS equivalents in Swift. At the current moment, it is only opssible by creating a \"struct : RawOptionSet\" and the ading lots of boilerplate code, including overloaded bitwise operation functions and accessors.\r\n\r\nSteps to Reproduce:\r\n\r\n\r\nExpected Results:\r\nSomething relatively easy, line NS_OPTIONS in Objective-C.\r\n\r\nActual Results:\r\nstruct XYZOptions : RawOptionSet {\r\n\r\n    var value: UInt = 0\r\n    init(_ value: UInt) { self.value = value }\r\n\r\n    func toRaw() -> UInt { return self.value }\r\n    func getLogicValue() -> Bool { return self.value != 0 }\r\n\r\n    static func fromRaw(raw: UInt) -> XYZOptions? { return XYZOptions(raw) }\r\n    static func fromMask(raw: UInt) -> XYZOptions { return XYZOptions(raw) }\r\n    \r\n    static var None: XYZOptions          { return XYZOptions(0) }\r\n    static var FirstOption: XYZOptions   { return XYZOptions(1 << 0) }\r\n    static var SecondOption: XYZOptions  { return XYZOptions(1 << 1) }\r\n    static var ThirdOption: XYZOptions   { return XYZOptions(1 << 2) }\r\n}\r\n\r\nfunc == (lhs: XYZOptions, rhs: XYZOptions) -> Bool { return lhs.value == rhs.value }\r\n\r\nfunc | (lhs: XYZOptions, rhs: XYZOptions) -> XYZOptions { return XYZOptions(lhs.value | rhs.value) }\r\nfunc & (lhs: XYZOptions, rhs: XYZOptions) -> XYZOptions { return XYZOptions(lhs.value & rhs.value) }\r\nfunc ^ (lhs: XYZOptions, rhs: XYZOptions) -> XYZOptions { return XYZOptions(lhs.value ^ rhs.value) }\r\n\r\nVersion:\r\nFeature is not yet implemented in iOS 8.0 SDK (12A4265u)\r\n\r\nNotes:\r\nMy idea is to create a @bitmask attribute and somehow use it to denote a bitmask enum.\r\n\r\nIdea #1:\r\n\r\n@bitmask struct XYZOptions {\r\n    static var OptionOne { return XYZOptions(1 << 0) }\r\n    static var OptionTwo { return XYZOptions(1 << 1) }\r\n}\r\n\r\nIdea #2:\r\n\r\nstruct XYZOptions {\r\n    @bitmask(1 << 0) static var OptionOne\r\n    @bitmask(1 << 1) static var OptionTwo\r\n}\r\n\r\nOf course, these are only ideas. :)\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n\r\n--- 11-Jun-2014 01:25 AM\r\n\r\nEngineering has determined that your bug report is a duplicate of another issue and will be closed. 15032042"
    email: adrian.kashivskyy@gmail.com
    modified: "2020-10-12T16:39:11.568948Z"
    number: "17201969"
    number_intvalue: 17201969
    originated: 06-Jun-2014 07:58 PM
    parent_number: "15032042"
    product: Developer Tools
    product_version: Xcode 6.0 Beta 5 (6A279r)
    reproducible: Not Applicable
    resolved: Yes
    status: Closed/Duplicate
    title: 'Swift: Easy NS_OPTIONS creation'
