apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18035792"
    labels:
        datastore_id: "5316848866295808"
data:
    classification: Feature request
    created: "2014-08-15T21:53:40.50903Z"
    description: "Summary:\r\nSwift only allows importing modules in the global scope (see https://devforums.apple.com/thread/240355?tstart=0 ).\r\n\r\nI love how customisable Swift is and all the interesting stuff people have been doing with it. But I would be hesitant to import a module which does extensive overloading of standard functions and operators, because it can become difficult to see which code is actually being called at any one time. The risks for vague and hard to debug side-effects are often too high.\r\n \r\nEspecially when it comes to implementing Domain Specific Languages (DSLs) in Swift it would be nice to be able to really go at it and make significant additions/alterations. It's risky to do that now because importing such a module could mess up the entire project.\r\n \r\nAnd independent modules can define the same new operators, overload the same functions, add extensions with the same names or in other ways interfere with each other.\r\n \r\n \r\nI think a simple solution to all this is to not import modules to the global scope only. Say if you wanted to use a cool HTML parsing module:\r\nif let html = download(URL) {\r\n     import FreakyHTMLParser\r\n     \r\n     // do some cool parsing\r\n\r\n} else {\r\n     // something else\r\n}\r\n\r\nHere the FreakyHTMLParser module would only have an effect from the import statement to the end of the scope (basically to the next \"}\" ). This way the user of a module has more control over his own code, and the writer of a module does not have to worry so much about side effects. It is a safe and contained way of importing modules.\r\n\r\nSteps to Reproduce:\r\nif let html = download(URL) {\r\n     import FreakyHTMLParser\r\n     \r\n     // do some cool parsing\r\n\r\n} else {\r\n     // something else\r\n}\r\n\r\n\r\nExpected Results:\r\nIt should compile, and the FreakyHTMLParser module is only available from the import statement until the next \"}\".\r\n\r\nActual Results:\r\nCompile error saying importing is only allowed in the global scope.\r\n\r\nVersion:\r\nXcode beta 5\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: kare@nottoobadsoftware.com
    modified: "2014-08-15T21:53:40.509229Z"
    number: "18035792"
    number_intvalue: 18035792
    originated: 15.08.2014
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: Beta 5
    reproducible: Yes
    resolved: No
    status: Open
    title: Scoped import of modules in Swift
