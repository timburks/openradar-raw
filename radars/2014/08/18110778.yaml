apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18110778"
    labels:
        datastore_id: "5073178191724544"
data:
    classification: Bug
    created: "2014-08-23T15:29:48.26928Z"
    description: "Summary:\r\nWhen using a function that takes a closure as one argument, autocomplete always uses the most verbose declaration of the closure although shorter versions are more readable and valid\r\n\r\nSteps to Reproduce:\r\n1. Create a Swift function like the following:\r\nfunc executeClosure(closure: ()->Void) {\r\n\tclosure()\r\n}\r\n\r\n2. Use this function by typing executeClo and autocompleting it to executeClosure(<#closure: () -> ()##() -> ()#>)\r\n3. Autocomplete the closure bubble\r\n\r\nExpected Results:\r\nThis should result in code like this:\r\nexecuteClosure {\r\n\t<#code#>\r\n}\r\n\r\nActual Results:\r\nXcode expands to a fully specified version of the closure that is less legible\r\nexecuteClosure { () -> Void in\r\n\t<#code#>\r\n}\r\n\r\nVersion:\r\nXcode 6.0 (6A280e)"
    email: alex@hoppen-koeln.de
    modified: "2014-08-23T15:29:48.269434Z"
    number: "18110778"
    number_intvalue: 18110778
    originated: 23-Aug-2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 beta-6
    reproducible: Always
    resolved: ""
    status: Open
    title: Autocomplete does not use shortest Swift closure syntax
