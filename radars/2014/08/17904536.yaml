apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17904536"
    labels:
        datastore_id: "5810038887153664"
data:
    classification: Serious Bug
    created: "2014-08-04T18:29:39.971829Z"
    description: "Summary:\r\nI want to ensure my high level objects, like NSURLConnection, use approved protocols and cipher suites.\r\n\r\nFor example, I want my NSURLConnection to use TLS 1.0, 1.1 and 1.2 protocols. In addition I want to use the following cipher suites:\r\n\r\n  * TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\r\n  * TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\n  * TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\r\n  * TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\n            \r\n  * TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\n  * TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\r\n  * TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n  * TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\r\n            \r\n  * TLS_DHE_RSA_WITH_AES_256_CBC_SHA384\r\n  * TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\r\n  * TLS_DHE_RSA_WITH_AES_128_CBC_SHA\r\n  * TLS_DHE_DSS_WITH_AES_128_CBC_SHA\r\n            \r\n  * TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA\r\n  * TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA\r\n  * SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA\r\n  * SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA\r\n\r\nFor certain versions of SecureTransport, I need to remove TLS_ECDHE_ECDSA_* due to interop issues. I believe the problematic versions of SecureTransport include OS X 10.8 - 10.8.4 and iOS 7 - iOS 7.3.\r\n\r\nFurther, TLS 1.3 looks like it will be removing RSA transport schemes and DSS schemes. So they will need to be removed from the list as well.\r\n\r\nFinally, keeping the cipher suite list small ensures the ClientHello is *not* dropped by broken appliances with a small fixed size buffer like F5 and IronPort. 16 cipher suites take 32 bytes, while a ClientHello with the full-blown Cipher Suite Zoo offers over 80 cipher suites and needs over 160 bytes.\r\n\r\nWe can do those things on an SSLContext, but we have no way to associate the context with the high level object.\r\n\r\nPlease provide a way to use a properly configured SSL context with a high level object, like NSURLConnection.\r\n\r\nRelated reading: \"Configure socket used by NSURLConnection?\", https://lists.apple.com/archives/macnetworkprog/2014/Jul/msg00072.html.\r\n\r\nSteps to Reproduce:\r\nUse an NSURLConnection, attempt to set SSL protocols and cipher suites.\r\n\r\nExpected Results:\r\nThe ability to tune SSL protocols and cipher suites.\r\n\r\nActual Results:\r\nNo ability to tune SSL protocols and cipher suites.\r\n\r\nVersion:\r\nOS X 10.8.5 (12F45)\r\n\r\nNotes:\r\nPlease help. In the post-Snowden era, we have to be especially vigilant.\r\n\r\nConfiguration:\r\nMac Book Pro, 15-inch, Late 2011, Serial Number  C02HM0WQDV7P.\r\n\r\nAttachments:"
    email: noloader@gmail.com
    modified: "2014-08-04T23:20:41.6909Z"
    number: "17904536"
    number_intvalue: 17904536
    originated: Aug 04, 2014
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: 10.8.5
    reproducible: Always
    resolved: ""
    status: Open
    title: Unable to set SSLContext on NSURLConnection and friends
