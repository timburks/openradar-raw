apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17306182"
    labels:
        datastore_id: "6460405115256832"
data:
    classification: ""
    created: "2014-06-13T19:40:02.506163Z"
    description: "Swift objects, by default, use vtables to pass messages. This is fast and efficient, but requires the loss of many of the benefits of Objective-C’s late binding / dynamic dispatch. In the general case, these loses are not worth the tradeoff. Dynamic dispatch puts tremendous power in the hands of programmers in a safe, sensible way. Vtables give you performance. And really, nothing else. \r\n\r\nI’m not arguing that vtables should be removed from the Swift language, rather that they should only be used when the programmer requests it. Things this would allow:\r\n\r\n- All of the flexibility of dynamic dispatch would be first class citizens of the language, rather than a bridge to the old guard.\r\n- Safe handling of nil objects, without having to resort to noisy syntax that many programmers are likely going to end up abusing because they can’t be bothered to learn to do it properly.\r\n- In those extremely rare cases where the overhead of dynamic dispatch actually causes a performance issue, the programmer would have the power to make this tradeoff of flexibility for performance.\r\n\r\nThis is fundamental. Flexibility should trump performance - but let us turn on the performance where we need to.\r\n\r\nSteps to Reproduce\r\nN/A\r\n\r\nExpected Results\r\nN/A\r\n\r\nActual Results\r\nN/A\r\n\r\nConfiguration\r\nAny\r\n\r\nXcode Version\r\nXcode 6 Beta 1\r\n\r\nAdditional Notes"
    email: amolloy@gmail.com
    modified: "2014-07-08T22:16:06.024627Z"
    number: "17306182"
    number_intvalue: 17306182
    originated: 6/13/14
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: As Intended
    status: Closed
    title: '[Swift] Use dynamic dispatch by default'
