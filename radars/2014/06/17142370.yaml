apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17142370"
    labels:
        datastore_id: "5220412623421440"
data:
    classification: Enhancement
    created: "2014-06-04T06:51:31.528415Z"
    description: "This is a duplicate of rdar://17132238\n\nSummary:\r\nIn Swift, if you define a function that takes a variable number of arguments, it is not possible to pass those arguments (as an array) to another function with a variable number of arguments inside the body of the first function.\r\n\r\nSteps to Reproduce:\r\n1. Define a function that takes a variable number of arguments.\r\n2. Define a second function that also takes a variable number of arguments.\r\n3. Inside the body of the second function, call the first function by passing the calling functions own array of arguments to it.\r\n\r\nExpected Results:\r\nSwift recognizes that the items in the array of arguments being passed to function 1 are meant to be used as arguments to it.\r\n\r\nActual Results:\r\nA compiler error is produced. “Could not find an overload for ‘__conversion’ that accepts the supplied arguments.”\r\n\r\nNotes:\r\nThe code below demonstrates this problem:\r\n\r\nfunc sumOf(numbers: Int...) -> Int {\r\n\tvar sum = 0\r\n\tfor number in numbers {\r\n\t\tsum += number\r\n\t}\r\n\treturn sum\r\n}\r\nsumOf(42, 597, 12)\r\n\r\nfunc averageOf(numbers: Int...) -> Float {\r\n\tlet sum = sumOf(numbers)\r\n\treturn Float(sum) / Float(numbers.count)\r\n}\r\n\r\naverageOf(42, 597, 12, 18)"
    email: me@estebantorr.es
    modified: "2014-06-04T06:51:31.528619Z"
    number: "17142370"
    number_intvalue: 17142370
    originated: 03-Jun-2014 11:50 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode6-Beta (6A215l)
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift doesn't allow one variadic argument function to call another using its own arguments array.
