apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17511478"
    labels:
        datastore_id: "6457707338924032"
data:
    classification: Enhancement
    created: "2014-06-30T21:26:43.932042Z"
    description: "Summary:\r\nThe Swift standard library is missing operators for adding different sized integers.\r\n\r\nA developer coming from most other languages would expect integer addition to resize the smaller operand to add correctly, with the expression resulting with the type of the larger operand.\r\n\r\nSteps to Reproduce:\r\nConsider this example, throwing an error when adding an Int64 with an Int32.\r\n\r\n    let smallNumber: Int32 = 15\r\n    let bigNumber: Int64 = 4294967311\r\n\r\n    let total = bigNumber + smallNumber\r\n    // error: could not find an overload for '+' that accepts the supplied arguments\r\n\r\n\r\nExpected Results:\r\nThe expression would resolve to an Int64 with the value of 4294967326, by implicitly resizing the smaller operand.\r\n\r\nActual Results:\r\nThere is no operator in the Swift standard library to add two dislike-sized integers.\r\n\r\nAdding this custom operator achieves the expected behavior:\r\n\r\n    func +(lhs: Int64, rhs: Int32) -> Int64 {\r\n        return lhs + Int64(rhs)\r\n    }\r\n    let total = bigNumber + smallNumber"
    email: wjlafrance@gmail.com
    modified: "2014-07-08T20:54:56.60316Z"
    number: "17511478"
    number_intvalue: 17511478
    originated: 30-Jun-2014 04:25 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 beta 2
    reproducible: Always
    resolved: 08-Jul-2014 03:01 PM
    status: Closed
    title: Missing operators to add different sized integers
