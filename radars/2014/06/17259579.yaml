apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17259579"
    labels:
        datastore_id: "5814537596960768"
data:
    classification: Performance
    created: "2014-06-10T22:51:37.37915Z"
    description: "Summary:\r\nAbout 5 years ago, we implemented a bunch of routines to set a large amount of memory to the pattern of 0xDEADBEEF, to find out the fastest way. In the attached code, on x86, deadbeef_dog is 2x as fast as the next closer alternatives, including memset_pattern4/8/16.\r\n\r\nThis came up again just now, and we tested again, it's still the same. So here's a radr about it.\r\n\r\nSteps to Reproduce:\r\nCompile katie.c as instructed in the comments in the file, run it, check results.\r\n\r\nExpected Results:\r\nExpected that memset_pattern (deadbeef_applesauce(), deadbeef_pattern4()) is at least as fast as deadbeef_dog() for large amounts of memory being set.\r\n\r\nActual Results:\r\nmemset_pattern is only half the speed of the deadbeef_dog() implementation.\r\n\r\nVersion:\r\nOS X 10.6 through 10.9 on various hardware\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nTested on Core 2 Duo and newer processors.\r\n\r\nAttachments:\r\n'katie.c' was successfully uploaded."
    email: dognotdog@gmail.com
    modified: "2014-06-10T22:51:37.379353Z"
    number: "17259579"
    number_intvalue: 17259579
    originated: 11.06.2014
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: memset_pattern* apparently twice as slow as it need be
