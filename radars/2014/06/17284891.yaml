apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17284891"
    labels:
        datastore_id: "5870797373571072"
data:
    classification: Feature (New)
    created: "2014-06-12T10:53:51.944129Z"
    description: "Summary:\r\nSuppose you have a variadic function:\r\n\r\n    func sum(x: Int…) …\r\n\r\nAnd you have a matching array in your code:\r\n\r\n    let vars = [1, 2, 3]\r\n\r\nSwift should have a mechanism to pass the array to the function by unpacking the array into the argument list.\r\n\r\nSteps to Reproduce:\r\n\r\n1. Write a variadic method, e.g.:\r\n\r\n    func sum(xs: Int…) -> Int { return reduce(xs, 0) { sum, num in sum + num } }\r\n\r\n2. Declare a variable containing an Array with a matching type, e.g.:\r\n\r\n    let vars = [1, 2, 3]\r\n\r\n3. Try to call the function with the array, using some appropriate syntax, e.g.:\r\n\r\n    sum(vars)\r\n    sum(*vars)\r\n    sum(vars…)\r\n\r\nExpected Results:\r\nThere is some way to do this.\r\n\r\nActual Results:\r\nThere is no way to do this.\r\n\r\nNotes:\r\nThe current best suggestion is to provide another version of the function that accepts an array:\r\n\r\n    func sum(vars: Int[]) -> Int { return reduce(xs, 0) { sum, num in sum + num } }\r\n    func sum(vars: Int…) { return sum(vars) }\r\n\r\nThis does work, but it’s kind of clunky.\r\n\r\nThe * syntax is based on Ruby and Perl 6. The … is my own suggestion, meant to match the … in a variadic signature. However, I actually think … might be better for indicating currying; I’ll file that bug eventually."
    email: brent@architechies.com
    modified: "2014-07-03T01:37:06.149811Z"
    number: "17284891"
    number_intvalue: 17284891
    originated: 12-Jun-2014 03:53 AM
    parent_number: "12134482"
    product: Developer Tools
    product_version: Xcode6-Beta (6A215l)
    reproducible: Always
    resolved: ""
    status: Duplicate/12134482
    title: Swift should have a way to unpack an array into variadic parameters
