apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17229501"
    labels:
        datastore_id: "5327533402750976"
data:
    classification: ""
    created: "2014-06-09T09:33:27.274303Z"
    description: "Summary:\r\nTake the following code:\r\n\r\nimport CoreGraphics\r\n\r\nvar f1: Float = 1\r\nvar f2: Float = 2\r\n\r\nvar size = CGSize(width: f1, height: f2)\r\nvar point = CGPoint(x: f1, y: f2)\r\n\r\nThe creation of the CGSize and CGPoint is not allowed because there is no init() that takes two Float values, only an init that takes CGFloat values.\r\n\r\nHowever, CGFloat is a typealias for CFloat, which is a typealias for Float. You'd think that such aliases work both ways but they do not.\r\n\r\nGiven that type inference is very handy and makes for cleaner code, I'd rather use Swift's native Float values instead of CGFloat.\r\n\r\nSteps to Reproduce:\r\nSee above\r\n\r\nExpected Results:\r\nI can use Float wherever CGFloat is asked for.\r\n\r\nActual Results:\r\nI now need to coerce my Floats into CGFloat values, even though they're the exact same datatype.\r\n\r\nVersion:\r\nXcode 6 beta 1 / OS X 10.9.3"
    email: mail@hollance.com
    modified: "2014-06-09T09:33:27.274475Z"
    number: "17229501"
    number_intvalue: 17229501
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Even though CGFloat is typealias for Float, you cannot use Float where CGFloat is required
