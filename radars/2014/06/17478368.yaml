apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17478368"
    labels:
        datastore_id: "5218959850733568"
data:
    classification: Serious Bug
    created: "2014-06-27T01:54:25.010003Z"
    description: |-
        Summary:
        The tuple type (A, A) where A is e.g. Equatable is not itself Equatable. Ditto Hashable.

        Likewise for the tuple type (A, B) where A : Hashable, B : Hashable.

        I don’t know that this would apply sensibly to *all* protocols (I think it would apply to Collection for example—that’s zip2!—but IntegerLiteralConvertible…?), but Equality, Hashable, and Printable sure seem doable. Unfortunately, they are not doable not by third parties.


        Steps to Reproduce:
        1. Try to use that sweet memoize { … } combinator from session 404 Advanced Swift to make a function whose parameter type is a tuple of (A, A), where A : Hashable.


        Expected Results:
        I expected it to succeed.


        Actual Results:
        It does not—and the error is impossibly opaque.


        Regression:
        N/A


        Notes:
        Since you can’t extend tuples, this means you can’t use tuples for any number of valuable tasks.
    email: rix.rob@gmail.com
    modified: "2014-06-27T01:54:25.010165Z"
    number: "17478368"
    number_intvalue: 17478368
    originated: 26-Jun-2014 09:53 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode6-Beta2 (6A216f)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Protocol conformance does not distribute over tuples'
