apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17254507"
    labels:
        datastore_id: "6365831009140736"
data:
    classification: Serious Bug
    created: "2014-06-10T18:32:54.097183Z"
    description: "Summary:\r\nWhen declaring a computed property inside an extension on an Obj-C class in one Swift source file, trying to use it from another Swift file crashes the compiler.\r\n\r\nSteps to Reproduce:\r\n1. Create an Obj-C project using Obj-C as the language (Sprite Kit game template for iOS)\r\n2. Add a Swift file to the project. Let Xcode make bridging header.\r\n3. Add the following to the Swift file:\r\n\r\nimport SpriteKit\r\n\r\nextension SKNode {\r\n  var scaleAsPoint: CGPoint {\r\n    get {\r\n      return CGPoint(x: self.xScale, y: self.yScale)\r\n    }\r\n    set {\r\n      self.xScale = newValue.x\r\n      self.yScale = newValue.y\r\n    }\r\n  }\r\n}\r\n\r\nThis creates a computed property on SKNode that lets you treat the node's scale as single a CGPoint value.\r\n\r\n4. In one of the .m files, do:\r\n\r\n#import \"Swift2ObjCBug-Swift.h\"\r\n\r\nAnd try to print out the scale of a node using the new computed property:\r\n\r\nNSLog(@\"Node scale = %@\", NSStringFromCGPoint(myLabel.scaleAsPoint));\r\n\r\n5. Run the app. This works.\r\n6. Add a new Swift file to the project. Give it the following contents:\r\n\r\nimport SpriteKit\r\n\r\nfunc whatever() {\r\n  let node = SKNode()\r\n  println(\"Scale is \\(node.scaleAsPoint)\")\r\n}\r\n\r\n7. Build the project. The build will fail because Xcode can no longer find Swift2ObjCBug-Swift.h\r\n\r\n\r\nExpected Results:\r\nThe build should not fail. Both the Obj-C and Swift code should be able to access node's new scaleAsPoint property.\r\n\r\nActual Results:\r\nThe build fails. The reason Xcode can no longer find Swift2ObjCBug-Swift.h is because the Swift compilation phase is aborted and the header file does not get written.\r\n\r\nThe crash from the compiler is:\r\n\r\n0  swift                    0x000000010493d608 llvm::sys::PrintStackTrace(__sFILE*) + 40\r\n1  swift                    0x000000010493daf4 SignalHandler(int) + 452\r\n2  libsystem_platform.dylib 0x00007fff8a9b35aa _sigtramp + 26\r\n3  libsystem_platform.dylib 0x00007ffaea92f0c0 _sigtramp + 1610070832\r\n4  swift                    0x0000000103d47995 swift::irgen::ClassMetadataLayout<(anonymous namespace)::FindClassMethodIndex>::addClassMembers(swift::ClassDecl*) + 37\r\n5  swift                    0x0000000103d417b2 swift::irgen::emitVirtualMethodValue(swift::irgen::IRGenFunction&, llvm::Value*, swift::SILType, swift::SILDeclRef, swift::CanTypeWrapper<swift::SILFunctionType>, swift::ResilienceExpansion) + 434\r\n6  swift                    0x0000000103dad0d3 swift::SILVisitor<(anonymous namespace)::IRGenSILFunction, void>::visit(swift::ValueBase*) + 42611\r\n7  swift                    0x0000000103da2266 swift::irgen::IRGenModule::emitSILFunction(swift::SILFunction*) + 8678\r\n8  swift                    0x0000000103d236f8 swift::irgen::IRGenModule::emitGlobalTopLevel() + 184\r\n9  swift                    0x0000000103d8f6e3 performIRGeneration(swift::IRGenOptions&, swift::Module*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, swift::SourceFile*, unsigned int) + 1859\r\n10 swift                    0x0000000103d90033 swift::performIRGeneration(swift::IRGenOptions&, swift::SourceFile&, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, unsigned int) + 51\r\n11 swift                    0x0000000103d0265a frontend_main(llvm::ArrayRef<char const*>, char const*, void*) + 4842\r\n12 swift                    0x0000000103d0135d main + 1533\r\n13 libdyld.dylib            0x00007fff92bc05fd start + 1\r\n14 libdyld.dylib            0x0000000000000037 start + 1833171515\r\n0.  Program arguments: <snipped>\r\n1.\tWhile emitting IR SIL function @_TF13Swift2ObjCBug8whateverFT_T_ for 'whatever' at /Users/matthijs/Desktop/Swift2ObjCBug/Swift2ObjCBug/OtherSwiftFile.swift:11:1\r\n<unknown>:0: error: unable to execute command: Segmentation fault: 11\r\n\r\n\r\nVersion:\r\nXcode 6 beta 1 / OS X 10.9.3\r\n\r\n\r\nNotes:\r\nThe compiler does not crash when you add the code that uses node.scaleAsPoint to the same Swift file that declared the computed property. But as soon as it goes into another Swift file, the crash occurs."
    email: mail@hollance.com
    modified: "2014-06-10T18:32:54.097307Z"
    number: "17254507"
    number_intvalue: 17254507
    originated: "2014-06-10"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 beta 1
    reproducible: Always
    resolved: ""
    status: Open
    title: Using computed property in Swift extension crashes compiler
