apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17175716"
    labels:
        datastore_id: "5551107925344256"
data:
    classification: Enhancement
    created: "2014-06-05T14:10:24.842901Z"
    description: "In Objective-C, when a property is lazily instantiated, it is common to need to perform some initial setup of the object that is going to be returned before returning it.\r\n\r\nThe only way to accomplish this same task in Swift seems to be to use a second property, which is less than ideal.\r\n\r\nExample of using a second property:\r\n\r\n    @lazy var _heavyView = UIView(frame: CGRectZero)\r\n\r\n    var heavyView: UIView {\r\n    get {\r\n        _heavyView.layer.masksToBounds = true\r\n        _heavyView.layer.cornerRadius = 8.0\r\n\r\n        return _heavyView\r\n    }\r\n    set {\r\n        _heavyView = newValue\r\n    }\r\n    }\r\n\r\nMy suggestion is that when declaring an @lazy property, you should be able to define a closure for setting up that property, like this:\r\n\r\n    @lazy var heavyView = UIView(frame: CGRectZero) {\r\n        heavyView.layer.masksToBounds = true\r\n        heavyView.layer.cornerRadius = 8.0\r\n    }"
    email: cflesner@gmail.com
    modified: "2014-06-05T17:59:10.4801Z"
    number: "17175716"
    number_intvalue: 17175716
    originated: 05-Jun-2014 09:03 AM
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: beta 1
    reproducible: N/A
    resolved: ""
    status: Closed
    title: Swift needs a way to perform initial setup on a @lazy property
