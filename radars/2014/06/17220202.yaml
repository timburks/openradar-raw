apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17220202"
    labels:
        datastore_id: "5319532952420352"
data:
    classification: ""
    created: "2014-06-15T01:06:12.42065Z"
    description: "In \"The Swift Language\" book on iBooks, the grammar says:\r\n\r\n‌ hexadecimal-literal → 0x hexadecimal-digit hexadecimal-literal-characters[opt]\r\n‌ hexadecimal-digit → Digit 0 through 9, a through f, or A through F\r\n‌ hexadecimal-literal-character → hexadecimal-digit  | _\r\n‌ hexadecimal-literal-characters → hexadecimal-literal-character hexadecimal-literal-characters[opt]\r\n\r\n‌ floating-point-literal → hexadecimal-literal hexadecimal-fraction[opt] hexadecimal-exponent\r\n‌ hexadecimal-fraction → . hexadecimal-literal[opt]\r\n‌ hexadecimal-exponent → floating-point-p sign[opt] hexadecimal-literal\r\n‌ floating-point-p → p | P\r\n‌ sign → +  -\r\n\r\nThis implies that the hexadecimal syntax is, for example, 0x1.0x2p0x3. However it's actually 0x1.2p3. Both hexadecimal-fraction and hexadecimal-exponent should refer to hexadecimal-literal-characters (which doesn't include the 0x) instead of hexadecimal-literal."
    email: nicolas.alvarez@gmail.com
    modified: "2015-07-23T04:16:27.21618Z"
    number: "17220202"
    number_intvalue: 17220202
    originated: 08-Jun-2014 01:25 AM
    parent_number: '&{NULL_VALUE}'
    product: Documentation
    product_version: ""
    reproducible: ""
    resolved: 10-Jul-2014 12:22 PM
    status: Closed
    title: Swift book has wrong grammar for hex float literals
