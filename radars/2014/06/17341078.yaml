apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17341078"
    labels:
        datastore_id: "5832330572726272"
data:
    classification: UI/Usability Issue
    created: "2014-06-17T12:22:08.094779Z"
    description: "Summary:\r\nSwift's new array and dictionary types expect explicit information about the types of things that will be held in them. An array of AnyObject requires typecasting to do basically anything and kind of defeats the purpose of Swift's type-safety.\r\n\r\nIdeally, we would have an interface like they do in Go (described here: http://blog.golang.org/json-and-go). Their Unmarshall function allows you to specify a type for each object in the incoming JSON. JSON from web API's can rarely be described as Array<Dictionary<String, String>> as sometimes values in a JSON dictionary are numbers or strings or booleans. However, we *could* describe incoming JSON as Array<User> where User is a custom type to describe the information about users from the JSON API. This would allow us to do something like this:\r\n\r\nlet users: Array<User> = NSJSONSerialization.unmarshall(Array<User>, &jsonError)\r\n\r\nand no code down the line would need to typecast that to get what they wanted.\r\n\r\nSteps to Reproduce:\r\n1. Download JSON from an API such as this public one: https://api.github.com/gists\r\n2. Figure out a way to express the incoming information in Swift types.\r\n3. Pull hair out.\r\n\r\nExpected Results:\r\nTake advantage of Swift's type safety and make cool apps.\r\n\r\nActual Results:\r\nGet confused why you're not just writing in ObjC where the super-dynamic nature works fine here.\r\n\r\nVersion:\r\nXcode 6.0b1 / OSX Yosemite b1"
    email: goodwinlabs@gmail.com
    modified: "2014-06-17T12:22:08.094972Z"
    number: "17341078"
    number_intvalue: 17341078
    originated: 17-Jun-2014 07:53 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.0b1
    reproducible: Always
    resolved: ""
    status: Open
    title: We need a better JSON-parsing interface for Swift
