apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17253557"
    labels:
        datastore_id: "5259791031074816"
data:
    classification: Feature Request
    created: "2014-06-10T17:49:56.252642Z"
    description: "Summary:\r\nSmalltalk has the notion of categories. This is not the same as Objective-C categories, but a \"tag\" that you give a method. The Smalltalk Browser shows the methods of a class organized by category. \r\n\r\nExamples of categories: initialization, handling actions, printing, state restoration, etc. Even inside a class that is well-designed so that it has only a single responsibility, it can be useful to group the various private methods by purpose.\r\n\r\nSwift currently has no #pragma mark, which Obj-C developers have used to visually organize their source code files into separate sections. \r\n\r\nLetting developers attach a category name to functions allows them to organize their code semantically (rather than just in text), and gives the compiler access to this meta information.\r\n\r\nXcode can then group the functions by category in its jump bar menu, giving the developer a quick overview of how their code is organized.\r\n\r\nOther languages have the ability to attach annotations with arbitrary meta data to methods etc. Maybe Swift will allow such annotations at some point, which could be used for this purpose.\r\n\r\nSteps to Reproduce:\r\n-\r\n\r\nExpected Results:\r\n-\r\n\r\nActual Results:\r\n-\r\n\r\nVersion:\r\nXcode 6 beta 1"
    email: mail@hollance.com
    modified: "2014-06-10T17:49:56.252809Z"
    number: "17253557"
    number_intvalue: 17253557
    originated: "2014-06-10"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: 'Swift: Allow developers to tag functions with a category name for organizational purposes'
