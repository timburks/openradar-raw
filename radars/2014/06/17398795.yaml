apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17398795"
    labels:
        datastore_id: "5896022790242304"
data:
    classification: Feature (New)
    created: "2014-06-20T19:06:38.03557Z"
    description: "Access modifiers are nice, but I rather have a more flexible underlying implementation to let us have multiple access specifications for the same types and functions. (e.g. beginer level vs advanced, or internal team vs client team, scripting vs application programming vs system programming). A nice example is something like (Apple) DyLan Module system (http://opendylan.org/books/dpg/libraries.html#modules).  I think such a concept bodes well and provides a useful and powerful extention to the existing module concept (based on framework and umbrella framework Cocoa concepts). This can also eliminate the need for writing extensive boilerplate protocols, wrapper classes and fa√ßades.\r\n\r\nBy the way forgot to make it explicit: This is about the Swift programming language."
    email: hooman.mehr@gmail.com
    modified: "2014-06-20T19:06:38.035775Z"
    number: "17398795"
    number_intvalue: 17398795
    originated: 06/20/2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools - Swift
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: 'Feature request: Provide a flexible module interface declaration system similar to DyLan'
