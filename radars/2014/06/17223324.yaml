apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17223324"
    labels:
        datastore_id: "4765171859849216"
data:
    classification: ""
    created: "2014-06-08T17:06:20.746739Z"
    description: "Summary:\r\nFunctions in Swift can be curried using special syntax such as follows:\r\n\r\nfunc addTwo(a:Int)(b:Int) -> Int {\r\n    return a + b\r\n}\r\n\r\nor\r\n\r\nfunc addTwo(a:Int) -> (Int -> Int) {\r\n    func add(b:Int) -> Int {\r\n        return a + b\r\n    }\r\n    return add\r\n}\r\n\r\nHowever, it would be more desirable if all functions were able to be curried without special declaration, such that:\r\n\r\nfunc addTwo(a:Int, b:Int) -> Int\r\nis equivalent to\r\nfunc addTwo(a:Int) -> (Int -> Int)\r\n\r\nThis should extend to all functions.\r\n\r\nSteps to Reproduce:\r\n1. Declare a function such as func addTwo(a:Int, b:Int) -> Int\r\n2. Set it like so: let curried = addTwo(1)\r\n\r\nExpected Results:\r\nThe curried constant is a function that takes a single Int and adds one to it.\r\n\r\nActual Results:\r\nA complier error that states: \"Cannot convert the expression's type 'Int' to type '(Int, Int)'\""
    email: injahta@gmail.com
    modified: "2014-06-08T17:33:08.525826Z"
    number: "17223324"
    number_intvalue: 17223324
    originated: 06/08/2014
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Functions in Swift should be curried by default without the need for special syntax.
