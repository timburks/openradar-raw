apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17497529"
    labels:
        datastore_id: "5786592929120256"
data:
    classification: ""
    created: "2014-06-29T00:29:34.772969Z"
    description: "Summary:\r\nThe current restriction that enumerations with associated values cannot have a backing type uneccessarily complicates conforming to Comparable which is desirable for Enums.\r\n\r\nOne way to enable this is to make enums that have associated values backed by Int with fixed values decided strictly by order of declaration starting at 0. This would allow access to toRaw() which would simplify comparison of discriminated type enums.\r\n\r\na new method, toTuple() could return a tuple for discriminated types. This would allow simple unpacking for cases where the raw value is not enough to determine order. this method could, optionally, include the raw value as the first member of the tuple.\r\n\r\nSteps to Reproduce:\r\nTry to create a succinct comparison implementation for an enumeration with associated values.\r\n\r\nExpected Results:\r\nenum Position {\r\n    case Valid(Int, String, Int, Int)\r\n    case None\r\n    case Builtin\r\n    case Internal\r\n}\r\n\r\n@infix func <= (lhs:Position, rhs:Position) -> Bool {\r\n\r\n    let left = lhs.toRaw()\r\n    let right = rhs.toRaw()\r\n    \r\n    if left <= right {\r\n        return true\r\n    } else if (left > right) || (left != Position.Valid.toRaw()) {\r\n        return false\r\n    }\r\n\r\n    let (lFoo, lBar, lBaz, lQux) = lhs.toTuple()\r\n    let (rFoo, rBar, rBaz, rQux) = rhs.toTuple()\r\n    // figure out complex comparison\r\n    return ...\r\n}\r\n\r\nActual Results:\r\nThis functionality is unavailable.\r\n\r\nVersion:\r\n\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: GriotSpeak@gmail.com
    modified: "2014-07-19T04:24:57.441526Z"
    number: "17497529"
    number_intvalue: 17497529
    originated: "2014-06-28"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Closed as duplicate
    title: Swift Enumeration type with associated value does not easily conform to Comparable
