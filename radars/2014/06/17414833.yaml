apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17414833"
    labels:
        datastore_id: "6170041703727104"
data:
    classification: Feature (New)
    created: "2014-06-23T05:53:55.314088Z"
    description: "Summary:\r\nSwift should allow you to curry any parameter of any function by writing a function call that explicitly omits some of the parameters. It should also work with operators.\r\n\r\nSteps to Reproduce:\r\n1. Create a playground.\r\n\r\n2. Type the following:\r\n\r\n    import Foundation\r\n    let fiveRange = NSMakeRange(_, 5)    \r\n\r\nExpected Results:\r\nfiveRange becomes a function with signature (Int) -> (NSRange). When the resulting closure is called with a parameter x, it is equivalent to calling NSMakeRange(x, 5).\r\n\r\nActual Results:\r\nAn error: ‘_’ can only appear in a pattern or on the left side of an assignment\r\n\r\nNotes:\r\nIn other languages, currying only allows you to fill in the leftmost parameters of a function, but Swift should be more flexible and allow you to fill in any parameter. Parameters given as _, on the other hand, should be preserved exactly as they are, with any keyword intact and in the same order. Defaulted parameters that are not explicitly mentioned should be accessible on the curried function as well, but should still have a default value. It should also be possible to specify a method’s receiver as _, in which case the curried function would either take self as the first parameter, or return a closure of type Self -> OtherParams -> ReturnType.\r\n\r\nIn some cases, using _ may not give enough type information to determine which overloaded version of a function you want to curry. In that case, you should be able to say, for instance, “_ as String”. This may be nearly mandatory when leaving self to be provided later."
    email: brent@architechies.com
    modified: "2014-07-04T06:01:14.950653Z"
    number: "17414833"
    number_intvalue: 17414833
    originated: 22-Jun-2014 10:53 PM
    parent_number: "17117798"
    product: Developer Tools
    product_version: Xcode6-Beta2 (6A216f)
    reproducible: Always
    resolved: ""
    status: Duplicate/17117798
    title: Swift should have a built-in syntax for currying arbitrary functions
