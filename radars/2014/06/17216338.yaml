apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17216338"
    labels:
        datastore_id: "4992736407060480"
data:
    classification: ""
    created: "2014-06-07T17:20:42.260788Z"
    description: "Summary:\r\nHi, \r\nI'm filling this bug report for what may look like bugs in Swift language.\r\nI'm not the original person that have found this issue but I came up with a workaround. \r\n\r\nTo give you more context about these issues here are original thread posted to the devForums.\r\n https://devforums.apple.com/message/978757#978757\r\n\r\nSteps to Reproduce:\r\nUsing Swift language define an optional variable, use operators like ++, -- etc...:\r\nvar aNum: Int? = 3\r\n++aNum \r\n\r\nExpected Results:\r\nThe expected result should change the value of the variable according to the operator used, with the provided steps aNum should have an int value of 4\r\n\r\nActual Results:\r\n// Generates a compile error: could not find an overload for '++' that accepts the supplied arguments\r\n\r\n++ operator does not seem to accept optionals as arguments.\r\n\r\n\r\nVersion:\r\nXcode 6.0 6A215l\r\n\r\nNotes:\r\nI've redefined the ++ operator as a workaround\r\n\r\noperator prefix ++ {  }\r\n@prefix @assignment func ++ (inout value: Int?) -> Int {\r\n  if var n : Int = value {\r\n    value = ++n\r\n    return value!\r\n  }\r\n  else {\r\n    return 0 // discussion about returning 0 for an empty optional\r\n  }\r\n}\r\n\r\n\r\nvar aNum: Int? = 3\r\n++aNum // 4\r\n++aNum // 5\r\n\r\nvar aNum2: Int? // nil\r\n++aNum2 //discussion : 0\r\n\r\nvar a = 1\r\n++a // 2"
    email: florian.p37@gmail.com
    modified: "2014-06-07T17:21:08.450791Z"
    number: "17216338"
    number_intvalue: 17216338
    originated: 07-Jun-2014
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: swift-600.0.34.4.5
    reproducible: Always
    resolved: ""
    status: Open
    title: Using Swift Optionals with ++ --  Operators
