apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17174768"
    labels:
        datastore_id: "5041492875804672"
data:
    classification: New feature
    created: "2014-06-05T12:24:04.340011Z"
    description: "One of my most common things that I do with enums is to iterate through each possible member of the enum. GuidedTour.playground even makes you do such a task to generate a deck of cards.\r\n\r\nBut, Swift doesn't have a good support to do this. The following is rejected as an error ('Suit.Type' does not conform to protocol 'Sequence'), but I propose that it should work for this purpose:\r\n\r\nenum Suit {\r\n    case Spades, Hearts, Diamonds, Clubs\r\n}\r\n\r\nfor suit in Suit {\r\n    if suit == Suit.Spades {\r\n        println(\"ding\")\r\n    }\r\n}"
    email: tim.sheridan@gmail.com
    modified: "2014-06-11T20:17:33.186128Z"
    number: "17174768"
    number_intvalue: 17174768
    originated: "20140605"
    parent_number: "17102392"
    product: Swift
    product_version: ""
    reproducible: Always
    resolved: "20140611"
    status: Duplicate/17102392
    title: Swift enums should be iterable using for-in loops
