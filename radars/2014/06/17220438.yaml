apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17220438"
    labels:
        datastore_id: "5989503827181568"
data:
    classification: ""
    created: "2014-06-08T05:32:32.394348Z"
    description: "Summary:\r\nAccording to the Swift language specification (in \"The Swift Programming Language\"), it should be possible to create an extension on Generic Types. The extension grammar states that an extension takes an \"type-identifier\", which can include a \"generic-argument-clause\".\r\n\r\nCurrently, this is not possible, resulting in a compiler error (see below). This fails with both Standard Library types, and also user defined types.\r\n\r\nEven looking at the Swift standard library, it shows numerous extensions on Generic Types, some particularly notable examples are Array and Dictionary.\r\n\r\nSteps to Reproduce:\r\n1. Install Xcode6-Beta\r\n2. Create New Swift File\r\n3. Add the following:\r\n\r\n// Alternatively:\r\n// extension T[] { }\r\nextension Array<T> {\r\n}\r\n\r\n4. Create another New Swift File\r\n5. Add the following:\r\n\r\nstruct Foo<T> {\r\n}\r\n\r\nextension Foo<T> {\r\n}\r\n\r\n\r\nExpected Results:\r\nI expect for this to compile. Otherwise, the type of extensions one could add to a Generic Type would be very limited.\r\n\r\nActual Results:\r\nerror: use of undeclared type 'T'\r\n\r\nVersion:\r\nVersion 6.0 (6A215l)"
    email: davelee.com@gmail.com
    modified: "2014-06-08T05:32:32.39447Z"
    number: "17220438"
    number_intvalue: 17220438
    originated: "2014-06-07"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: 'Swift: Compiler error for extensions on Generic Types'
