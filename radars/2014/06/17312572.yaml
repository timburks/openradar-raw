apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17312572"
    labels:
        datastore_id: "5882482905841664"
data:
    classification: Enhancement
    created: "2014-06-14T04:13:43.93315Z"
    description: "By allowing optionals to be implicitly unwrapped, you have re-created the nil problem that you were trying to avoid in the first place.\r\n\r\nWhile more verbose, this code will always work. I thought that was one of the goals of Swift: to create safe code by default.\r\n\r\nfunc badIncrement(value: Int!) -> Int { return value + 1 }\r\nfunc safeIncrement(value: Int?) -> Int {\r\n    assert(value != nil)\r\n    if let safeValue = value { return safeValue + 1 }\r\n    return 0\r\n}\r\n\r\nbadIncrement(nil) // CRASH!\r\nsafeIncrement(nil) // caught at debug time, doesn't cause crash on ship\r\n\r\nPlease consider removal of implicitly unwrapped optionals, they are never safe."
    email: owensd@kiadsoftware.com
    modified: "2014-06-14T04:13:43.933276Z"
    number: "17312572"
    number_intvalue: 17312572
    originated: 13-Jun-2014 09:11 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 Beta
    reproducible: Always
    resolved: ""
    status: Opened
    title: 'Swift: Unwrapped optionals defeat the purpose of their existance'
