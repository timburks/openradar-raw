apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17305912"
    labels:
        datastore_id: "5801445462900736"
data:
    classification: ""
    created: "2014-06-13T19:35:53.360342Z"
    description: "Swift trades in Objective-C's message passing syntax for something much more akin to function calling. The language keeps the named parameters, but throws in oddly placed parenthesis and commas, resulting in weird, difficult to read code. I am not suggesting Objective-C has The One True Syntax, and I am definitely open to seeing what other ideas the Swift team might come up with. But I do feel strongly that the current syntax is severely lacking in several ways.\r\n\r\n- These are not, generally speaking, mathematical functions. They are messages being sent to an object. The mathematical form \"a(x)\" doesn't even make sense in most cases. This is something almost every popular programming language gets wrong.\r\n- That the first argument to a Swift method loses its name is strong evidence that there is something wrong with the syntax.\r\n- The message forms a single thought, so no unnecessary punctuation should be present, except that which is necessary to distinguish the message from surrounding code. To illustrate, try reading this code out loud:\r\n\r\n[baby percentileForWeight:weight atAge:age]\r\n \r\nI read that as \"bleh baby percentile for weight weight at age age bleh\".\r\n\r\nNow compare the same in Swift:\r\n\r\nbaby.percentileForWeight(weight, atAge:age)\r\n\r\nThat reads as \"baby bleh percentile for weight weight comma at age age bleh\".\r\n\r\nThere are far more blehs in the Swift example and, more importantly, they occur in the middle of the thought. Neither is perfect, to be sure, but the Objective-C code has no interruptions in the middle to account for excess punctuation such as periods, parenthesis, and commas. \r\n\r\nIf nothing else, the comma needs to go. \r\n\r\nAs stated above, I'm not necessarily tied to the exact syntax used by Objective-C, but it does have some other, less obvious advantages over Swift's. For example, on an English keyboard, [ and ] can by typed with a single key, while ( and ) require a chord. Over the course of a day, those extra keystrokes add up!\r\n\r\nAside from Objective-C's syntax, whose only *real* problem is that it is slightly scary to people coming from other popular programming languages, I don't have any suggestions for alternatives. I would surely love to see Objective-C's message passing syntax brought in to Swift - it would be a tremendous improvement - but I'm also very interested to see what else the Swift team can come up with. Please consider adopting some other syntax for message passing.\r\n\r\nSteps to Reproduce\r\nN/A\r\n\r\nExpected Results\r\nN/A\r\n\r\nActual Results\r\nN/A\r\n\r\nConfiguration\r\nAny\r\n\r\nXcode Version\r\nXcode 6 Beta 1\r\n\r\nAdditional Notes\r\nAn excessive example:\r\n\r\nObjective-C:\r\nCPTPlot* plot = [self plotWithBottomPercentile:bottomPercentile topPercentile:topPercentile fill:fills[i] lineStyle:lineStyle textStyle:textStyle numberFormatter:nf xLoc:xLoc xVal:xVal plotSpace:aGraph.defaultPlotSpace insertIntoPointsArray:plotPoints chartStyle:style chartViewStyle:chartViewStyle];\r\n\t\t                        \r\nSwift:\r\nlet plot = plotWithBottomPercentile(bottomPercentile, topPercentile:topPercentile, fill:fills[i], lineStyle:lineStyle, textStyle:textStyle, numberFormatter:nf, xLoc:xLoc, xVal:xVal, plotSpace:aGraph.defaultPlotSpace, insertIntoPointsArray:plotPoints, chartStyle:style, chartViewStyle:chartViewStyle)\r\n\r\nLeaving aside the design decision to have a method with so many parameters, this reveals a number of issues with Swift:\r\n\r\n- It's a punctuation jamboree! \r\n- Why does the first parameter have a ( in front of it instead of a : ? \r\n- Look at all those commas! What are they needed for?"
    email: amolloy@gmail.com
    modified: "2014-07-08T22:16:22.192416Z"
    number: "17305912"
    number_intvalue: 17305912
    originated: 6/13/14
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: As Intended
    status: Closed
    title: '[Swift] Please reconsider the message passing syntax'
