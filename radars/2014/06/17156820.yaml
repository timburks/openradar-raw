apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17156820"
    labels:
        datastore_id: "6689274258784256"
data:
    classification: Language defect
    created: "2014-06-06T14:45:56.722405Z"
    description: "Summary:\r\nUsing \"let\" to declare constants in Swift is broken for a multiple reasons.\r\n\r\nFirst, if \"var\" is used to declare variables - which is eminently readable and straightfoward - why is \"const\" not used to declare constants? Nothing about \"let\" as an English word says that the declared item should be immutable - it lacks simple obviousness of \"var\", and by analogy, \"const\".\r\n\r\nSecond, \"let\" looks like a hangover from Dartmouth BASIC. I mean, come on.\r\n\r\nSteps to Reproduce:\r\n1. Declare a constant in Swift.\r\n\r\nExpected Results:\r\nMy code should be beautiful and intent-revealing, even to Swift language novices.\r\n\r\nActual Results:\r\nMy code declares constants using a keyword that is used to declare variables in BASIC, local scope in JavaScript and Haskell, identifier binding in Lisp and Scheme, and some foolishness in C# queries that I can't be bothered to learn. Swift language novices are given no cue as to my intent, and computer language polyglots have to train their brains to overload this vague keyword *yet again* in the context of Swift programming. The heat death of the universe is accelerated. Somewhere, a puppy cries bitter tears.\r\n\r\nVersion:\r\nXcode 6 Beta 1 6A215l, all OS versions\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:"
    email: brad.heintz@ymedialabs.com
    modified: "2014-06-26T17:51:21.800169Z"
    number: "17156820"
    number_intvalue: 17156820
    originated: 04-Jun-2014 03:10 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 Beta 1 6A215l, all OS versions
    reproducible: Yes
    resolved: No
    status: Closed
    title: '"let" keyword in Swift obfuscates developer intent. It should be "const".'
