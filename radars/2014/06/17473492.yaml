apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17473492"
    labels:
        datastore_id: "4928328003747840"
data:
    classification: ""
    created: "2014-06-27T21:41:20.141833Z"
    description: "Summary:\r\nUsing functions like sin, cos, sqrt and abs in Swift with CGFloats requires way too much typecasting.\r\n\r\nSteps to Reproduce:\r\nimport UIKit\r\n\r\nfunc distance(p1: CGPoint, p2: CGPoint) -> CGFloat {\r\n    return sqrt(pow(p1.x - p2.x, 2) + pow(p1.y - p2.y, 2))\r\n}\r\n\r\nExpected Results:\r\nShould return the distance between the two points. Works fine in a playground, but give the following error in compiled code:\r\n\r\n  'NSNumber' is not a subtype of 'CGFloat'\r\n\r\nIf you wrap the result in a CGFloat cast, the error changes to:\r\n\r\n  Could not find an overload for '+' that accepts the supplied arguments\r\n\r\nSo let's try overflowing addition/subtraction:\r\n\r\n  Could not find an overload for 'init' that accepts the supplied arguments\r\n\r\nLet's try removing the CGFloat cast:\r\n\r\n  Cannot convert the expression's type 'CDouble' to type 'CDouble'\r\n\r\n?!\r\n\r\nHere's what finally worked:\r\n\r\nfunc distance(p1: CGPoint, p2: CGPoint) -> CGFloat {\r\n    return CGFloat(sqrt(pow(CDouble(p1.x - p2.x), 2) + pow(CDouble(p1.y - p2.y), 2)))\r\n}\r\n\r\n\r\nActual Results:\r\nIdeally the original writing should work not just in playgrounds, but also in compiled code:\r\n\r\nfunc distance(p1: CGPoint, p2: CGPoint) -> CGFloat {\r\n    return sqrt(pow(p1.x - p2.x, 2) + pow(p1.y - p2.y, 2))\r\n}\r\n\r\nThere probably needs to be a standard Swift math library that adds trig functions that take native Float and Double types and return the same, or perhaps take any numeric type using generics.  \r\n\r\nVersion:\r\nXcode 6 Beta 2\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: frank@frankschmitt.org
    modified: "2014-06-27T21:41:20.142079Z"
    number: "17473492"
    number_intvalue: 17473492
    originated: "2014-06-26"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 Beta 2
    reproducible: ""
    resolved: ""
    status: Open
    title: Trigonometric functions don't play nice with Core Graphics in Swift
