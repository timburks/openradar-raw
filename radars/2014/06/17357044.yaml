apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17357044"
    labels:
        datastore_id: "5853573480972288"
data:
    classification: Enhancement
    created: "2014-06-18T08:49:47.904536Z"
    description: |-
        The following very simple code generates an error with Swift:

        ====
        let handler: (() -> ())? = {
        	println("test")
        }

        let handler2: () -> () = {
        	handler?()
        }
        ====

        Error: Cannot convert the expression's type '() -> $T0' to type '$T4'

        This is because handler2 returns Void per its type, but is returning Void? per its code (single line closure). Got it.
        Isn't this construct very counter intuitive? (Not just talking of the error message.)
    email: raphael@creaceed.com
    modified: "2014-06-18T08:49:47.904638Z"
    number: "17357044"
    number_intvalue: 17357044
    originated: 18-Jun-2014 10:49 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 Beta2
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Swift error reporting + code readability with single-line block
