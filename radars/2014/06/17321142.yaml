apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17321142"
    labels:
        datastore_id: "5057608666841088"
data:
    classification: Crash
    created: "2014-06-16T01:53:00.911784Z"
    description: "While trying to create generic functions for transforming Sequences or Generators in various ways [initially, attempting to port Python's itertools to swift]. I keep running into crashes, where the compiler segfaults, apparently while trying to infer or check types somewhere.\r\n\r\nSee https://github.com/abarnert/swift-itertools/blob/d2de3034ee268cbdba3b36215d0915b5c4e17724/teetest.swift for an example that reliably crashes the compiler. Commenting out the code inside Tee.next (return nil), inside tee (return []), and at the top level has no effect. Changing either or both structs to classes replaces the segfault with a compiler fatal error (\"LLVM ERROR: unimplemented IRGen feature! non-fixed class layout\"), but that doesn't help much, and I don't think either one should be a class anyway (although I could easily be wrong).\r\n\r\nEarlier attempts at many of the functions in https://github.com/abarnert/swift-itertools produced identical crashes. In some cases there was clearly a type error in my code (e.g., declaring a parameter or member as a Sequence instead of an S) that I was able to find and fix; in others, I just kept rewriting things until it worked, or figured out why it was impossibleâ€¦"
    email: abarnert@gmail.com
    modified: "2014-06-16T01:53:00.911934Z"
    number: "17321142"
    number_intvalue: 17321142
    originated: "2014-06-16"
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.0 beta (6A215I)
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift compiler crash
