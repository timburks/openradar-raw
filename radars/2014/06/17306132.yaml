apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17306132"
    labels:
        datastore_id: "4932204211732480"
data:
    classification: Feature (New)
    created: "2014-06-13T19:24:47.888924Z"
    description: "Summary:\r\nThis is a duplicate of rdar://17257306\r\n\r\n\r\n\r\nAny modern language should natively support regular expression literals without resorting to constructing a class and interpolating a pattern into a string.  Of course a class equivalent would be driving the functionality and be helpful for more dynamic construction of patterns.  Regex literals can really clean up code and make it more readable.\r\n\r\nThere is not a single mention of Regular Expressions in the Swift book and while I know we still have NSRegularExpression, it is cumbersome to use.\r\n\r\nProposal:\r\n\r\nA regular expression literal might look like the following:\r\n\r\nlet pattern = /[Cc]ats?/\r\n\r\nA simple way of detecting a match:\r\n\r\nif pattern.isMatch(text) {\r\n    …\r\n}\r\n\r\nIt would be great if this could be simplified to a special operator, such as =~ in Ruby.\r\n\r\nAlso enumerate over matches:\r\n\r\nfor match in pattern.matches(text) {\r\n   println(“Found \\(match.value) at character position: \\(match.position)”)\r\n}\r\n\r\nSupport for named groups:\r\n\r\nlet naiveEmailPattern = /(<?username>[A-Za-z-_0-9])@(<?company>[A-Za-z0-9_-]).corp/\r\nfor match in naiveEmailPattern.matches(text) {\r\n\tlet username = match[“username”]\r\n        let company = match[“company”]\r\n        let email = match.value\r\n        println(“The user \\(username) works at \\(company) and has an email address of \\(email)”)\r\n}\r\n\r\nVersion:\r\n5.0.2 (5A3005), 10.9 (13A598)"
    email: hoop33@gmail.com
    modified: "2014-06-13T19:24:47.889099Z"
    number: "17306132"
    number_intvalue: 17306132
    originated: 6/13/2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: Swift should provide native regular expression literals
