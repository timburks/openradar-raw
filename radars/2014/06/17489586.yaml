apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17489586"
    labels:
        datastore_id: "5310142006427648"
data:
    classification: Serious Bug
    created: "2014-06-27T21:24:27.84558Z"
    description: |-
        Summary:
        There is no autocompletion when implementing a generic function.


        Steps to Reproduce:
        1. Implement a generic function such as identity:

        func identity<Thing>(a: Thing) -> Thing { return a }

        2. When typing out the type of the parameter or of the return value, attempt to invoke autocompletion in Xcode.


        Expected Results:
        I expected that Xcode would autocomplete the name of the type from the function’s type parameter list.


        Actual Results:
        It did not.


        Regression:
        N/A


        Notes:
        Lacking this feature encourages the use of single-letter type parameters, which is an antipattern in many cases. Swift’s definition of Dictionary uses the explanatory type parameter names KeyType and ValueType, which is wonderful, but it’s harder to type that without autocompletion than Dictionary<K, V> would have been.

        Since type parameters are just parameters, I think this should behave the same way as Xcode behaves w.r.t. autocompletion of the parameter names themselves.

        This should also apply in the body of the function, if there are types being instantiated or otherwise referenced therein.
    email: rix.rob@gmail.com
    modified: "2014-06-27T21:24:27.845755Z"
    number: "17489586"
    number_intvalue: 17489586
    originated: 27-Jun-2014 05:24 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode6-Beta2 (6A216f)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Xcode6-Beta2 (6A216f): No autocompletion for type parameters in function definitions'
