apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17203060"
    labels:
        datastore_id: "4917789227745280"
data:
    classification: ""
    created: "2014-06-06T19:00:16.058431Z"
    description: "Summary:\r\nI was very pleased to see that Swift has ML-style sharing constraints in generic parameter lists. An extension to this behavior would make protocols vastly more useful, as described below.\r\n\r\nSteps to Reproduce:\r\nConsider the following (hypothetical) code:\r\n\r\n````\r\nprotocol S {\r\n    typealias A\r\n    typealias B\r\n}\r\n\r\nprotocol T {\r\n    typealias X : S where X.A == X.B\r\n}\r\n````\r\n\r\nExpected Results:\r\nThis should create a protocol with an abstract type member `X` constrained by protocol `S`, and the following sharing constraints: `X.A == X.B`.\r\n\r\nIt would be ideal to model this feature off the way that where-clauses work in Standard ML. This way we can maintain abstraction at the same time as choosing which information escapes in a very deliberate way.\r\n\r\nActual Results:\r\nThis behavior is in fact not supported in Swift."
    email: jonsterling@gmail.com
    modified: "2014-06-06T19:01:01.929852Z"
    number: "17203060"
    number_intvalue: 17203060
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Where-clauses outside of generic parameter lists
