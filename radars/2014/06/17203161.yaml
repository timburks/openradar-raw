apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17203161"
    labels:
        datastore_id: "5187384324915200"
data:
    classification: ""
    created: "2014-06-06T18:59:37.543577Z"
    description: "Summary:\r\nCurrently, the only things that may be quantified over in Swift are base types (things of kind `Type`). It would be very useful of type constructors (things of kind `Type -> Type`) could also be abstracted over.\r\n\r\nSteps to Reproduce:\r\n````\r\nprotocol Endofunctor {\r\n    typealias F<_>\r\n    static func map<A,B>(A -> B) -> (F<A> -> F<B>)\r\n}\r\n````\r\n\r\nExpected Results:\r\nA protocol which quantifies over type constructors instead of types could be constructed. This is necessary in order to express functors, monads, traversables, and the entire menagerie of useful abstractions.\r\n\r\nActual Results:\r\nThis is not currently supported in Swift."
    email: jonsterling@gmail.com
    modified: "2014-06-06T19:01:06.623237Z"
    number: "17203161"
    number_intvalue: 17203161
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Higher-kinded abstraction in Swift
