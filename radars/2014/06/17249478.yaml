apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17249478"
    labels:
        datastore_id: "5822740984496128"
data:
    classification: ""
    created: "2014-06-10T13:05:01.77306Z"
    description: "In the attached code, I have two classes, Base and Derived, and some very simple code to exercise them, printing a result that should eventually be generated by the \"Derived\" class. In a command-line project, if I have all the code together in a single file, the result is what I expect; both println statements output \"Derived contents, dynamically generated\".\r\n\r\nHowever, if I take the Base and Derived class definitions, and put them in their own files, making no other changes, then I get \"Derived contents, dynamically generated\", followed by \"Base contents\", indicating that the wrong getter is being called.\r\n\r\nSteps to Reproduce:\r\n1. Take the code in \"single_file\", attached, and put it in a new Xcode OS X command-line utility Swift project.\r\n2. Run it.\r\n3. Cut and paste the code for the \"Derived\" class out into a new file called \"derived.swift\"\r\n4. Cut and paste the code for the \"Base\" class out into a new file called \"derived.swift\"\r\n5. (At this point, you should have code that looks like the \"split_across_files\" folder, attached)\r\n6. Re-run the project. \r\n7. Observe difference in output\r\n\r\nExpected Results:\r\nI'd expect that in both cases, the Derived class's setter would be used, resulting in \"Derived contents, dynamically generated\" to appear twice.\r\n\r\nActual Results:\r\nWith the code in a single source file, I get the expected results. With the code split across three source files, I get \"Derived contents, dynamically generated\", followed by \"Base contents\", which seems to indicate that the wrong getter is being called.\r\n\r\nVersion:\r\nXcode Version 6.0 (6A215l)\r\nOS X 10.9.4 Build 13E9\r\n\r\nNotes:\r\nFirst observed while investigating this Stack Overflow question: http://stackoverflow.com/questions/24135741/calling-a-subclasss-getter-in-swift/24136038?noredirect=1#comment37248938_24136038\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n\r\n\r\n------\r\n//\r\n//  main.swift\r\n//  derivation\r\n//\r\n//  Created by Matt Gibson on 10/06/2014.\r\n//  Copyright (c) 2014 Matt Gibson Creative. All rights reserved.\r\n//\r\n\r\nimport Foundation\r\n\r\nclass Base {\r\n    var contents = \"Base contents\"\r\n    var description: String {\r\n    get {\r\n        return self.contents\r\n    }\r\n    }\r\n}\r\n\r\nclass Derived : Base {\r\n    override var contents: String {\r\n    get {\r\n        return \"Derived contents, dynamically generated\"\r\n    }\r\n    set { }\r\n    }\r\n}\r\n\r\nlet d = Derived()\r\nprintln(d.contents) // Prints \"Derived contents, dynamically generated\"\r\nprintln(d.description) // Prints \"Derived contents, dynamically generated\" if single source file, \"Base contents\" if classes above are split out into their own files."
    email: gothick.fysh@gmail.com
    modified: "2014-06-10T13:05:01.773198Z"
    number: "17249478"
    number_intvalue: 17249478
    originated: 10 June 2014
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Swift code in class hierarchy works differently split across files than in a single file
