apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17472835"
    labels:
        datastore_id: "5781909804154880"
data:
    classification: Crash
    created: "2014-06-26T20:19:14.377758Z"
    description: "Summary:\r\nSwift overflow \"protection\" that cannot be caught and causes crashes  is the wrong default, please change it to something safer, particularly as Swift is supposed to be safe language.\r\n\r\nSee also my article:  http://blog.metaobject.com/2014/06/how-to-swiftly-destroy-370-million.html \r\n\r\nAlternatives are:\r\n\r\n1.  A proper object-oriented numeric tower, like Smalltalk's\r\n\r\nSuch a numeric tower automatically overflows to bigints and/or floats or fractions as necessary.  The use of tagged (small-)integers almost completely eliminates overhead, especially on 64 bit machines and current hardware that tends to be memory-bound.  Safer and more capable.\r\n\r\n2.  Wraparound\r\n\r\nThe existing behavior.  While not ideal, it seems preferable to dumping core.  Dumping core could be preserved as an opt-in debugging feature.  (In a sense it already is, as it is the behavior of -Ofast, and -Ofast is necessary for remotely adequate performance).\r\n\r\n3.   Clamping\r\n\r\nArguably the correct behavior for explicitly size/range restricted values.  The programmer specifically said she didn't want a value out of this range, and the closest value to the one requested is the clamped value ( so MAX(type) for overflow, MIN(type) for underflow).\r\n\r\nThe ideal solution would probably be a combination of (1), unrestricted overflow with either (2) or (3), (2) for closeness to the underlying hardware (3) for closeness to the intended semantics of limited precision integers.\r\n\r\nSteps to Reproduce:\r\nvar a = 2\r\nvar b:Int16\r\nfor i in 1..100 {\r\n  a=a*2\r\n  println(a)\r\n  b=Int16(a)\r\n}\r\n\r\n\r\nExpected Results:\r\nCorrect result, clamped result, wraparound (machine arithmetic) result, in that order of preference."
    email: marcel.weiher@gmail.com
    modified: "2014-06-26T20:19:14.377882Z"
    number: "17472835"
    number_intvalue: 17472835
    originated: June 26th 2014
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: 6.x
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Overflow "protection" needlessly crashes programs, please change the default'
