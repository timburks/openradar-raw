apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17239947"
    labels:
        datastore_id: "5860221016604672"
data:
    classification: UI/Usability
    created: "2014-06-09T22:08:06.644366Z"
    description: "Summary:\r\nIn C, the preprocessor can be used to retrieve the string representation of an expression. For instance, before the C `assert` macro aborts, it prints the expression that failed to be true:\r\n\r\n#define assert(e)  \\\r\n    ((void) ((e) ? ((void)0) : __assert (#e, __FILE__, __LINE__)))\r\n#define __assert(e, file, line) \\\r\n    ((void)printf (\"%s:%u: failed assertion `%s'\\n\", file, line, e), abort())\r\n\r\nassert(15 < 14);\r\n// prints '...failed assertion '15 < 14'\r\n\r\nThis is very useful in logging the context of an exception, both in production as well as in testing (the XCTest unit test assertion macros are written similarly).\r\n\r\nHowever, in Swift, assertions lack this information: `assert(15 <14)` prints only \"XCTestOutputBarrierassertion failed...\". This will not be helpful in log messages. Please add a way to retrieve the string representation of an exception for use in assertions.\r\n\r\nSteps to Reproduce:\r\n\r\n\r\nExpected Results:\r\n\r\n\r\nActual Results:\r\n\r\n\r\nVersion:\r\nXcode 6.0 (6A215I)\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: jeffreywear@gmail.com
    modified: "2014-06-09T22:08:06.644568Z"
    number: "17239947"
    number_intvalue: 17239947
    originated: 06.09.2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.0 (6A215I)
    reproducible: N/A
    resolved: ""
    status: Open
    title: Provide a way to convert a Swift expression to its string representation (e.g. for assertions)
