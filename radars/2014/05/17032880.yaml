apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17032880"
    labels:
        datastore_id: "5904252618670080"
data:
    classification: Other Bug
    created: "2014-05-26T14:54:29.728297Z"
    description: "Summary:\r\nWhen creating a VBO and VAO, drawing with them, and then deleting them soon after in the same render loop (when the target is an offscreen buffer, CVPixelBuffer), it does not draw. It should (and did prior to 7.1.1) draw, as OpenGL ES should still keep those objects alive internally. But instead it seems like deleting those objects (glDeleteBuffers, glDeleteVertexArraysOES) is deleting it completely.\r\n\r\nNo GL errors are reported from glGetError, and flushing (or even finishing) the command pipeline before the deletion makes no difference. Only waiting until the next render loop to delete makes it work correctly. Although if you first delete the VAO and then the VBO that also works.\r\n\r\nSteps to Reproduce:\r\n1. Create a VBO and VAO\r\n2. Initialize VBO with data to be drawn, and set appropriate state VAO should bind when enabled.\r\n3. Bind VAO and draw\r\n4. Delete VBO, and then VAO\r\n\r\nExpected Results:\r\nThe content within the VBO to be drawn.\r\n\r\nActual Results:\r\nNothing is drawn."
    email: ScrimpyCat@gmail.com
    modified: "2014-05-26T14:54:29.728434Z"
    number: "17032880"
    number_intvalue: 17032880
    originated: May 27 2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 7.1.1
    reproducible: Yes
    resolved: No
    status: Open
    title: OpenGL ES not handling VBO+VAO deletions properly
