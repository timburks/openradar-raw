apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "16867174"
    labels:
        datastore_id: "5798216318582784"
data:
    classification: Feature (New)
    created: "2014-05-13T16:34:48.929062Z"
    description: "The current mapView:regionWillChangeAnimated: delegate callback doesn't tell whether the region change is caused by a user gesture or by a programmatic region change. \r\n\r\nI'm proposing another delegate method:\r\n\r\n- (void)mapView:(MKMapView *)mapView regionWillChangeAnimated:(BOOL)animated initiatedByUser:(BOOL)initiatedByUser\r\n\r\nIt would behave similarly to the current delegate callback. The initiatedByUser flag would be set if and only if the user panned, pinched, double or 2-finger-tapped the mapView or if the user selected a pin near the border forcing the mapView to scroll before displaying the callout.\r\n\r\nThis would be helpful to break feedback loops for apps that fetch content depending on the current map region and zoom to the fetched annotations at the same time. Currently there is a feedback loop:\r\n\r\n1. fetch new content =>\r\n2. zoom to fetched annotations =>\r\n3. map region update detected =>\r\n4. fetch new content for new region => 2!\r\n\r\nOf course we can do all sorts of workarounds to break such feedback loops but it would be much easier if the mapView would let us know whether the region update was user initiated or not.\r\n\r\n\r\nI should also add the Google Maps SDK for iOS has this feature in their -mapView:willMove: callback:\r\n\r\nhttps://developers.google.com/maps/documentation/ios/reference/protocol_g_m_s_map_view_delegate-p\r\n\r\nIt's very valuable."
    email: futuretap@googlemail.com
    modified: "2014-05-13T16:34:48.929261Z"
    number: "16867174"
    number_intvalue: 16867174
    originated: 09-May-2014 06:02 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "7.1"
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: 'MKMapViewDelegate: need API to differentiate region changes initiated via a user gesture'
