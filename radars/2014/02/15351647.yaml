apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "15351647"
    labels:
        datastore_id: "5535302579912704"
data:
    classification: Crash
    created: "2014-02-21T16:41:06.754256Z"
    description: "This code intermittently crashes:\r\n\r\n[[[MKMapSnapshotter alloc] initWithOptions:mapSnapshotOptions] startWithCompletionHandler:^(MKMapSnapshot *snapshot, NSError *error) {\r\n// completion Handler\r\n}];\r\n\r\n\r\nI did see this mostly on the Simulator so far because I haven't yet tested extensively on the device.\r\n\r\n(lldb) bt\r\n* thread #277: tid = 0x32906d, 0x00000000, queue = 'com.apple.maps.snapshotter, stop reason = EXC_BAD_ACCESS (code=2, address=0x0)\r\n    frame #0: 0x00000000\r\n    frame #1: 0x1691a145 GLEngine`gleFlushAtomicFunc + 17\r\n    frame #2: 0x1694e6b9 GLEngine`gleDrawArraysOrElements_ExecCore + 553\r\n    frame #3: 0x1694c382 GLEngine`glDrawElements_IMM_ES2Exec + 330\r\n    frame #4: 0x02f89b6d OpenGLES`glDrawElements + 65\r\n    frame #5: 0x0b458eec VectorKit`-[VGLMesh drawTrianglesWithContext:offset:count:] + 108\r\n    frame #6: 0x0b4a93e6 VectorKit`coalesceDraw(std::__1::vector<VGLMeshLeafNode, vk_allocator<VGLMeshLeafNode> > const&, std::__1::bitset<32ul> const&, VGLCullableMesh*, VGLContext*, std::__1::shared_ptr<VGLMeshNode> const&, _NSRange) + 534\r\n    frame #7: 0x0b4a91c2 VectorKit`-[VGLCullableMesh drawInPreparedCulls:] + 114\r\n    frame #8: 0x0b5270bc VectorKit`-[VKRoadPainter drawRoadTiles:context:layer:withModel:scene:stencilOffset:needsTileStencil:atopTransparent:includeBorders:] + 22252\r\n    frame #9: 0x0b449794 VectorKit`-[VKRoadMapModel drawScene:withContext:] + 260\r\n    frame #10: 0x0b3b852f VectorKit`-[VKModelObject drawScene:withContext:pass:] + 47\r\n    frame #11: 0x0b3b8376 VectorKit`-[VKModelObject recursiveDrawScene:whenReadyWithContext:pass:] + 150\r\n    frame #12: 0x0b3c1f38 VectorKit`-[VKMapModel recursiveDrawScene:withContext:pass:] + 472\r\n    frame #13: 0x0b3b7e18 VectorKit`-[VKModelObject recursiveDrawScene:withContext:pass:] + 344\r\n    frame #14: 0x0b3d7250 VectorKit`-[VKWorld drawScene:withContext:] + 64\r\n    frame #15: 0x0b4cb90a VectorKit`__29-[VKImageCanvas renderScene:]_block_invoke + 346\r\n    frame #16: 0x0b44f325 VectorKit`-[VGLContext perform:] + 85\r\n    frame #17: 0x0b4cb6bd VectorKit`-[VKImageCanvas renderScene:] + 189\r\n    frame #18: 0x0b4ca7f1 VectorKit`__52-[VKMapSnapshotCreator mapModelWillBecomFullyDrawn:]_block_invoke + 97\r\n    frame #19: 0x040db7f8 libdispatch.dylib`_dispatch_call_block_and_release + 15\r\n    frame #20: 0x040f04b0 libdispatch.dylib`_dispatch_client_callout + 14\r\n    frame #21: 0x040de07f libdispatch.dylib`_dispatch_queue_drain + 452\r\n    frame #22: 0x040dde7a libdispatch.dylib`_dispatch_queue_invoke + 128\r\n    frame #23: 0x040dee1f libdispatch.dylib`_dispatch_root_queue_drain + 83\r\n    frame #24: 0x040df137 libdispatch.dylib`_dispatch_worker_thread2 + 39\r\n    frame #25: 0x0447cdab libsystem_pthread.dylib`_pthread_wqthread + 336\r\n\r\n\r\n\r\nOrtwin Gentz 30-Oct-2013 07:36 PM\r\n\r\nanother backtrace, also from the Simulator:\r\n\r\n(lldb) bt\r\n* thread #15: tid = 0x385954, 0x18ddc042, queue = 'com.apple.vectorkit.dispatch.renderqueue.0xd6804b0, stop reason = EXC_BAD_ACCESS (code=2, address=0x50)\r\n    frame #0: 0x18ddc042\r\n    frame #1: 0x18dd968d\r\n    frame #2: 0x16c428f5 GLRendererFloat`gldRenderFillPolygonPtr + 90\r\n    frame #3: 0x18dda36d\r\n    frame #4: 0x16992145 GLEngine`gleFlushAtomicFunc + 17\r\n    frame #5: 0x169c66b9 GLEngine`gleDrawArraysOrElements_ExecCore + 553\r\n    frame #6: 0x169c4382 GLEngine`glDrawElements_IMM_ES2Exec + 330\r\n    frame #7: 0x02f88b6d OpenGLES`glDrawElements + 65\r\n    frame #8: 0x0b457eec VectorKit`-[VGLMesh drawTrianglesWithContext:offset:count:] + 108\r\n    frame #9: 0x0b4a83e6 VectorKit`coalesceDraw(std::__1::vector<VGLMeshLeafNode, vk_allocator<VGLMeshLeafNode> > const&, std::__1::bitset<32ul> const&, VGLCullableMesh*, VGLContext*, std::__1::shared_ptr<VGLMeshNode> const&, _NSRange) + 534\r\n    frame #10: 0x0b4a84f6 VectorKit`-[VGLCullableMesh drawInRects:numRects:context:] + 150\r\n    frame #11: 0x0b439b4e VectorKit`-[VKPolygonMapModel renderNormalPolygonsInRenderStepSet:withWidth:minDepth:context:] + 4734\r\n    frame #12: 0x0b4383e7 VectorKit`-[VKPolygonMapModel drawRenderStepSet:scene:withContext:] + 311\r\n    frame #13: 0x0b43849d VectorKit`-[VKPolygonMapModel drawScene:withContext:pass:] + 125\r\n    frame #14: 0x0b3b6d1a VectorKit`-[VKModelObject recursiveDrawScene:withContext:pass:] + 90\r\n    frame #15: 0x0b3b6e18 VectorKit`-[VKModelObject recursiveDrawScene:withContext:pass:] + 344\r\n    frame #16: 0x0b51eb31 VectorKit`-[VKMapRasterizer recursiveDrawScene:withContext:pass:] + 785\r\n    frame #17: 0x0b3b6e18 VectorKit`-[VKModelObject recursiveDrawScene:withContext:pass:] + 344\r\n    frame #18: 0x0b3c0df6 VectorKit`-[VKMapModel recursiveDrawScene:withContext:pass:] + 150\r\n    frame #19: 0x0b3b6e18 VectorKit`-[VKModelObject recursiveDrawScene:withContext:pass:] + 344\r\n    frame #20: 0x0b3d6250 VectorKit`-[VKWorld drawScene:withContext:] + 64\r\n    frame #21: 0x0b3c5fcb VectorKit`-[VKScreenCanvas _renderCore:] + 443\r\n    frame #22: 0x0b3c5c96 VectorKit`__36-[VKScreenCanvas drawWithTimestamp:]_block_invoke_2 + 70\r\n    frame #23: 0x0b44e325 VectorKit`-[VGLContext perform:] + 85\r\n    frame #24: 0x0b3c5c38 VectorKit`__36-[VKScreenCanvas drawWithTimestamp:]_block_invoke + 120\r\n    frame #25: 0x040da7f8 libdispatch.dylib`_dispatch_call_block_and_release + 15\r\n    frame #26: 0x040ef4b0 libdispatch.dylib`_dispatch_client_callout + 14\r\n    frame #27: 0x040dd07f libdispatch.dylib`_dispatch_queue_drain + 452\r\n    frame #28: 0x040dce7a libdispatch.dylib`_dispatch_queue_invoke + 128\r\n    frame #29: 0x040dde1f libdispatch.dylib`_dispatch_root_queue_drain + 83\r\n    frame #30: 0x040ddd31 libdispatch.dylib`_dispatch_worker_thread + 118\r\n    frame #31: 0x0447a5fb libsystem_pthread.dylib`_pthread_body + 144\r\n    frame #32: 0x0447a485 libsystem_pthread.dylib`_pthread_start + 130\r\n\r\n\r\nOrtwin Gentz 16-Dec-2013 09:18 PM\r\n\r\nanother backtrace, from an iPhone 5s, running iOS 7.1 beta 2 (11D5115d):\r\n\r\n* thread #754: tid = 0x5fa9b, 0x3943d5e2 libobjc.A.dylib`objc_msgSend + 2, queue = 'com.apple.maps.snapshotter', stop reason = EXC_BAD_ACCESS (code=1, address=0x20)\r\n  * frame #0: 0x3943d5e2 libobjc.A.dylib`objc_msgSend + 2\r\n    frame #1: 0x002f2b1a WhereTo`___lldb_unnamed_function104$$WhereTo + 310\r\n    frame #2: 0x002ed80e WhereTo`___lldb_unnamed_function73$$WhereTo + 258\r\n    frame #3: 0x002e6d1a WhereTo`___lldb_unnamed_function5$$WhereTo + 914\r\n    frame #4: 0x002eb762 WhereTo`___lldb_unnamed_function36$$WhereTo + 158\r\n    frame #5: 0x2f4f95f8 Foundation`-[NSNotificationCenter removeObserver:] + 28\r\n    frame #6: 0x369c21ea VectorKit`-[VKTileSource dealloc] + 54\r\n    frame #7: 0x369c21b0 VectorKit`-[VKTileSetBackedTileSource dealloc] + 172\r\n    frame #8: 0x36a69b70 VectorKit`-[VKLabelTileSource dealloc] + 40\r\n    frame #9: 0x39442b6a libobjc.A.dylib`objc_object::sidetable_release(bool) + 174\r\n    frame #10: 0x36a69d6c VectorKit`-[VKTileProvider dealloc] + 360\r\n    frame #11: 0x39442b6a libobjc.A.dylib`objc_object::sidetable_release(bool) + 174\r\n    frame #12: 0x36a697ae VectorKit`-[VKMapModel dealloc] + 218\r\n    frame #13: 0x39442b6a libobjc.A.dylib`objc_object::sidetable_release(bool) + 174\r\n    frame #14: 0x36a695f8 VectorKit`-[VKMapCameraController dealloc] + 44\r\n    frame #15: 0x39442b6a libobjc.A.dylib`objc_object::sidetable_release(bool) + 174\r\n    frame #16: 0x36b46024 VectorKit`-[VKMapSnapshotCreator dealloc] + 240\r\n    frame #17: 0x39442b6a libobjc.A.dylib`objc_object::sidetable_release(bool) + 174\r\n    frame #18: 0x3996aac4 libsystem_blocks.dylib`_Block_release + 216\r\n    frame #19: 0x3993dd04 libdispatch.dylib`_dispatch_queue_drain + 488\r\n    frame #20: 0x3993dd04 libdispatch.dylib`_dispatch_queue_drain + 488\r\n    frame #21: 0x3993acb6 libdispatch.dylib`_dispatch_queue_invoke + 42\r\n    frame #22: 0x3993e638 libdispatch.dylib`_dispatch_root_queue_drain + 76\r\n    frame #23: 0x3993e8dc libdispatch.dylib`_dispatch_worker_thread2 + 56\r\n    frame #24: 0x39a69c12 libsystem_pthread.dylib`_pthread_wqthread + 298\r\n\r\n\r\n\r\nOrtwin Gentz 17-Feb-2014 07:03 PM\r\n\r\nAnother backtrace (from the Simulator, iOS 7.1 beta 5 SDK):\r\n\r\n(lldb) bt\r\n* thread #30: tid = 0xecebe, 0x00000001194c9a11 libGLProgrammability.dylib`glvmRasterOpRead + 833, queue = 'com.apple.maps.snapshotter', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n  * frame #0: 0x00000001194c9a11 libGLProgrammability.dylib`glvmRasterOpRead + 833\r\n    frame #1: 0x00000001194c41ac libGLProgrammability.dylib`glvmInterpretFPTransformFour + 4668\r\n    frame #2: 0x0000000119620cde GLRendererFloat`gldLLVMFPTransform2x2 + 1118\r\n    frame #3: 0x000000011961ff76 GLRendererFloat`gldMergeScanlines2x2 + 726\r\n    frame #4: 0x000000011caef6b8\r\n    frame #5: 0x000000011961cf18 GLRendererFloat`gldRenderFillPolygonPtr + 89\r\n    frame #6: 0x000000011caf071a\r\n    frame #7: 0x000000011939c4ed GLEngine`gleDrawArraysOrElements_ExecCore + 1024\r\n    frame #8: 0x0000000119398a69 GLEngine`glDrawArrays_ES2Exec + 289\r\n    frame #9: 0x000000010cdc1290 VectorKit`-[VKRasterMapModel drawScene:withContext:] + 816\r\n    frame #10: 0x000000010cdb23f2 VectorKit`-[VKModelObject recursiveDrawScene:whenReadyWithContext:pass:] + 146\r\n    frame #11: 0x000000010cdbaecf VectorKit`-[VKMapModel recursiveDrawScene:withContext:pass:] + 431\r\n    frame #12: 0x000000010cdb1eef VectorKit`-[VKModelObject recursiveDrawScene:withContext:pass:] + 287\r\n    frame #13: 0x000000010cea1b3f VectorKit`__29-[VKImageCanvas renderScene:]_block_invoke + 319\r\n    frame #14: 0x000000010ce352e0 VectorKit`-[VGLContext perform:] + 80\r\n    frame #15: 0x000000010cea1937 VectorKit`-[VKImageCanvas renderScene:] + 167\r\n    frame #16: 0x000000010cea0cab VectorKit`__52-[VKMapSnapshotCreator mapModelWillBecomFullyDrawn:]_block_invoke + 91\r\n    frame #17: 0x000000010522a851 libdispatch.dylib`_dispatch_call_block_and_release + 12\r\n    frame #18: 0x000000010523d72d libdispatch.dylib`_dispatch_client_callout + 8\r\n    frame #19: 0x000000010522cdcf libdispatch.dylib`_dispatch_queue_drain + 481\r\n    frame #20: 0x000000010522cb94 libdispatch.dylib`_dispatch_queue_invoke + 112\r\n    frame #21: 0x000000010522d9fc libdispatch.dylib`_dispatch_root_queue_drain + 81\r\n    frame #22: 0x000000010522dd12 libdispatch.dylib`_dispatch_worker_thread2 + 40\r\n    frame #23: 0x000000010558cef8 libsystem_pthread.dylib`_pthread_wqthread + 314\r\n\r\n\r\n\r\nOrtwin Gentz 21-Feb-2014 05:40 PM\r\n\r\nAnother backtrace (iPhone 5s running iOS 7.1 beta 5):\r\n\r\n* thread #5: tid = 0x46522, 0x0000000193c5c1dc libobjc.A.dylib`objc_msgSend + 28, queue = 'com.apple.maps.snapshotter', stop reason = EXC_BAD_ACCESS (code=1, address=0x8e072627f9104d09)\r\n  * frame #0: 0x0000000193c5c1dc libobjc.A.dylib`objc_msgSend + 28\r\n    frame #1: 0x00000001934d9f9c libc++.1.dylib`std::__1::__shared_weak_count::__release_shared() + 64\r\n    frame #2: 0x0000000190a02184 VectorKit`std::__1::__tree<std::__1::pair<std::__1::pair<std::__1::shared_ptr<vk::ShieldArtwork>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::shared_ptr<vk::LabelIcon> >, std::__1::__map_value_compare<std::__1::pair<std::__1::shared_ptr<vk::ShieldArtwork>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::shared_ptr<vk::LabelIcon>, std::__1::less<std::__1::pair<std::__1::shared_ptr<vk::ShieldArtwork>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, true>, vk_allocator<std::__1::pair<std::__1::pair<std::__1::shared_ptr<vk::ShieldArtwork>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::shared_ptr<vk::LabelIcon> > > >::destroy(std::__1::__tree_node<std::__1::pair<std::__1::pair<std::__1::shared_ptr<vk::ShieldArtwork>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::shared_ptr<vk::LabelIcon> >, void*>*) + 80\r\n    frame #3: 0x0000000190a02004 VectorKit`vk::LabelStyle::~LabelStyle() + 88\r\n    frame #4: 0x00000001934d9f9c libc++.1.dylib`std::__1::__shared_weak_count::__release_shared() + 64\r\n    frame #5: 0x00000001909faa34 VectorKit`vk::RoadLabelFeature::~RoadLabelFeature() + 176\r\n    frame #6: 0x00000001934d9f9c libc++.1.dylib`std::__1::__shared_weak_count::__release_shared() + 64\r\n    frame #7: 0x0000000190a438e8 VectorKit`vk::InfoLabel::~InfoLabel() + 120\r\n    frame #8: 0x00000001934d9f9c libc++.1.dylib`std::__1::__shared_weak_count::__release_shared() + 64\r\n    frame #9: 0x00000001909ebdc4 VectorKit`std::__1::__tree<std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::shared_ptr<vk::InfoLabel> >, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > >::destroy(std::__1::__tree_node<std::__1::shared_ptr<vk::InfoLabel>, void*>*) + 48\r\n    frame #10: 0x00000001909ebdb0 VectorKit`std::__1::__tree<std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::shared_ptr<vk::InfoLabel> >, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > >::destroy(std::__1::__tree_node<std::__1::shared_ptr<vk::InfoLabel>, void*>*) + 28\r\n    frame #11: 0x00000001909ebdb0 VectorKit`std::__1::__tree<std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::shared_ptr<vk::InfoLabel> >, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > >::destroy(std::__1::__tree_node<std::__1::shared_ptr<vk::InfoLabel>, void*>*) + 28\r\n    frame #12: 0x00000001909ebdb8 VectorKit`std::__1::__tree<std::__1::shared_ptr<vk::InfoLabel>, std::__1::less<std::__1::shared_ptr<vk::InfoLabel> >, vk_allocator<std::__1::shared_ptr<vk::InfoLabel> > >::destroy(std::__1::__tree_node<std::__1::shared_ptr<vk::InfoLabel>, void*>*) + 36\r\n    frame #13: 0x00000001909fae98 VectorKit`vk::InfoMapTile::~InfoMapTile() + 44\r\n    frame #14: 0x00000001934d9f9c libc++.1.dylib`std::__1::__shared_weak_count::__release_shared() + 64\r\n    frame #15: 0x00000001909ff73c VectorKit`vk::LabelManager::~LabelManager() + 992\r\n    frame #16: 0x00000001934d9f9c libc++.1.dylib`std::__1::__shared_weak_count::__release_shared() + 64\r\n    frame #17: 0x0000000193c4aaa8 libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) + 168\r\n    frame #18: 0x0000000193c55020 libobjc.A.dylib`objc_destructInstance + 44\r\n    frame #19: 0x0000000193c55094 libobjc.A.dylib`object_dispose + 28\r\n    frame #20: 0x00000001909fd0c4 VectorKit`-[VKModelObject dealloc] + 420\r\n    frame #21: 0x00000001909ff278 VectorKit`-[VKLabelModel dealloc] + 192\r\n    frame #22: 0x0000000190974120 VectorKit`-[VKModelObject_DrawPass dealloc] + 48\r\n    frame #23: 0x0000000187499ed4 CoreFoundation`CFRelease + 468\r\n    frame #24: 0x00000001874a62c0 CoreFoundation`-[__NSArrayM dealloc] + 156\r\n    frame #25: 0x00000001909fd08c VectorKit`-[VKModelObject dealloc] + 364\r\n    frame #26: 0x00000001909fd720 VectorKit`-[VKMapModel dealloc] + 1212\r\n    frame #27: 0x0000000190974120 VectorKit`-[VKModelObject_DrawPass dealloc] + 48\r\n    frame #28: 0x0000000187499ed4 CoreFoundation`CFRelease + 468\r\n    frame #29: 0x00000001874a62c0 CoreFoundation`-[__NSArrayM dealloc] + 156\r\n    frame #30: 0x00000001909fd08c VectorKit`-[VKModelObject dealloc] + 364\r\n    frame #31: 0x00000001909fceec VectorKit`-[VKWorld dealloc] + 76\r\n    frame #32: 0x0000000190ae355c VectorKit`-[VKImageCanvas dealloc] + 168\r\n    frame #33: 0x0000000190b05938 VectorKit`__destroy_helper_block_26579 + 40\r\n    frame #34: 0x0000000194287908 libsystem_blocks.dylib`_Block_release + 256\r\n    frame #35: 0x000000019424d30c libdispatch.dylib`_dispatch_source_cancel_callout + 44\r\n    frame #36: 0x0000000194241ad0 libdispatch.dylib`_dispatch_source_invoke + 308\r\n    frame #37: 0x0000000194246454 libdispatch.dylib`_dispatch_queue_drain + 556\r\n    frame #38: 0x00000001942424c0 libdispatch.dylib`_dispatch_queue_invoke + 68\r\n    frame #39: 0x00000001942470f4 libdispatch.dylib`_dispatch_root_queue_drain + 104\r\n    frame #40: 0x00000001942474fc libdispatch.dylib`_dispatch_worker_thread2 + 76\r\n    frame #41: 0x00000001943d56bc libsystem_pthread.dylib`_pthread_wqthread + 356"
    email: futuretap@googlemail.com
    modified: "2018-02-22T14:49:42.86797Z"
    number: "15351647"
    number_intvalue: 15351647
    originated: 30-Oct-2013 05:04 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "7.0"
    reproducible: Unable
    resolved: 'iOS 8 GM (Build: 12A365)'
    status: Resolved
    title: MKMapSnapshotter crashes intermittently with EXC_BAD_ACCESS
