apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "16444353"
    labels:
        datastore_id: "5775860476936192"
data:
    classification: Other Bug
    created: "2014-03-27T15:45:09.769978Z"
    description: "Summary:\r\nWhen NSProgress is used with a tree of progress objects as described in the documentation at https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSProgress_Class/Reference/Reference.html#//apple_ref/doc/uid/TP40013490-CH1-SW46 , the fractionCompleted of the parent progress object is not as accurate as one would expect. Dependent on the totalUnitCount of the child progress object and the totalUnitCount and pendingUnitCount of the parent progress object, the fractionCompleted is slightly less than the expected value or completely unexpected values.\r\n\r\nSteps to Reproduce:\r\nRun the attached Xcode project, with the following code:\r\n\r\n@implementation NVHViewController\r\n\r\n- (void)viewDidAppear:(BOOL)animated {\r\n    [super viewDidAppear:animated];\r\n    [self parentProgressWithTotalCount:1 pendingUnitCount:1 childUnitCount:49999];\r\n    [self parentProgressWithTotalCount:1 pendingUnitCount:1 childUnitCount:50000];\r\n\r\n    [self parentProgressWithTotalCount:2 pendingUnitCount:1 childUnitCount:38936];\r\n    [self parentProgressWithTotalCount:2 pendingUnitCount:1 childUnitCount:38937];\r\n    \r\n    [self parentProgressWithTotalCount:4 pendingUnitCount:1 childUnitCount:23444];\r\n    [self parentProgressWithTotalCount:4 pendingUnitCount:1 childUnitCount:23445];\r\n\r\n    [self parentProgressWithTotalCount:5 pendingUnitCount:1 childUnitCount:16988];\r\n    [self parentProgressWithTotalCount:5 pendingUnitCount:1 childUnitCount:16989];\r\n}\r\n\r\n\r\n- (void)parentProgressWithTotalCount:(int64_t)total pendingUnitCount:(int64_t)pending childUnitCount:(int64_t)childUnitCount {\r\n    NSLog(@\"Total %lld, Pending %lld, Child %lld\",total,pending,childUnitCount);\r\n    NSProgress* parentProgress = [NSProgress progressWithTotalUnitCount:total];\r\n    [parentProgress becomeCurrentWithPendingUnitCount:pending];\r\n    NSProgress* childProgress = [self workWithTotalUnitCount:childUnitCount];\r\n    NSAssert(childProgress.fractionCompleted == 1, @\"Child progress should be fully completed\");\r\n    [parentProgress resignCurrent];\r\n    NSLog(@\"Parent progress %@\",parentProgress);\r\n}\r\n\r\n- (NSProgress*)workWithTotalUnitCount:(int64_t)total {\r\n    NSProgress *childTaskProgress = [NSProgress progressWithTotalUnitCount:total];\r\n    for (NSUInteger i = 0; i <= total; i+=1) {\r\n        childTaskProgress.completedUnitCount = i;\r\n    }\r\n    NSLog(@\"Child progress %@\",childTaskProgress);\r\n    return childTaskProgress;\r\n}\r\n@end\r\n\r\n\r\nExpected Results:\r\nThe console output should be similar to\r\n\r\n2014-03-27 15:04:31.332 NSProgressBug[21495:60b] Total 1, Pending 1, Child 49999\r\n2014-03-27 15:04:31.400 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.400 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.400 NSProgressBug[21495:60b] Total 1, Pending 1, Child 50000\r\n2014-03-27 15:04:31.462 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.463 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.463 NSProgressBug[21495:60b] Total 2, Pending 1, Child 38936\r\n2014-03-27 15:04:31.510 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.510 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.500000>\r\n2014-03-27 15:04:31.510 NSProgressBug[21495:60b] Total 2, Pending 1, Child 38937\r\n2014-03-27 15:04:31.561 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.562 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.500000>\r\n2014-03-27 15:04:31.562 NSProgressBug[21495:60b] Total 4, Pending 1, Child 23444\r\n2014-03-27 15:04:31.592 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.592 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.250000>\r\n2014-03-27 15:04:31.593 NSProgressBug[21495:60b] Total 4, Pending 1, Child 23445\r\n2014-03-27 15:04:31.622 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.623 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.250000>\r\n2014-03-27 15:04:31.623 NSProgressBug[21495:60b] Total 5, Pending 1, Child 16988\r\n2014-03-27 15:04:31.646 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.646 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.200000>\r\n2014-03-27 15:04:31.647 NSProgressBug[21495:60b] Total 5, Pending 1, Child 16989\r\n2014-03-27 15:04:31.667 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.668 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.200000>\r\n\r\nSo the progress of the Parent progress should be always equal to 1 / (the number of total parent units)\r\n\r\nActual Results:\r\nBut the output is equal to \r\n\r\n2014-03-27 15:04:31.332 NSProgressBug[21495:60b] Total 1, Pending 1, Child 49999\r\n2014-03-27 15:04:31.400 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.400 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.400 NSProgressBug[21495:60b] Total 1, Pending 1, Child 50000\r\n2014-03-27 15:04:31.462 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.463 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.999970>\r\n2014-03-27 15:04:31.463 NSProgressBug[21495:60b] Total 2, Pending 1, Child 38936\r\n2014-03-27 15:04:31.510 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.510 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.500000>\r\n2014-03-27 15:04:31.510 NSProgressBug[21495:60b] Total 2, Pending 1, Child 38937\r\n2014-03-27 15:04:31.561 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.562 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.499990>\r\n2014-03-27 15:04:31.562 NSProgressBug[21495:60b] Total 4, Pending 1, Child 23444\r\n2014-03-27 15:04:31.592 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.592 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.250000>\r\n2014-03-27 15:04:31.593 NSProgressBug[21495:60b] Total 4, Pending 1, Child 23445\r\n2014-03-27 15:04:31.622 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.623 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.249980>\r\n2014-03-27 15:04:31.623 NSProgressBug[21495:60b] Total 5, Pending 1, Child 16988\r\n2014-03-27 15:04:31.646 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.646 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.200000>\r\n2014-03-27 15:04:31.647 NSProgressBug[21495:60b] Total 5, Pending 1, Child 16989\r\n2014-03-27 15:04:31.667 NSProgressBug[21495:60b] Child progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=1.000000>\r\n2014-03-27 15:04:31.668 NSProgressBug[21495:60b] Parent progress <NSProgress: phase=Loading; state=Waiting; fractionCompleted=0.199990>\r\n\r\nHere, the parent progress is slightly less than 1/ (the number of total parent units)\r\n\r\nVersion:\r\niOS 7.1 (11D167)\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nTested on iPhone 5s running iOS7.1 and in the simulator running iOS7.1 (both 32 and 64 bit versions)\r\n\r\nAttachments:"
    email: niels@zekerwaar.nl
    modified: "2014-04-09T08:10:48.083386Z"
    number: "16444353"
    number_intvalue: 16444353
    originated: 27-Mar-2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: iOS 7.1 (11D167)
    reproducible: Always
    resolved: ""
    status: Duplicate of 14970750 (Closed)
    title: NSProgress parent doesn't have the fraction completed accuracy I would expect
