apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18248167"
    labels:
        datastore_id: "6409346275606528"
data:
    classification: Serious Bug
    created: "2014-09-05T19:39:15.206129Z"
    description: |-
        Summary:
        A generic enum with a case which has a parameterized type & a closure crashes the compiler


        Steps to Reproduce:
        1. Write this code:

        enum S<T> {
        	case C(T, () -> ())
        }

        2. Attempt to compile it.


        Expected Results:
        I expected it to compile.


        Actual Results:
        It crashes.


        Regression:
        If the case does not have the type parameter, it does not crash.
        If the case does not have the closure, it does not crash.
        If the type parameter is boxed up in a class, it does not crash.
        If the type parameter is the return type of a closure, it does not crash.
        If the closure is replaced with a class or struct or basically anything else, it does not crash.
        If you gaze at it, longingly, across a crowded room, it still crashes.


        Notes:
        Stack trace to follow.
    email: rix.rob@gmail.com
    modified: "2014-09-05T19:39:15.206322Z"
    number: "18248167"
    number_intvalue: 18248167
    originated: 05-Sep-2014 03:39 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode6-Beta7 (6A280n)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Compiler crash with enum case with parameterized type & closure'
