apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18461300"
    labels:
        datastore_id: "5863581560078336"
data:
    classification: Security
    created: "2014-09-25T22:50:29.494814Z"
    description: "18461300Open\r\n18461300iOS Ignores Critical X509v3 Name Constraints\r\niOSState: Open\r\nRank:No Value\r\nAlfred Karl Kornel25-Sep-2014 03:36 PM\r\n\r\nSummary: iOS does not seem to enforce DNS Name Constraints specified by a root certificate.  That's fine, as long as such constraints are not marked as critical.  If iOS encounters a trusted root containing a critical Name Constraints extension, iOS will still allow connections to servers whose SSL certificate does not match the name constraints of the issuing CA.\r\n\r\nSteps to Reproduce: 1: Install the CA from the following URL: https://www.dropbox.com/s/8dlt80xypxu18a1/buttonmash_ca.pem?dl=0\r\nThe Settings app will warn that the CA cannot be verified.  That is OK.\r\n2: Browse to the following site: https://buttonmash.karl.kornel.us\r\n3: Browse to the following site: https://buttonmash.karl.kornel.name\r\n\r\nExpected Results: I expected Safari to refuse to load either site, because the sites were using certs issued by a root containing a critical extension which iOS is not able to honor.\r\n\r\nActual Results: Safari displayed both web pages, including the lock icon indicating that the connection was secure.\r\n\r\nVersion: iOS 8.0 (12A365)\r\n\r\nNotes: The test servers I made which demonstrate this issue will probably not be up for more than 30 days, unless I can remember to regenerate the CRL for the test CA.\r\n\r\nConfiguration: IPhone 5 16 GB Sprint"
    email: karl@kornel.us
    modified: "2014-09-26T16:54:31.996558Z"
    number: "18461300"
    number_intvalue: 18461300
    originated: 25-Sep-2014 03:36 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: "8.0"
    reproducible: Always
    resolved: ""
    status: Duplicate of 10112492 (Open)
    title: iOS Ignores Critical X509v3 Name Constraints
