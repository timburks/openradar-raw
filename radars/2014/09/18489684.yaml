apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18489684"
    labels:
        datastore_id: "5298200655167488"
data:
    classification: Performance
    created: "2014-09-29T18:24:38.11127Z"
    description: "Summary:\r\nWhen creating some generic operators that rely on type inference to function, chaining too many of them together can cause the compiler to dramatically slow down.\r\n\r\nIf you try out the example code from the \"Steps to reproduce\", you can see this yourself by commenting out the `TestModel` class. When it is commented out the test suite builds quickly and the tests pass.  When it is uncommented, the test suite takes an impractical amount of time to build.  If you comment out all the properties and associated methods then add them back in one at a time, running the test suite each time in the `TestModel.swift` file, you'll see that the build starts to slow down with the `intOpt` property, then greatly slows down with the `stringArray` property.\r\n\r\nAlso, in the `td-json-enum` branch, I've added a JSON enum type to help with the type inference.  It makes things faster but still sees a big slowdown with those same 2 properties.\r\n\r\nSteps to Reproduce:\r\n1. Clone the public repo from GitHub: https://github.com/thoughtbot/Argo\r\n2. Open the project in Xcode\r\n3. Run the tests.\r\n\r\nExpected Results:\r\nThe test suite should compile within seconds and the tests should run and pass.\r\n\r\nActual Results:\r\nThe tests suite takes a very long time to compile. So long that I typically give up and stop the build.\r\n\r\nVersion:\r\nXcode 6.0.1"
    email: anthony.r.dipasquale@gmail.com
    modified: "2014-09-29T18:24:38.111468Z"
    number: "18489684"
    number_intvalue: 18489684
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift Compiler slows down with nested type inference
