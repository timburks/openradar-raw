apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18403222"
    labels:
        datastore_id: "5275674625441792"
data:
    classification: Enhancement
    created: "2014-09-20T08:13:15.285993Z"
    description: "Summary:\r\nSwift declares:\r\n    XCTestCase.waitForExpectationsWithTimeout(timeout: NSTimeInterval, handler handlerOrNil: XCWaitCompletionHandler!)\r\n\r\n`handerOrNil` should be `XCWaitCompletionHandler?` and default to `nil`, like:\r\n    XCTestCase.waitForExpectationsWithTimeout(timeout: NSTimeInterval, handler handlerOrNil: XCWaitCompletionHandler? = nil)\r\n\r\nSo that it can be called without providing nil as the second argument.\r\n\r\nSteps to Reproduce:\r\nIn a swift XC test write:\r\n    self.waitForExpectationsWithTimeout(1)\r\n\r\nExpected Results:\r\nIt works without compiler errors\r\n\r\nActual Results:\r\nGives a compile-time error:\r\n    Type '(NSTimeInterval, handler: XCWaitCompletionHandler!)' does not conform to protocol 'IntegerLiteralConvertible'\r\n\r\nVersion:\r\nXcode 6.0.1 (6A317)\r\n\r\nNotes:\r\nAs workaround I added the following extension to XCTestCase:\r\npublic extension XCTestCase {\r\n    public func waitForExpectationsWithTimeout(timeout: NSTimeInterval) {\r\n        self.waitForExpectationsWithTimeout(timeout, handler: nil)\r\n    }\r\n}\r\n\r\nConfiguration:\r\nOS X 10.9.5\r\n\r\nAttachments:"
    email: Ziad.khoury.h@gmail.com
    modified: "2014-09-20T08:13:15.286148Z"
    number: "18403222"
    number_intvalue: 18403222
    originated: 20-Sep-2014 10:08 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: 6.0.1 (6A317)
    reproducible: Always
    resolved: ""
    status: Open
    title: '#IUO XCTestCase.waitForExpectationsWithTimeout ''s second argument should be Optional and default to nil'
