apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18495979"
    labels:
        datastore_id: "6374313301114880"
data:
    classification: Serious Bug
    created: "2014-09-30T00:58:45.788852Z"
    description: |-
        Summary:
        A recursive function returning a function crashes the compiler.


        Steps to Reproduce:
        1. Compile this code:
        struct A {
        	func g<U>(recur: (A, U) -> U) -> (A, U) -> U {
        		return { _, x in return x }
        	}
        	func f() {
        		let recur: (A, A) -> A = { c, x in x }
        		let b = g(recur)(self, self)
        	}
        }


        Expected Results:
        No crash.


        Actual Results:
        Crash.


        Regression:
        - If you don’t call g(), it doesn’t crash.
        - If you use curried function syntax to define g, it doesn’t crash.


        Notes:
        Crash log to follow.
    email: rix.rob@gmail.com
    modified: "2014-09-30T00:58:45.789103Z"
    number: "18495979"
    number_intvalue: 18495979
    originated: 29-Sep-2014 08:58 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode-6.1 (6A1042b)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Compiler crashes with recursive functions returning functions'
