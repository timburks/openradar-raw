apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18349699"
    labels:
        datastore_id: "4935188945567744"
data:
    classification: Crash
    created: "2014-09-16T13:05:44.723423Z"
    description: "Summary:\r\nWhen making a generic Swift subclass of `NSObject`, the compiler crashes when the type parameter is not constrained to a class type.\r\n\r\nThe following code crashes:\r\n\r\n```\r\n\r\nimport Foundation\r\n\r\nclass Foo<T>: NSObject {\r\n    var foo: T\r\n    init(foo: T) {\r\n        self.foo = foo\r\n        super.init()\r\n    }\r\n}\r\n\r\n```\r\n\r\nafter adding a constraint that `T` must be `AnyObject`, the crash does not occur:\r\n\r\n```\r\n\r\nimport Foundation\r\n\r\nclass Foo<T: AnyObject>: NSObject {\r\n    var foo: T\r\n    init(foo: T) {\r\n        self.foo = foo\r\n        super.init()\r\n    }\r\n}\r\n\r\n```\r\n\r\nBut that would make it impossible to store a value type (e.g. an `Int`) in `foo`â€¦\r\n\r\nSteps to Reproduce:\r\nCompile this:\r\n\r\nimport Foundation\r\n\r\nclass Foo<T>: NSObject {\r\n    var foo: T\r\n    init(foo: T) {\r\n        self.foo = foo\r\n        super.init()\r\n    }\r\n}\r\n\r\n\r\nExpected Results:\r\nCompiler not crashing\r\n\r\nActual Results:\r\nCompiler crashing, see the attached crash log\r\n\r\nVersion:\r\nXcode 6 GM, OS X 10.9.4\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n-\r\n\r\nAttachments:\r\n'repl_swift_2014-09-16-145441_jaou-rmbp.crash' was successfully uploaded."
    email: jiayong.ou@ymc.ch
    modified: "2014-09-16T13:05:44.72364Z"
    number: "18349699"
    number_intvalue: 18349699
    originated: 16-Sep-2014 03:04 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: Swift compiler crashes on Generic subclasses of NSObject
