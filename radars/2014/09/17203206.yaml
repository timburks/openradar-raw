apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17203206"
    labels:
        datastore_id: "6365359368044544"
data:
    classification: ""
    created: "2014-09-16T14:27:24.739017Z"
    description: "Summary:\r\nWould like for UIWebKit/WKWebKit instances to read the device's keychain items for trust and identity certificates and present these for client-identity SSL connections.  Requesting same/similar functionality as standalone Safari in this regards.\r\nThis would enable us to take advantage of our keychain-access-groups entitlement and certificate provisioning so that UIWebKit instances could auto log-in users using an identity certificate.  Many of our websites have this capability, but we have to write lots of code to enable this from our custom apps, and makes it difficult to enable our SSO for third party apps.\r\n\r\nSteps to Reproduce:\r\nCreate app with UIWebView.\r\nStore identity certificate in the app's keychain.\r\nPoint to a site that would present a client-certificate SSL challenge\r\n\r\nExpected Results:\r\nSame behavior as with Safari and system-level keychain certificates: UIWebView should present the certificate to complete the SSL challenge with client-side cert-based authentication if the identity cert matches; if multiples match, provide a chooser for the user to pick the cert, then continue.\r\n\r\nActual Results:\r\nUIWebView does not present the identity certificate to the server.  Site will fall back to second level of authentication, if enabled on that server.  \r\n\r\nVersion:\r\niOS 7.1.1\r\n\r\nNotes:\r\nDiscussed with security team folks at WWDC, who suggested I submit this bug report.  One of our motivations is to enable us to have third parties provide apps to us that we can re-sign and re-distribute via MDM, and have those apps perform cert-based authentication.  These apps and others already use a UIWebView for authentication, before continuing in a more native style app.  This is due to current authentication methods' depending on redirects, SAML FORM posts, etc that are browser friendly, but not really headless NSURLConnection-friendly.  The goal is to have these apps sign on using certificate-based auth instead of prompting for the user.  This can be achieved if these embedded web views start to process keychain items more like Safari does."
    email: thomas.c.sanidas@pwc.com
    modified: "2014-09-16T14:27:24.739169Z"
    number: "17203206"
    number_intvalue: 17203206
    originated: 06-Jun-2014
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: 7.1.1
    reproducible: ""
    resolved: ""
    status: Open
    title: Enable UIWebKit (WKWebKit) instances to read certificates from keychain
