apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19075796"
    labels:
        datastore_id: "5332187469578240"
data:
    classification: ""
    created: "2014-11-25T00:35:35.981188Z"
    description: "Summary:\r\nI've attached a sample project that illustrates the problem.\r\n\r\nI have a top-level iOS Framework project in a workspace. Its sole target depends on a framework from the \"TestFramework\" project in its workspace. When building in Xcode this arrangement works fine. When building with xcodebuild you can't predict wether it will build the iOS or Mac version of the Framework.\r\n\r\nSomething is definitely weird about adding the TestFramework to the link list. If you hit + and select the iOS framework and then select the framework in the file browser its path is \"Debug\" and not \"Debug-iphoneos\". It's like its picking the wrong one but Xcode can somehow figure it out. Maybe this is a separate and unrelated bug?\r\n\r\nSteps to Reproduce:\r\n1. Unzip the archive\r\n2. in Terminal cd into the iosFramework folder\r\n3. run the runme.sh file while nukes the build folder and builds the framework\r\n4. repeat step 3 over and over\r\n\r\n\r\nExpected Results:\r\nI would expect it to successfully build the iosFramework target every time.\r\n\r\nActual Results:\r\nWhat happens is that 50% of the time it builds properly and 50% it fails. When it fails its because the Mac version of TestFramework is being built instead of the iOS version.\r\n\r\nVersion:\r\nXcode 6.1\r\nBuild version 6A1052d\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:\r\n'xcodebuild-framework-bug-5ca9bf067ac2d7b15c31e2947b88d92c8408866c.zip' was successfully uploaded."
    email: hello@jmoore.me
    modified: "2014-11-25T00:35:35.981459Z"
    number: "19075796"
    number_intvalue: 19075796
    originated: 11/24/14
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "6.1"
    reproducible: ""
    resolved: ""
    status: Open
    title: Using framework projects that build iOS and Mac versions of the same name lead to problems
