apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18863107"
    labels:
        datastore_id: "6447799319134208"
data:
    classification: ""
    created: "2014-11-04T05:03:30.930867Z"
    description: "Summary:\r\nCurrently in Swift, there's no way to expand a list or dictionary to arguments in a function. This would be especially useful for functions with variadic arguments. For example, say 'sum' is defined as:\r\n\r\nfunc sum<Int>(ints: Int...)\r\n\r\nThere should be a way to say:\r\nargs = [1,2,3]\r\nsum(*args)\r\n\r\nwhich would expand the list into arguments to the function.\r\n\r\nThis would also be useful for function currying. Right now, it would be impossible to define a truly generic curry function for variadic functions, like so:\r\n\r\nfunc curry<T>(f: ((T -> Any...) -> Any), value: T) -> ((Any...) -> Any)\r\n\r\nSwift's embracing of higher-order functions is somewhat mitigated by the fact that this isn't supported.\r\n\r\nSteps to Reproduce:\r\nTry writing a generic function for currying a variadic function\r\n\r\nExpected Results:\r\nI expected that I would find apply, or a splat operator like Python's *args, or some other way to call a function with its arguments provided in an array.\r\n\r\nActual Results:\r\nI could not find any such operator or function."
    email: Jamil.Dhanani@gmail.com
    modified: "2014-11-04T05:03:30.931078Z"
    number: "18863107"
    number_intvalue: 18863107
    originated: 03-Nov-2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: No splat operator / no variadic function currying
