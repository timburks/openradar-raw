apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19091061"
    labels:
        datastore_id: "5573059972956160"
data:
    classification: Crash/Hang/Data Loss
    created: "2014-11-27T20:56:41.710929Z"
    description: "Summary:\nSegfault on `init` in the code sample below.\n\n\nSteps to Reproduce:\n1. Code:\nstruct S<T> {\n\tinit(f: AutoreleasingUnsafeMutablePointer<T?> -> ()) {\n\t\tvar t: T?\n\t\tf(&t)\n\t}\n}\n\n\nExpected Results:\n\U0001F604\n\n\nActual Results:\n\U0001F4A5\n\n\nRegression:\nChanging the init to this does not crash:\n\n\tinit(f: (inout T?) -> ()) {\n\t\tvar t: T?\n\t\tf(&t)\n\t}\n\nIt crashes but without any stack dump if you donâ€™t use a generic type:\n\nstruct S {\n\tinit(f: AutoreleasingUnsafeMutablePointer<Int?> -> ()) {\n\t\tvar t: Int?\n\t\tf(&t)\n\t}\n}\n\n\nNotes:\nI kinda wanted to make a Result enum constructor doing something like this with NSError:\n\nhttps://github.com/LlamaKit/LlamaKit/pull/14"
    email: rix.rob@gmail.com
    modified: "2014-11-27T20:56:41.711057Z"
    number: "19091061"
    number_intvalue: 19091061
    originated: 27-Nov-2014 03:56 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1.1 (6A2006)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Compiler crashes on a function passing a AutoreleasingUnsafeMutablePointer of a stack variable of generic type into a function'
