apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19096832"
    labels:
        datastore_id: "5796632348065792"
data:
    classification: Serious Bug
    created: "2014-11-30T10:07:02.058319Z"
    description: "If B is a subclass of A, then I can assign B.self to a variable of type A.Type. However, instantiating an object using that variable creates an instance of A, not B.\r\n\r\nSteps to Reproduce:\r\nclass A {\r\n    required init() {}\r\n    func printMe() {\r\n        println(\"A\")\r\n    }\r\n}\r\n\r\nclass B : A {\r\n    override func printMe() {\r\n        println(\"B\")\r\n    }\r\n}\r\n\r\nvar t : A.Type\r\nt = B.self\r\nlet b = t()\r\nb.printMe()\r\n\r\nExpected Results:\r\n\"B\"\r\n\r\nActual Results:\r\n\"A\""
    email: thephatmann@gmail.com
    modified: "2014-12-19T01:57:30.63723Z"
    number: "19096832"
    number_intvalue: 19096832
    originated: 30-Nov-2014 04:05 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1.1
    reproducible: Always
    resolved: 18-Dec-2014
    status: Duplicate of 19072746
    title: 'Swift: instantiating subclass from MetaType does not work correctly'
