apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19087143"
    labels:
        datastore_id: "5772035070361600"
data:
    classification: ""
    created: "2014-11-26T23:21:28.611288Z"
    description: "NSApp is typed as id. This causes problems, such as confusing Don Melton:\r\n\r\n    It seems I’ve forgotten how to Objective-C. I’m getting the loopiest compiler warning for the following code:\r\n\r\n    [NSApp setDelegate:self];\r\n\r\n(from https://twitter.com/donmelton/status/537730312017412097)\r\n\r\nThe problem is that \r\n(1) the different versions of setDelegate: all now take different types, because AppKit has adopted formal protocols for delegates instead of typing everything as id\r\n(2) the compiler guessed wrong, grabbed one of the other setDelegate: methods for typing.\r\n\r\nThis would be less confusing if NSApp was typed as NSApplication.\r\n\r\nUnfortunately it would still have a downside – if an app subclasses NSApplication as FooApplication, methods of FooApplication will not be able to be sent to NSApp without casting. This still seems less confusing to me.\r\n\r\n(Ideally the compiler would let you say \"this is an id qualified to NSApplication subclasses\", so that sending any method of any subclass of NSApplication did not warn.)"
    email: kenferry@gmail.com
    modified: "2014-11-26T23:21:28.61143Z"
    number: "19087143"
    number_intvalue: 19087143
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: ""
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: type NSApp as NSApplication* instead of id
