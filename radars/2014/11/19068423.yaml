apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19068423"
    labels:
        datastore_id: "6087777443643392"
data:
    classification: Serious Bug
    created: "2014-11-22T20:25:30.906176Z"
    description: |-
        Summary:

        NSNumberFormatter appears to falsely interpret 64bit unsigned integer (a.k.a NSUInteger on 64bit) NSNumbers (“NSNumber(unsignedLongLong: …)”) as 64bit signed(!) integer (a.k.a NSInteger on 64bit) NSNumbers when formatting.

        Steps to Reproduce:

        Swift Playground:

        	import Cocoa // or UIKit

        	let uint64_max: UInt64 = UInt64.max
        	let uint64_max_number = NSNumber(unsignedLongLong: uint64_max)
        	let uint64_max_string = NSNumberFormatter().stringFromNumber(uint64_max_number)!

        Expected Results:

        Playground console log:

        	18446744073709551615
        	18446744073709551615
        	“18446744073709551615”

        Actual Results:

        Playground console log:

        	18446744073709551615
        	18446744073709551615
        	“-1”

        Regression:

        Notes:
        This also occurs with the Objective-C side of things (on both iOS and OS X). It’s thus not purely Swift-related.
    email: regexident@gmail.com
    modified: "2014-11-22T20:25:30.906354Z"
    number: "19068423"
    number_intvalue: 19068423
    originated: 22-Nov-2014 09:25 PM
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: Mac OS X 10.10
    reproducible: Always
    resolved: ""
    status: Open
    title: NSNumberFormatter misinterpreting NSUInteger as NSInteger during formatting.
