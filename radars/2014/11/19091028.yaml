apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19091028"
    labels:
        datastore_id: "5284607821873152"
data:
    classification: Other Bug
    created: "2014-11-27T20:20:06.416893Z"
    description: "Summary:\nLike with rdar://19091008 and initializers, enum cases are functions but you can’t get reference to them.\n\n\nSteps to Reproduce:\n1. Try to compile this:\nenum E {\n\tcase C(Int)\n}\n\nlet f: Int -> E = E.C\nlet x: [E] = map([1, 2, 3], E.C)\n\n\nExpected Results:\nI expected it to compile and for f to be bound to the .C constructor and x to an array of type E constructed with the integers being mapped over.\n\n\nActual Results:\nThe compiler errors. \n\n\nRegression:\nOnce again, { E.C($0) } works, but is undesirable.\n\n\nNotes:\nThe compiler actually gives a specific error for this:\n\nerror: partial application of enum constructor is not allowed\n\nHowever, I haven’t the foggiest why this would constitute partial application. Are enum cases curried? What argument has been applied? This isn’t an instance method; is the _type_ getting passed into the function? That seems weird.\n\nEither way, Swift’s support for tacit programming[1] would be improved by this.\n\nhttp://en.wikipedia.org/wiki/Tacit_programming"
    email: rix.rob@gmail.com
    modified: "2014-11-27T20:20:06.417059Z"
    number: "19091028"
    number_intvalue: 19091028
    originated: 27-Nov-2014 03:20 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1.1 (6A2006)
    reproducible: Always
    resolved: ""
    status: Open
    title: 'Swift: Can’t get reference to enum constructor functions'
