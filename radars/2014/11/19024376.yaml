apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19024376"
    labels:
        datastore_id: "5904536958926848"
data:
    classification: UI/Usability
    created: "2014-11-19T01:25:14.662225Z"
    description: |-
        In a last ditch effort to create a properly formatted count up timer on a Watch App, I turned to the WKInterfaceDate control. My goal was to create a WKInterfaceDate control that was configured to show a time in 00:00:00 (hh:mm:ss) format. The control would also be configured with a calendar and time zone to start with a displayed time of 00:00:00 and count up one second at a time from there. I know it's not the intended purpose of this control, but it seems like a reasonable customization to make.

        However, the control doesn't seem to respect the seconds component of the time zone. I attempted to create a NSTimeZone where the seconds from GMT are started from zero, and with the current GMT time subtracted away from that. So if the time were 1:07:26 AM, GMT, then the time zone would be created from a GMT offset of 4046 (3600 + 420 + 26).

        This actually works beautifully well for the hours and minutes. They will correctly line up at the 00:00 position you would expect them to. But the seconds will not. No matter what you supply as the seconds offset for the time zone, even say -5, the seconds on the WKInterfaceDate always match exactly to the seconds of the system clock. There doesn't seem to be any way to provide a time zone or calendar which changes the seconds of the displayed time/date from that of the system. That means that it's not possible to use this control for displaying a time as an offset from a specific second value. But it would be if the time zone seconds offset were honored.

        My proposal here would be to make the time zone's second component honored by the control. If the time zone supports initialization with second level accuracy, and the date control supports presentation at a second level accuracy, then the two settings should work correctly together.
    email: conrad.stoll@mutualmobile.com
    modified: "2014-11-19T01:25:14.662382Z"
    number: "19024376"
    number_intvalue: 19024376
    originated: 18-Nov-2014 07:25 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: Xcode 6.2
    reproducible: Always
    resolved: ""
    status: Open
    title: WKInterfaceDate Time Zones Do Not Have Second Level Accuracy
