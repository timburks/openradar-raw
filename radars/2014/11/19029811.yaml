apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "19029811"
    labels:
        datastore_id: "6365799266648064"
data:
    classification: Crash/Hang/Data Loss
    created: "2014-11-19T14:46:10.310628Z"
    description: "Summary:\nReferencing an object weakly during dealloc leads to a runtime trap/crash. \n\nSteps to Reproduce:\nRun the provided, super small example, see it’s crashing.\n\nExpected Results:\nWeak should be the object or nil.\n\nActual Results:\nCrash.\n\nRegression:\nAlways crashed.\n\nNotes:\nFrom http://opensource.apple.com/source/objc4/objc4-646/runtime/objc-weak.mm i see that this was a conscious decision, but it’s still a source of hard-to-debug bugs and something that is quite unexpected. weak should in that case be either the object or nil, but not cause an abort."
    email: steipete@gmail.com
    modified: "2014-11-19T14:46:10.310762Z"
    number: "19029811"
    number_intvalue: 19029811
    originated: 19-Nov-2014 02:45 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: iOS 8.1.1
    reproducible: Always
    resolved: ""
    status: Open
    title: Refencing an object weakly during dealloc leads to a runtime trap/crash.
