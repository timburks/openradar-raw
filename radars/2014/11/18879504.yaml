apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18879504"
    labels:
        datastore_id: "6377812827045888"
data:
    classification: ""
    created: "2014-11-05T12:57:24.29436Z"
    description: "Summary:\r\nAlthough Swift has no support for exceptions, and sports a robust type system, there are some programming errors that are best handled with exceptions.\r\n\r\nFor example :\r\n- The value of an argument is unexpectedly invalid,\r\n- A sequence of method calls is in the invalid order.\r\n\r\nIf 1) those invalidities can not be checked by the type system, and 2) the likeliness of such invalid code is very low, and is not a justification for an API complexification, then we definitely need an exception.\r\n\r\nAnd we need to write tests for those exception absence, or presence.\r\n\r\nPlease bring back XCTAssertNoThrow and XCTAssertThrows to Swift.\r\n\r\nSteps to Reproduce:\r\nUse XCTAssertNoThrow or XCTAssertThrows in a Swift test case.\r\n\r\nExpected Results:\r\nTest can run.\r\n\r\nActual Results:\r\nCompilation error.\r\n\r\nVersion:\r\nAll\r\n\r\nNotes:\r\n\r\n\r\nConfiguration:\r\nAll\r\n\r\nAttachments:"
    email: gwendal.roue@gmail.com
    modified: "2014-11-05T12:57:24.294552Z"
    number: "18879504"
    number_intvalue: 18879504
    originated: 5-11-2014
    parent_number: '&{NULL_VALUE}'
    product: Developper Tools
    product_version: Xcode 6.1
    reproducible: Always
    resolved: ""
    status: Open
    title: We miss Swift equivalents for XCTAssertNoThrow and XCTAssertThrows
