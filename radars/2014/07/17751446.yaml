apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17751446"
    labels:
        datastore_id: "5780559573811200"
data:
    classification: Enhancement
    created: "2014-07-21T19:58:52.766956Z"
    description: "Summary:\r\nThe XCTest framework can be used to test Swift classes, and the tests themselves can be written in Swift. However, because the test bundle is (typically) separate from the module to be tested, XCTest can only be used to test types and functions that are public. Internal and private members of the module cannot be tested.\r\n\r\nThe only workarounds available are to (a) make everything that you want to test \"public\" (and you usually want to test EVERYTHING) or (b) put the unit tests within the module to be tested and then somehow disable/remove them when building the app or framework to be shipped. Both of these workarounds have drawbacks, which discourage use of unit tests or discourage use of appropriate access control.\r\n\r\nIt would be nice if there was a way to somehow inject the unit test bundle into the module to be tested, or some way to specify that the access level of a module member is \"internal but testable\".\r\n\r\nSteps to Reproduce:\r\nCreate an iOS framework project in Xcode 6 with unit tests\r\n\r\nWrite a class in the framework that is not \"public\"\r\n\r\nWrite a unit test for the class\r\n\r\nExpected Results:\r\nUnit test should be able to run\r\n\r\nActual Results:\r\nUnit test cannot be compiled because the element to be tested is not \"public\".\r\n\r\nVersion:\r\nXcode 6 beta 4"
    email: kristopherdjohnson@gmail.com
    modified: "2014-07-28T22:13:13.081069Z"
    number: "17751446"
    number_intvalue: 17751446
    originated: 21-Jul-2014 03:56 PM
    parent_number: "17755128"
    product: Developer Tools
    product_version: Xcode 6 (6A267n)
    reproducible: N/A
    resolved: ""
    status: Duplicate/17755128
    title: XCTest should support white-box testing of internal/private Swift classes
