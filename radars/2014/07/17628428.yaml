apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17628428"
    labels:
        datastore_id: "6392885545009152"
data:
    classification: ""
    created: "2014-07-10T20:09:34.311376Z"
    description: "Update from Apple:\r\n\r\nApple Developer Relations11-Jul-2014 04:51 PM\r\n\r\nEngineering has determined that this issue behaves as intended based on the following:\r\n\r\nSwift is intended to feel like a member of the extended family of C derived languages, changing this would break that.\r\n\r\nWe are now closing this bug report.\r\n\r\n=========\r\n\r\nOriginal bug report:\r\n\r\nSummary:\r\nSince time immemorial we have been using 0-based array indexing with our programming languages. While the origin of this practice isn't always clear, many accept that it is either a mathematical practice, or (more frequently) because of pointer offsets.\r\n\r\nWe have been repeatedly told that Swift is a modern programming language, yet it maintains this ancient practice of 0-based indexing. Apple has even created a new \"half-closed range operator\" whose primary use-case seems to be 0..count. For a language with so many features that seem perfect for newcomers to programming, maintaining 0-based indexing seems like a needless complexity. We no longer have to worry about pointer arithmetic, and very few developers are mathematicians. \r\n\r\nI'd like to request that the Swift development team take this opportunity to break with the past and do away with 0-based indexing.\r\n\r\nSteps to Reproduce:\r\n1. Create an array using let myArray = [ 1, 2, 3 ]\r\n2. Attempt to print the value of the second element of the array\r\n\r\nExpected Results:\r\n3. I should use the syntax println(\"Second element is \\(myArray[2])\")\r\n\r\nActual Results:\r\n3. I have to use the syntax println(\"Second element is \\(myArray[1])\")"
    email: mauricerkelly@gmail.com
    modified: "2014-07-12T11:16:31.361332Z"
    number: "17628428"
    number_intvalue: 17628428
    originated: 10-Jul-2014 08:59 PM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Closed
    title: Swift language should stop using 0-based array indexing
