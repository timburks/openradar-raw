apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17827598"
    labels:
        datastore_id: "5037309040787456"
data:
    classification: ""
    created: "2014-07-28T12:55:22.082425Z"
    description: "Summary:\r\nThough the temporary/undocumented implicit __conversion() method will be removed, useful applications for it have been published. (See http://nomothetis.svbtle.com/clean-regular-expressions-using-conversions for an example.)\r\n\r\nA possible solution would be to avoid the \"implicit\" part entirely by allowing such a method to be invoked only by the type-casting operators 'as' and 'as?'.\r\n\r\nI propose a 'special member', like 'init' or 'subscript'. It might be 'as' or 'cast'. An example:\r\npublic class HoldsAValue<T> {\r\n     var val:T\r\n     init(_ v:T) {\r\n          val = T\r\n     }\r\n     cast()->T {\r\n          return val\r\n     }\r\n}\r\n...\r\nlet something = SomeObject()\r\nlet h = HoldsAValue(something)     // h will be an instance of HoldsAValue\r\n...\r\nlet x = h as SomeObject     // that would invoke SomeObject.cast()\r\n\r\nWhile a similar effect could be produced for concrete types by writing an extension on SomeObject, this doesn't seem to be possible in the generics case. One use case for this is, for instance, my Future class in https://github.com/rbrockerhoff/SwiftChecker/blob/master/SwiftChecker/Future.swift.\r\n\r\nThe cast() special member would, therefore, be sort of symmetrical to init(), passing another type out instead of in.\r\n\r\nAn additional advantage would be that all the likely conversions could now be contained inside the type definition, and without proliferating names for such conversions. For instance, toInt(), toString(), toUTF16CodeUnit(), toRaw(), etc., could all be written using the 'as' operator.\r\n\r\nIn addition, if the cast() method is defined as returning an Optional, the 'as?' operator will be automatically supported."
    email: rainerbrockerhoff@gmail.com
    modified: "2014-07-28T12:55:22.082549Z"
    number: "17827598"
    number_intvalue: 17827598
    originated: 28/7/2014
    parent_number: '&{NULL_VALUE}'
    product: Xcode
    product_version: "6.0"
    reproducible: ""
    resolved: ""
    status: Open
    title: Simplified cast() method for Swift objects
