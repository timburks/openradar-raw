apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17706330"
    labels:
        datastore_id: "5903661926449152"
data:
    classification: Other Bug
    created: "2014-07-17T03:09:25.164392Z"
    description: "Summary:\r\nWhen implementing UIMenuController/standard edit actions support for a UICollectionView, it is required to implement delegate methods that will never be called.\r\n\r\nThe UICollectionViewDelegate protocol defines three methods for supporting the UIResponder standard edit actions:\r\n\r\n– collectionView:shouldShowMenuForItemAtIndexPath:\r\n– collectionView:canPerformAction:forItemAtIndexPath:withSender:\r\n– collectionView:performAction:forItemAtIndexPath:withSender:\r\n\r\nThe UICollectionView's cell can also implement the UIResponder method\r\n- (BOOL)canPerformAction:(SEL)action withSender:(id)sender\r\n\r\nWhen the cell does NOT implement canPerformAction:withSender: the default behavior is to move up the responder chain to the UICollectionView, which invokes the three delegate methods listed above. All three must be implemented in the delegate, and all three will be called when the user performs a long press on a cell to display the UIMenuController.\r\n\r\nHowever, when the cell DOES implement canPerformAction:withSender:, only one of the three UICollectionViewDelegate methods will be invoked (– collectionView:shouldShowMenuForItemAtIndexPath:). The other two will not be. They still MUST be implemented. If they are not, the UIMenuController will never be displayed. If none of the three UICollectionViewDelegate methods are implemented no UIMenuController will be displayed even if the cell implements canPerformAction:withSender:\r\n\r\nSteps to Reproduce:\r\n1. Create an application that uses a UICollectionView\r\n2. Use a custom cell class for the UICollectionView\r\n3. Implement canPerformAction:withSender on the cell\r\n4. (optional) Implement the UICollectionViewDelegate methods necessary to support standard edit actions\r\n\r\nExpected Results:\r\n. If the cell implements canPerformAction:withSender: and the UICollectionViewDelegate does not implement the standard edit actions methods, the cell should be soley responsible for it's UIMenuController behavior. It should not require the UICollectionView or it's delegate to provide that functionality. When the cell receives a long press gesture the cell's response to canPerformAction:withSender: should determine wether the menu is shown.\r\n\r\n2. If the cell implements canPerformAction:withSender: and the UICollectionViewDelegate DOES implement collectionView:shouldShowMenuForItemAtIndexPath: , the cell is giving the collection view delegate responsibility for deciding wether or not the UIMenuController should be shown. If the delegate responds YES, the cell is responsible for validating and performing the requested action. The other two UICollectionViewDelegate methods (collectionView:canPerformAction:forItemAtIndexPath:withSender: and collectionView:performAction:forItemAtIndexPath:withSender:) should not be required to be implemented.\r\n\r\n3. If the UICollectionViewDelegate implements all three of the standard edit action methods, it is responsible for deciding wether to display the UIMenuController as well as performing actions. The cell at this point would not be responsible for these behaviors, and canPerformAction:withSender: would be irrelevant (and calling it from collectionView:canPerformAction:forItemAtIndexPath:withSender: would cause an infinite recursion in the responder chain - which happens today).\r\n\r\nActual Results:\r\nIn the case outlined above, the UIMenuController is displayed, but only collectionView:shouldShowMenuForItemAtIndexPath: and canPerformAction:withSender: (on the cell) are invoked, while two more methods are required. If canPerformAction:withSender:, no UIMenuController is displayed.\r\n\r\nVersion:\r\n-\r\n\r\nNotes:\r\nAttached is a simple UICollectionViewController project. The UICollectionViewDelegate methods \r\n\r\n– collectionView:shouldShowMenuForItemAtIndexPath:\r\n– collectionView:canPerformAction:forItemAtIndexPath:withSender:\r\n– collectionView:performAction:forItemAtIndexPath:withSender:\r\n\r\nAnd UICollectionViewCell's\r\n- (BOOL)canPerformAction:(SEL)action withSender:(id)sender\r\n\r\nAre implemented and contain logging. Build the project and run the application. Use the + button to add cells. Perform a long press on a cell and you will see the invoked methods logged:\r\n– collectionView:shouldShowMenuForItemAtIndexPath:\r\nand\r\n- (BOOL)canPerformAction:(SEL)action withSender:(id)sender\r\n\r\nThe other delegate methods will not be invoked. \r\n\r\nIf the cell's canPerformAction:withSender: is removed, all three of those delegate methods will be invoked.\r\n\r\nIf any of the three UICollectionViewDelegate methods are removed, none of these methods will be invoked and the UIMenuController will not be displayed.\r\n\r\nConfiguration:\r\nMacBook Pro 15 late 2013\r\n\r\nAttachments:\r\n'EditableCollectionView.zip' was successfully uploaded."
    email: quellish@gmail.com
    modified: "2014-07-17T03:09:25.164535Z"
    number: "17706330"
    number_intvalue: 17706330
    originated: Thu, 17 Jul 2014 03:09:25 GMT
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Open
    title: 'UIKit: UICollection UIResponder Standard Edit Actions Nebulous Responsibility'
