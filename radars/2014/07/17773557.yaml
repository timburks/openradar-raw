apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17773557"
    labels:
        datastore_id: "5905944701566976"
data:
    classification: Enhancement
    created: "2014-07-23T02:32:05.649683Z"
    description: "In Swift, it should be possible to declare variables with the keyword 'say', so that the ways of specifying constants and variables use the same parts of speech.\r\n\r\nI love the way you guys resurrected \"let\" from Dylan. It's very clear that it means you're setting up initial conditions like you would in a mathematical proof. But it looks jarring next to \"var\" because one is a verb and the other is a noun or adjective. Compare:\r\n\r\nlet x = 0\r\nvar y = 1\r\n\r\nvs...\r\n\r\nlet x = 0\r\nsay y = 1\r\n\r\nPeople have used the word \"say\" to describe arbitrary values in thought experiments for a long time. Wikipedia dates it back to at least Galileo in 1638: \"But if this is true, and if a large stone moves with a speed of, say, eight\" (http://en.wikipedia.org/wiki/Thought_experiment)\r\n\r\nOr consider one of the definitions for 'say' in the Mac OS X built-in dictionary: \"used parenthetically to indicate that something is being suggested as possible or likely but not certain\"\r\n\r\n\"Let X equal 0, and say y equals 1\" rolls trippingly off the tongue like natural language, and uses words that clearly convey one item is a constant while the other is an arbitrary value. Whereas \"Let X equal 0, and var y equals 1\" only makes sense if you simply consider let and var as compiler keyword nouns with human-friendly adjectives describing them, stripping away the conventional power of \"let\" as a verb. That means an extra level of thought is necessary to convert those keywords back into meaning."
    email: jb.rubin@gmail.com
    modified: "2014-07-23T02:32:05.649917Z"
    number: "17773557"
    number_intvalue: 17773557
    originated: 07/22/14
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Please make "say" into an alias for "var".
