apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17764302"
    labels:
        datastore_id: "5801113139806208"
data:
    classification: Enhancement
    created: "2014-07-22T17:26:53.636229Z"
    description: "Swift no longer provides explicit interface files for classes, like Objective-C did. When designing a Swift framework or module, it can be hard to express an interface that's easily readable by users of this framework. Implementation code is in line with the interface for a Swift class, struct, or function. Additionally, with the recent introduction of access control to Swift, private methods or properties are shown alongside public ones.\r\n\r\nXcode may be able to make this a lot more readable by hiding implementation details and elements that are not public within the current target's scope. This could take the form of a visibility toggle like with code folding, and for external modules and sub-projects could even be enabled by default. The parser already understands where implementation details start, and the public visibility of elements, so it should be able to intelligently hide these within the editor.\r\n\r\nFor example, in the sample code provided with the Xcode beta 4 release notes:\r\n\r\npublic var text: String\r\n    public var isComplete: Bool\r\n    private(set) var UUID: NSUUID\r\n    public init(text: String, completed: Bool, UUID: NSUUID) {\r\n        self.text = text\r\n        self.isComplete = completed\r\n        self.UUID = UUID\r\n    }\r\n    func refreshIdentity() {\r\n        self.UUID = NSUUID()\r\n    }\r\n    public override func isEqual(object: AnyObject?) -> Bool {\r\n        if let item = object as? ListItem {\r\n            return self.UUID == item.UUID\r\n        }\r\n        return false\r\n    }\r\n}\r\n\r\nsuch a toggle could simplify the display to this:\r\n\r\npublic var text: String\r\n    public var isComplete: Bool\r\n    public init(text: String, completed: Bool, UUID: NSUUID)\r\n\r\n    public override func isEqual(object: AnyObject?) -> Bool \r\n\r\n}\r\n\r\nwhen viewing this framework source as part of a target other than the framework itself. Such a simplified view only exposes the information needed to interface with this framework and its classes, and makes things much more readable for end users of this framework.\r\n\r\nEven within the framework target, it might be useful to have some sort of toggle to only expose the publicly available methods and properties for at-a-glance auditing of the framework API."
    email: waupacalarson@gmail.com
    modified: "2014-07-22T17:26:53.636421Z"
    number: "17764302"
    number_intvalue: 17764302
    originated: 7/22/2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 beta 4
    reproducible: N/A
    resolved: ""
    status: Open
    title: For Swift files, Xcode should be able to hide non-public implementation details
