apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17533241"
    labels:
        datastore_id: "5908698849345536"
data:
    classification: Enhancement
    created: "2014-07-02T08:50:48.320642Z"
    description: |-
        Swift defines a mechanism to avoid retain cycle in blocks (that are affected to property of self)

        var myClosure = {
            [weak obj] in
            println(obj?.description)
        }

        This is not clear whether self is constant within the block or not. In Obj-C, 2 possible approach are possible:

        Approach A:
        __weak id obj;
        ^{
        	NSLog(obj);
        	NSLog(obj);
        }

        OR

        Approach B:
        __weak id obj;
        ^{
        	__strong id sobj = obj;
        	NSLog(sobj);
        	NSLog(sobj);
        }

        The first approach makes it so that obj can become nil at any point within the block, while approach B makes it either nil or not nil but non-changing  within the block.

        In Swift, it's not clear whether Approach A or B applies when using the [weak obj] pattern.
    email: raphael@creaceed.com
    modified: "2014-07-02T08:50:48.320752Z"
    number: "17533241"
    number_intvalue: 17533241
    originated: 02-Jul-2014 10:50 AM
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6 Beta 2
    reproducible: Not Applicable
    resolved: ""
    status: Open
    title: 'Swift: unclear weak/strong behavior with captured variables in blocks'
