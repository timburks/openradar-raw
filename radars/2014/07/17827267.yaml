apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "17827267"
    labels:
        datastore_id: "6338014921883648"
data:
    classification: ""
    created: "2014-07-28T11:33:04.611231Z"
    description: "Summary:Xcode 6 beta 4 removed XCTAssertEqualObjects in favor of just XCTAssertEqual for any value or object. Xcode now has a compiler error when trying to assert that arrays should be equal, even if they are two empty arrays (such as XCTAssertEqual([Int](), [Int](), ...).\r\n\r\nSteps to Reproduce:\r\n1. Create a subclass of XCTestCase in Swift\r\n2. Create a test function to test equality of two arrays, using XCTAssertEqual(firstArray, secondArray, message)\r\n2a. Or, create a test function to test equality of two arrays, using XCTAssert(firstArray == secondArray, message)\r\n3. Receive compile error. \r\n\r\nExpected Results:Expect two empty arrays to be equal (not === equal, but just == equal).\r\n\r\nActual Results:Compiler error: \"Type [Type] does not conform to protocol 'Equatable'.\", where T could be Int, or even (in the included project) the Question class. This example is derived from Graham Lee's book \"Test-Driven iOS Development\". Note: This example worked in Xcode beta 3 with XCTAssertEqualObjects(firstArray, secondArray, message).\r\n\r\nVersion:Xcode 6 beta 4 (6A267n). Mac OS X 10.9.4 (13E28)."
    email: bj.miller.ltd@gmail.com
    modified: "2014-07-28T11:33:04.611386Z"
    number: "17827267"
    number_intvalue: 17827267
    originated: July 28, 2014
    parent_number: '&{NULL_VALUE}'
    product: Swift
    product_version: Xcode 6b4
    reproducible: Always
    resolved: ""
    status: Open
    title: XCTAssertEqual has compiler error where XCTAssertEqualObjects did not for Swift Arrays
