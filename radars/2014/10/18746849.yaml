apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18746849"
    labels:
        datastore_id: "5513529041879040"
data:
    classification: UI/Usability
    created: "2014-10-23T06:07:14.137546Z"
    description: "Summary:\r\nWhen a UIScrollView's delegate adjusts its deceleration-target contentOffset, the scroll view can get into a strange state where it decelerates most of the way, then slides linearly.\r\n\r\nOne way this can happen is with very small scroll gestures (velocity < ~0.27).\r\n\r\nWe have also seen cases of this linear movement behavior with very fast scroll gestures, but the reproduction steps are currently unclear.\r\n\r\nSteps to Reproduce:\r\n\r\nAdd the following code to an empty view controller; try scrolling with a very small velocity.\r\n\r\n- (void)viewDidLoad {\r\n    [super viewDidLoad];\r\n    \r\n    _scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(375/2.0-200/2, 180, 200, 300)];\r\n    _scrollView.delegate = self;\r\n    _scrollView.backgroundColor = [UIColor colorWithWhite:0.9 alpha:1];\r\n    _scrollView.alwaysBounceVertical = YES;\r\n    _scrollView.clipsToBounds = NO;\r\n    \r\n    UIView *top = [[UIView alloc] initWithFrame:CGRectMake(5, 5, 190, 250)];\r\n    top.backgroundColor = [UIColor colorWithWhite:0.7 alpha:0.8];\r\n    UILabel *label = [UILabel new];\r\n    label.text = @\"Hello\";\r\n    [label sizeToFit];\r\n    label.center = [top.layer convertPoint:top.layer.position fromLayer:top.layer.superlayer];\r\n    [top addSubview:label];\r\n    [_scrollView addSubview:top];\r\n    \r\n    UIView *boundary = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 200, 1000)];\r\n    boundary.layer.borderColor = [UIColor blackColor].CGColor;\r\n    boundary.layer.borderWidth = 1;\r\n    [_scrollView addSubview:boundary];\r\n    \r\n    _scrollView.contentSize = boundary.bounds.size;\r\n    \r\n    [self.view addSubview:_scrollView];\r\n    \r\n}\r\n\r\n\r\n- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView\r\n                     withVelocity:(CGPoint)velocity\r\n              targetContentOffset:(inout CGPoint *)targetContentOffset\r\n{\r\n    if (scrollView == _scrollView) {\r\n        CGFloat maxY = (_scrollView.contentSize.height - _scrollView.bounds.size.height);\r\n        targetContentOffset->y = MAX(0, MIN(1, round(targetContentOffset->y / maxY))) * maxY;\r\n        NSLog(@\"Target %g,  velocity %g\", targetContentOffset->y, velocity.y);\r\n    }\r\n}\r\n\r\n\r\nExpected Results:\r\nScroll-deceleration should always be exponential decay, never linear.\r\n\r\nActual Results:\r\nScroll deceleration is linear in certain cases."
    email: jtbandes@gmail.com
    modified: "2014-10-23T06:07:14.137772Z"
    number: "18746849"
    number_intvalue: 18746849
    originated: 10/22/2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 8.1 (12B411)
    reproducible: Always
    resolved: ""
    status: Open
    title: Adjusting UIScrollView target offset can lead to strange linear-deceleration behavior
