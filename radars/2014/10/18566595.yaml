apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18566595"
    labels:
        datastore_id: "5546346685661184"
data:
    classification: Serious Bug
    created: "2014-10-07T10:15:10.731725Z"
    description: "Summary:\r\nIf you enable both versions of Code39 detection (with and without Mod43 check digit) AV Foundation always reports the scanned barcode as Code39, regardless if you scan a version with or without check digit. The check digit is then output as extra character.\r\n\r\nSteps to Reproduce:\r\n1. Set up a metadata output to scan for AVMetadataObjectTypeCode39Code and AVMetadataObjectTypeCode39Mod43Code\r\n2. Create a Code39mod43 with contents \"CONTENTS\"\r\n2. Scan a Code39 barcode with Mod43 check digit\r\n\r\nExpected Results:\r\n- code should be reported as \"org.iso.Code39Mod43\"\r\n- code content should be \"CONTENTS\"\r\n\r\nActual Results:\r\n- code is reported as \"org.iso.Code39\"\r\n- code contents is \"CONTENTSA\" (extra character)\r\n\r\nVersion:\r\niOS 8.0.2 (12A405)\r\n\r\nNotes:\r\nIf you remove the AVMetadataObjectTypeCode39Code type from the metadata output, then the scanned barcode is reported as described in expected results.\r\n\r\nSo the detection order might be the wrong way around. The problem is - as a developer - I have way to know which of the both Code39 variants was actually scanned. And thus I wouldn't know if I can disregard the extra character.\r\n\r\nConfiguration:\r\niPhone 5S"
    email: oliver.drobnik@gmail.com
    modified: "2014-11-06T11:59:05.976858Z"
    number: "18566595"
    number_intvalue: 18566595
    originated: ""
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: iOS 8.0.2 (12A405)
    reproducible: Always
    resolved: ""
    status: Closed
    title: 'AV Foundation: Code 39 Recognition Confusion'
