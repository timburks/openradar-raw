apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18440532"
    labels:
        datastore_id: "5779872848805888"
data:
    classification: Enhancement
    created: "2014-10-26T18:41:06.839224Z"
    description: "Summary:\r\nIn a perfect world, every header in /usr/include and /System/Library/Frameworks should have a parent module available to include. An average Objective-C project should be able to use @imports universally without relying on Clang auto-translating #imports.\r\n\r\nCertain modules,\r\n\r\nSteps to Reproduce:\r\n\r\nSteps to Reproduce:\r\n1. Enable modules for an Xcode project.\r\n2. Active \"-Wauto-import\" to migrate to @import modules.\r\n3. Use Xcode Fix-It to replace \"#import <netinet/in.h>\" and \"#import <net/if.h>\" with \"@import Darwin.POSIX.netinet.in;\" and \"@import Darwin.POSIX.net.if;\", respectively.\r\n\r\nExpected Results:\r\nThe project builds successfully after using the Fix-It to switch to @import.\r\n\r\nActual Results:\r\nXcode fails to build the file thereafter, with a parse error \"expected a module name after module import\". The code editor in Xcode highlights \"in\" and \"if\" in the module names as if they are language keywords.\r\n\r\nVersion:\r\nXcode 6.1 DP2 (6A1030), OS X 10.10 Beta 3 (14A361p)\r\n\r\nNotes:\r\nWorkaround involves leaving the old #import in, relying on Clang auto-import, and disabling \"-Wauto-import\".\r\n\r\nConfiguration:\r\nDoes not occur in a legacy project without modules enabled. Does not occur when @import is avoided but modules are activated, using Clang's auto-import feature.\r\n\r\nAttachments:"
    email: zwaldowski@gmail.com
    modified: "2014-10-26T18:41:06.839469Z"
    number: "18440532"
    number_intvalue: 18440532
    originated: 24 Sep 2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1 DP2 (6A1030), OS X 10.10 Beta 3 (14A361p)
    reproducible: Sometimes
    resolved: "false"
    status: Open
    title: POSIX module names collide with language keywords
