apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18536864"
    labels:
        datastore_id: "5317109248688128"
data:
    classification: ""
    created: "2014-10-03T10:39:30.7395Z"
    description: "Summary:\r\nYour build can get into a state where builds fail because clang (and by proxy Xcode) complains that a header has been modified since the precompiled header has been created.\r\n\r\nIn my (naive) thinking this should not be a fatal error. Either clang/Xcode should just deal with it and rebuild automatically or it should provide information as to why it is so important to fail in this state.\r\n\r\nThe clang diagnostic message can be found here https://github.com/llvm-mirror/clang/blob/release_35/include/clang/Basic/DiagnosticSerializationKinds.td#L27\r\n\r\nSteps to Reproduce:\r\n1. Manually create a nested/sibling workspace project (or use CocoaPods to generate a Pods.xcodeproj)\r\n2. Build it with xcodebuild\r\n3. Delete the complete project nested/sibling project\r\n4. Rebuild with xcodebuild\r\n\r\nExpected Results:\r\nThat clang or Xcode resolves this conflict automatically, optionally log a warning about it doing so, and successfully finish the build.\r\n\r\nActual Results:\r\nfatal error: file '/Users/eloy/TestPrecompiledHeaderError/vendor/Pods/Target Support Files/Pods/Pods-environment.h' has been modified since the precompiled header\r\n      '/var/folders/6m/_f14_9xj615g9vz27dg6mp5h0000gn/C/com.apple.DeveloperTools/6.0.1-6A317/Xcode/SharedPrecompiledHeaders/Pods-AFNetworking-prefix-dojgvfodjanafbckmbygraijgapv/Pods-AFNetworking-prefix.pch.pch'\r\n      was built\r\nnote: please rebuild precompiled header\r\n\r\nVersion:\r\nI think this started since Xcode 6."
    email: eloy.de.enige@gmail.com
    modified: "2015-01-07T10:14:17.792805Z"
    number: "18536864"
    number_intvalue: 18536864
    originated: 03-10-2014
    parent_number: "18351434"
    product: Developer Tools
    product_version: ""
    reproducible: Always
    resolved: ""
    status: Duplicate/18351434
    title: Xcode/clang should try to solve implementation detail failures themselves.
