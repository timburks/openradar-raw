apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18440444"
    labels:
        datastore_id: "5262939174993920"
data:
    classification: Enhancement
    created: "2014-10-26T18:42:48.975776Z"
    description: "Summary:\r\nEvery header in /usr/include and /System/Library/Frameworks should have a parent module available to include. The extended attributes addition to the C standard library does not.\r\n\r\nSteps to Reproduce:\r\n1. Enable modules for an Xcode project.\r\n2. Active \"-Wauto-import\" to migrate to @import modules.\r\n3. Migrate \"#import <sys/attr.h>\" to \"@import Darwin.sys.attr;\"\r\n4. Be unable to \"@import Darwin.sys.xattr;\"\r\n\r\nAlternatively:\r\n\r\n1. Have the desire to use extended attributes from Swift.\r\n2. Be sad.\r\n\r\nExpected Results:\r\nExpected Results:\r\nObj-C: \"@import Darwin.sys.xattr;\" works as you would assume.\r\nSwift: \"import Darwin.sys.xattr\" works as you would assume.\r\n\r\nActual Results:\r\nObj-C: \"#import <sys/xattr.h>\" must be used instead.\r\nSwift: Cannot import the xattr functions without Objective-C bridging.\r\n\r\n\r\nVersion:\r\nXcode 6.1 DP2 (6A1030), OS X 10.10 Beta 3 (14A361p)\r\n\r\nNotes:\r\nIn Objective-C, workarounds involve using the #import and being sad that not all the @imports line up. In Swift, there is no workaround other than the Objective-C bridging header.\r\n\r\nConfiguration:\r\n\r\n\r\nAttachments:"
    email: zwaldowski@gmail.com
    modified: "2015-09-24T17:26:02.67237Z"
    number: "18440444"
    number_intvalue: 18440444
    originated: 24 Sep 2014
    parent_number: '&{NULL_VALUE}'
    product: Developer Tools
    product_version: Xcode 6.1 DP2 (6A1030), OS X 10.10 Beta 3 (14A361p)
    reproducible: Sometimes
    resolved: "true"
    status: Closed
    title: xattr.h lacks module definition
