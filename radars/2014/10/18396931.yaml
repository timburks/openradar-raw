apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "18396931"
    labels:
        datastore_id: "6437937000480768"
data:
    classification: ""
    created: "2014-10-16T16:40:04.11777Z"
    description: "UPDATE: Apple marked as Duplicate of 10450268 (Open)\r\n\r\nSummary:\r\nI am not able to use an elliptic curve client certificate in my iOS app. My NSURLConnectionDelegate's  -connection:willSendRequestForAuthenticationChallenge: implementation retrieve's the SecIdentityRef for the client certificate from the app's keychain, but the connection fails.\r\n\r\nIn iOS 7, the TLS handshake fails. In iOS 8, the app appears to never actually send the client certificate to the server.\r\n\r\nUnder both versions of iOS, an RSA client certificate works correctly.\r\n\r\nSteps to Reproduce:\r\n1. Build an app that uses an NSURLConnection to connect to a server that is configured for TLS 1.2 and uses elliptic curve keys.\r\n2. In your NSURLConnectionDelegate, when you are challenged to produce client credentials (authenticationMethod = NSURLAuthenticationMethodClientCertificate), use an NSURLCredential initialized with an EC identity and certificate.\r\n\r\n\r\nExpected Results:\r\nThe server receives the client certificate and authenticates the client. The connection succeeds.\r\n\r\nActual Results:\r\nUnder iOS 7, the server rejects the client due to a bad handshake. According to (http://openradar.appspot.com/radar?id=5276828226813952), this is because iOS is not sending a required message in the handshake.\r\n\r\nUnder iOS 8, the server does not receive the client certificate at all. I have not been able to determine why it is not receiving the certificate, but I am certain that I am passing a valid SecIdentityRef to -[NSURLAuthenticationChallengeSender useCredential:forAuthenticationChallenge]\r\n\r\nVersion:\r\niOS 7.1.2 (11D257), iOS 8.0 (12A365)\r\n\r\nNotes:\r\n\r\nConfiguration:\r\niPod Touch (5g)"
    email: greg.cooksey@droidcloud.mobi
    modified: "2015-04-14T19:01:42.36014Z"
    number: "18396931"
    number_intvalue: 18396931
    originated: "20140919"
    parent_number: '&{NULL_VALUE}'
    product: iOS
    product_version: 7.1.2, 8.0
    reproducible: Always
    resolved: ""
    status: Open
    title: NSURLConnection does not support elliptic curve client certificates
