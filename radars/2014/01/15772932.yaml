apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "15772932"
    labels:
        datastore_id: "6076319477530624"
data:
    classification: Crash/Hang/Data Loss
    created: "2014-01-08T17:28:41.595343Z"
    description: "Summary:\r\nIn CFURLCopyResourcePropertiesForKeys, if the key kCFURLIsExcludedFromBackupKey is provided and the CFURLRef encodes a relative path, the CFURLRef's embedded NSString is released, which may trigger a crash later in the program.\r\n\r\nSteps to Reproduce:\r\nCompile and run the attached source file as follows:\r\n\r\n% clang -framework CoreFoundation -o sample sample.c\r\n% ./sample sample.c\r\n\r\n\r\nExpected Results:\r\nThe URL's string's retain count is the same before and after the call to CFURLCopyResourcePropertiesForKeys.\r\n\r\nbefore - URL retain count: 1; string retain count: 1\r\n[...]\r\nafter - URL retain count: 1; string retain count: 1\r\n\r\n\r\nActual Results:\r\nThe URL's string is released by CFURLCopyResourcePropertiesForKeys:\r\n\r\nbefore - URL retain count: 1; string retain count: 1\r\n[...]\r\nafter - URL retain count: 1; string retain count: 1152921504606846975\r\n\r\n\r\nVersion:\r\n10.9.1/13B42\r\n\r\nNotes:\r\nWorkaround: Explicitly retain the CFURLRef's string, e.g. CFRetain(CFURLGetString(url));\r\n\r\nConfiguration:\r\nThis problem exists on OS X 10.9.1 and OS X 10.8.5 in both 32 and 64-bit.\r\n\r\nIt does not occur if you pass an absolute path to CFStringCreateWithFileSystemRepresentation.\r\n\r\nIt does not occur if you supply other keys with CFURLCopyResourcePropertiesForKeys.  That is, any combination of keys which includes kCFURLIsExcludedFromBackupKey has triggered the problem.\r\n\r\n[Attached file is uploaded to <http://sabi.net/temp/15772932.c>.]\r\n\r\nUpdate:\r\n\r\nIf you pass a relative path to an item within a package, even the workaround described in my initial report does not work, and the application crashes.\r\n\r\nThe issue is actually in CSBackupIsItemExcluded.\r\n\r\nSee the attachment 'excluded.c'; compile with 'clang -framework CoreServices -o excluded excluded.c'.\r\n\r\n% cd /Applications                                                               \r\n% /path/to/excluded Safari.app         \r\n<CFURL 0x7fdd4bc08120 [0x7fff71428110]>{string = Safari.app, encoding = 134217984\r\n\tbase = <CFURL 0x7fdd4bc080b0 [0x7fff71428110]>{string = file://localhost/Applications/, encoding = 134217984, base = (null)}}\r\nbefore - URL retain count: 2; string retain count: 2\r\nafter - URL retain count: 2; string retain count: 1\r\n\r\nBut even overretaining the URL and its string when passing a relative path to an item within a package, another CFURL's embedded CFString is overreleased:\r\n\r\n% NSZombieEnabled=YES lldb -- /path/to/excluded Safari.app/Contents\r\nCurrent executable set to '/path/to/excluded' (x86_64).\r\n(lldb) run\r\nProcess 83022 launched: '/path/to/excluded' (x86_64)\r\n<CFURL 0x10010a3b0 [0x7fff71428110]>{string = Safari.app/Contents, encoding = 134217984\r\n\tbase = <CFURL 0x1001080d0 [0x7fff71428110]>{string = file://localhost/Applications/, encoding = 134217984, base = (null)}}\r\nbefore - URL retain count: 2; string retain count: 2\r\n2014-01-25 11:05:28.436 excluded[83022:f0b] *** -[CFString release]: message sent to deallocated instance 0x10030a870\r\nProcess 83022 stopped\r\n* thread #1: tid = 0x1c03, 0x00007fff86381f2e CoreFoundation`___forwarding___ + 158, stop reason = EXC_BREAKPOINT (code=EXC_I386_BPT, subcode=0x0)\r\n    frame #0: 0x00007fff86381f2e CoreFoundation`___forwarding___ + 158\r\nCoreFoundation`___forwarding___ + 158:\r\n-> 0x7fff86381f2e:  callq  0x7fff8647c780            ; symbol stub for: getpid\r\n   0x7fff86381f33:  movl   %eax, %edi\r\n   0x7fff86381f35:  movl   $9, %esi\r\n   0x7fff86381f3a:  callq  0x7fff8647c7d4            ; symbol stub for: kill\r\n(lldb) bt\r\n* thread #1: tid = 0x1c03, 0x00007fff86381f2e CoreFoundation`___forwarding___ + 158, stop reason = EXC_BREAKPOINT (code=EXC_I386_BPT, subcode=0x0)\r\n    frame #0: 0x00007fff86381f2e CoreFoundation`___forwarding___ + 158\r\n    frame #1: 0x00007fff86381e18 CoreFoundation`_CF_forwarding_prep_0 + 232\r\n    frame #2: 0x00007fff8630928a CoreFoundation`CFRelease + 170\r\n    frame #3: 0x00007fff86311313 CoreFoundation`__CFURLDeallocate + 35\r\n    frame #4: 0x00007fff863093df CoreFoundation`CFRelease + 511\r\n    frame #5: 0x00007fff87bea9d3 CarbonCore`CSBackupIsItemExcluded + 887\r\n    frame #6: 0x0000000100000e24 excluded`main + 212\r\n    frame #7: 0x00007fff8a7b67e1 libdyld.dylib`start + 1\r\n\r\nAgain, if you use absolute paths, there are no problems in either scenario.\r\n\r\n[Attached file is uploaded to <http://sabi.net/temp/15772932-excluded.c>.]"
    email: nriley@gmail.com
    modified: "2014-01-25T17:14:39.445431Z"
    number: "15772932"
    number_intvalue: 15772932
    originated: 08-Jan-2014 12:26 PM
    parent_number: '&{NULL_VALUE}'
    product: OS X
    product_version: 10.9.1/13B42
    reproducible: Always
    resolved: ""
    status: Open
    title: CFURLCopyResourcePropertiesForKeys with kCFURLIsExcludedFromBackupKey (or CSBackupIsItemExcluded) on relative path overreleases
