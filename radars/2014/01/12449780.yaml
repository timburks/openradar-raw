apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "12449780"
    labels:
        datastore_id: "6080159178293248"
data:
    classification: ""
    created: "2014-01-22T08:57:03.859264Z"
    description: "UIKeyboardAnimationCurveUserInfoKey contains an NSNumber-boxed UIViewAnimationCurve value. This is great for old-style beginAnimations/commitAnimations animations, but makes it easy to introduce bugs when using block-based UIView animations.\r\n\r\nThis is because UIViewAnimationCurve is not \"compatible\" with UIViewAnimationOptions.\r\n\r\n// Old-style animation – all good:\r\n[UIView beginAnimations:@\"UIKeyboard\" context:nil];\r\n[UIView setAnimationCurve:[note.userInfo[UIKeyboardAnimationCurveUserInfoKey] unsignedIntegerValue]];\r\nself.view.frame = viewFrame;\r\n[UIView commitAnimations];\r\n\r\n// Block-based animation – subtle bug:\r\n[UIView animationWithDuration:0.25 delay:0.0\r\n        options:[note.userInfo[UIKeyboardAnimationCurveUserInfoKey] unsignedIntegerValue]     // <-----\r\n        animations:^{\r\n    self.view.frame = viewFrame;\r\n} completion:nil];\r\n\r\n// Block-based animation – correct but feels hacky:\r\n[UIView animationWithDuration:0.25 delay:0.0\r\n        options:[note.userInfo[UIKeyboardAnimationCurveUserInfoKey] unsignedIntegerValue] << 16     // <-----\r\n        animations:^{\r\n    self.view.frame = viewFrame;\r\n} completion:nil];\r\n\r\nPerhaps introduce a UIKeyboardAnimationOptionCurveUserInfoKey?"
    email: yang.meyer@gmail.com
    modified: "2014-01-22T08:57:03.859455Z"
    number: "12449780"
    number_intvalue: 12449780
    originated: "2012-10-07"
    parent_number: '&{NULL_VALUE}'
    product: iPhone SDK
    product_version: "7.0"
    reproducible: Always
    resolved: ""
    status: Open
    title: UIKeyboardAnimationCurveUserInfoKey not compatible for block-based UIView animations
