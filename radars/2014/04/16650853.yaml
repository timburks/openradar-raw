apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "16650853"
    labels:
        datastore_id: "5806049265188864"
data:
    classification: Other Bug
    created: "2014-04-17T21:05:06.953288Z"
    description: "Summary:\r\nin +(void)load for a ViewController, I was referencing an image using UIImage imageNamed:, and then capturing the image.size for later use. (We were creating a UIImage from [UIColor clearColor] and wanted it to have the same size as the referenced image asset) This was causing that image when later referenced to fail to find the @2x form for retina devices.\r\n\r\nSteps to Reproduce:\r\n1. Create viewController that displays a simple list of images, using [UIImage imageNamed:] with at least 2 variants, non-retina/retina.\r\n2. Reference one of those images in +(void)load using [UIImage imageNamed:], and access the .size property.\r\n3. Run this app on a Retina device.\r\n\r\nExpected Results:\r\nExpected all the retina images to load the asset for the appropriate image scale.\r\n\r\nActual Results:\r\nThe image referenced from +(void)load will only load the non-retina image, regardless of the device you run it on\r\n\r\nRegression:\r\nWe first noticed this problem I believe on 7.0, but currently have only been testing on 7.1\r\n\r\nNotes:\r\nWorkaround: Hardcode the imageSize manually instead of reading it from the asset, or lazy load the clearImage.\r\n\r\n\r\nApple Developer Relations\r\nEngineering has requested a test case/sample app in order to further investigate this issue.  Test Case/Sample App Requirements:  https://developer.apple.com/bug-reporting/ios/test-case/"
    email: fbartho@gmail.com
    modified: "2017-06-15T00:38:00.22295Z"
    number: "16650853"
    number_intvalue: 16650853
    originated: 17-Apr-2014 02:04 PM
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "7.1"
    reproducible: Always
    resolved: ""
    status: Closed
    title: '[UIImage imageNamed:] in +(void)load taints the image used, preventing it from loading with scale 2.0'
