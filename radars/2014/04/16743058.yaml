apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "16743058"
    labels:
        datastore_id: "5889571346710528"
data:
    classification: Serious Bug
    created: "2014-04-28T16:19:58.318246Z"
    description: "Summary:\r\nFirst of all assign delegates break Cocoa design patterns.\r\n\r\nBesides, things like NSFetchedResultsController sometimes outlive their owners. It would cause crashes. For example, I create an NSFetchedResultsController in my view controller and let view controller retain it as a property. So my view controller is the owner of this NSFetchedResultsController. I also set my view controller as the NSFetchedResultsController's delegate. Following Cocoa design patterns and using ARC, I shouldn't need to do anything in my view controller's dealloc method. However, sometimes, the NSFetchedResultsController is still alive for some period after the owner view controller is deallocated(I'm not sure why, maybe Core Data stack retains it somewhere) and continues to send delegate method calls to the deallocated view controller. The obvious workaround is to clear NSFetchedResultsController's delegate in its owner's dealloc method, which is unnecessary according to Cocoa design patterns."
    email: an00na@gmail.com
    modified: "2014-04-28T16:19:58.318384Z"
    number: "16743058"
    number_intvalue: 16743058
    originated: 28-Apr-2014
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: 7.1.1
    reproducible: Always
    resolved: ""
    status: Open
    title: All delegates in framework should be weak instead of assign
