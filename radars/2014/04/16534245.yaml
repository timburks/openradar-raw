apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "16534245"
    labels:
        datastore_id: "5778117482250240"
data:
    classification: UI
    created: "2014-04-06T00:42:21.49088Z"
    description: "Summary:\r\nSKEffectNode ignores the zPosition order of its child nodes. It seems to instead render as if zPosition were the same for each node; in other words, the SKEffectNode may be rendering its children in the order they were added.\r\n\r\nSteps to Reproduce:\r\n1. Add an SKEffectNode to the scene.\r\n2. Add node X with zPosition 1.\r\n3. Add overlapping node Y with zPosition 0.\r\n\r\nCreate a new iOS Xcode project (or use the attached tarball) using the Sprite Kit template. Replace the scene class's implementation with the following code. Note the if-statement inviting you to test the workaround.\r\n\r\nExpected Results:\r\nNode X should render on top of Node Y, since its zPosition is higher.\r\n\r\nActual Results:\r\nNode Y renders on top of Node X. Possibly because Node Y was added after Node X.\r\n\r\nVersion:\r\niOS 7.1 (11D167)\r\n\r\nNotes:\r\nOne workaround is to interject an ordinary SKNode. Add all the SKEffectNode's children to this SKNode, then add this SKNode to the SKEffectNode. This restores the zPosition-based drawing order.\r\n\r\nPerhaps SKEffectNode should expose a property like SKView's ignoresSiblingOrder?\r\n\r\nConfiguration:\r\niPhone 5S\r\niOS Simulator"
    email: sartak@gmail.com
    modified: "2014-06-04T20:28:10.512337Z"
    number: "16534245"
    number_intvalue: 16534245
    originated: "2014-04-05"
    parent_number: '&{NULL_VALUE}'
    product: iOS SDK
    product_version: "7.1"
    reproducible: Always
    resolved: "2014-06-03"
    status: Closed
    title: SKEffectNode ignores children zPosition order
