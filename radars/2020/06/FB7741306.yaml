apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB7741306
    labels:
        datastore_id: "5034769091919872"
data:
    classification: crash
    created: "2020-06-18T16:04:43.456431Z"
    description: "Since AUv3 Audio Units run in a separate process, one would think that crashes of the AudioUnit can be handled gracefully by the host. This appears not to be the case due to a bug in CoreAudio which causes the renderBlock to never return if the Audio Unit crashes. You can reproduce this with the  CreatingCustomAudioEffects (AUv3Filter) and IncorporatingAudioEffectsAndInstruments (AUv3Host) sample codes: \r\n- Build and install the sample Audio Unit.\r\n- Launch the sample host and select AUv3FilterDemo in the list of effects\r\n- Click \"Play\" in the host\r\n- Open \"Activity Monitor\" and use it to force-quit the process called \"AUv3FilterExtension (AUv3Host)\" to simulate a crash of the plug-in.\r\nAs soon as one then tries to change Audio Unit, this freezes the host. The reason is that [AVAudioEngine disconnectNodeInput:] gets deadlocked as it waits for the renderBlock to return, which never happens. \r\n\r\nWhat I don't understand is that the notification kAudioComponentInstanceInvalidationNotification is precisely designed to give the host the opportunity to handle a crash gracefully. The fact that renderBlock blocks indefinitely and causes deadlocks for any subsequent call to the AudioUnit makes this impossible since one is forced to choose between a memory leak and a deadlock."
    email: hairer.martin@gmail.com
    modified: "2020-06-18T16:04:43.456747Z"
    number: FB7741306
    number_intvalue: 7741306
    originated: 18 June 2020
    parent_number: '&{NULL_VALUE}'
    product: CoreAudio / macOS
    product_version: "10.15"
    reproducible: always
    resolved: ""
    status: Open
    title: AUv3 Auido Units can crash / freeze host
