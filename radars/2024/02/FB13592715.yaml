apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB13592715
    labels:
        datastore_id: "5624116140834816"
data:
    classification: ""
    created: "2024-02-07T07:38:15.888985Z"
    description: "When using predicates with multi-level relationships in SwiftData, it cannot guarantee consistent results each time.\r\n\r\nRun the attached project and click on the \"Using Predicate\" button in the view. Observe the console output. You will get an output similar to the following:\r\n\r\n**[PredicateTest.S_Item]**\r\n\r\n1\r\n\r\nOr it might be\r\n\r\n**[PredicateTest.S_Item, PredicateTest.S_Item]**\r\n\r\n2\r\n\r\nAfter getting one type of output, click the run button in XCode to rerun the application, and after multiple switches, you might get the other type of output.\r\n\r\nIn the current code, given the environmental data, the correct output should be\r\n\r\n**[PredicateTest.S_Item, PredicateTest.S_Item]**\r\n\r\n2\r\n\r\nIn the project, the predicate used is:\r\n**let** predicate = NSPredicate(format: \"note == %@ OR note.parent == %@\", note, note)\r\n\r\nI have created an almost identical Core Data environment in the project, using a similar predicate:\r\n\r\n**let** predicate = NSPredicate(format: \"note == %@ OR note.parent == %@\", note, note)\r\n\r\nAnd each time, it yields the correct result.\r\n\r\nPS: The SQL command generated by SwiftData's predicate is obviously more complex than Core Data's, and I wonder if this is the reason."
    email: fatbobman@gmail.com
    modified: "2024-02-07T07:38:15.889148Z"
    number: FB13592715
    number_intvalue: 13592715
    originated: 2024/02/07
    parent_number: '&{NULL_VALUE}'
    product: SwiftData
    product_version: iOS 17
    reproducible: ""
    resolved: ""
    status: Open
    title: When using predicates with multi-level relationships in SwiftData, it cannot guarantee consistent results each time
