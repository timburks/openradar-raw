apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "6453698"
    labels:
        datastore_id: "1602"
data:
    classification: Performance
    created: "2008-12-18T00:01:11.823788Z"
    description: "Summary:\r\nOn the Mac OS X implementation of Java 1.6, when the user clicks on a row in a JTable, an AccessibleContext is created for every cell in the table, destroying performance. With millions of rows, it's essentially a hang.\r\n\r\nSteps to Reproduce:\r\n1. Construct and display a JTable with millions of cells.\r\n2. Mouse click on a cell in the table.\r\n\r\nExpected Results:\r\nThe selection to be highlighted immediately; no extraneous calls to JTable.getValueAt(row, col).\r\n\r\nActual Results:\r\nJTable.getValueAt(row, col) is called for every cell in the table:\r\n\r\njavax.swing.JTable.getValueAt(JTable.java:2639)\r\nat javax.swing.JTable$AccessibleJTable$AccessibleJTableCell.getCurrentAccessibleContext(JTable.java:7891)\r\nat javax.swing.JTable$AccessibleJTable$AccessibleJTableCell.getAccessibleName(JTable.java:7929)\r\nat apple.awt.CAccessibility$18.run(CAccessibility.java:264)\r\nat java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:199)\r\nat apple.awt.CToolkit$CPeerEvent.dispatch(CToolkit.java:1192)\r\nat java.awt.EventQueue.dispatchEvent(EventQueue.java:597)\r\n\r\nNotes:\r\nChanging the look and feel does not workaround the problem on Mac OS X.\r\nThis problem does not occur on Windows using the system or cross-platform l&f.\r\n\r\nlaurie% java -version\r\njava version \"1.6.0_07\"\r\nJava(TM) SE Runtime Environment (build 1.6.0_07-b06-153)\r\nJava HotSpot(TM) 64-Bit Server VM (build 1.6.0_07-b06-57, mixed mode)"
    email: laurie.callaghan@gmail.com
    modified: "2011-08-28T05:48:47.098478Z"
    number: "6453698"
    number_intvalue: 6453698
    originated: 17-Dec-2008 03:50 PM
    parent_number: '&{NULL_VALUE}'
    product: Java
    product_version: "1.6"
    reproducible: always
    resolved: ""
    status: Open
    title: Java JTable performance problem with large tables
