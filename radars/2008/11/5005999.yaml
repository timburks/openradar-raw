apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "5005999"
    labels:
        datastore_id: "208"
data:
    classification: '&{NULL_VALUE}'
    created: "2008-11-16T08:12:56.741672Z"
    description: "Summary:\r\nWhen a slider thumb is moved in a non-opaque window, the window's shadow is not invalidated, leaving a hole in the window where the thumb was.\r\n\r\nSteps to Reproduce:\r\n1. Create a window.\r\n2. Set its opaque to NO.\r\n3. Set its backgroundColor to a color with a alpha component < 1.\r\n4. Add a slider to its content view.\r\n5. Move the slider.\r\n\r\nExpected Results:\r\nNo holes are knocked in the window.\r\n\r\nActual Results:\r\nThe slider leaves behind a hole in the background. The hole is not totally transparent; it simply does not have any of the window's shadow in it.\r\n\r\nRegression:\r\nUnknown.\r\n\r\nNotes:\r\nThe workaround is to send invalidateShadow to the window in the action method, and have the slider send its action method continuously. This workaround has two problems:\r\n1. It is not always preferred to send the action method continuously.\r\n2. In a pure Bindings app, there is no action method, continuous or otherwise, and adding the invalidateShadow message to the set-accessor method is Bad and Wrong.\r\n\r\nThe slider should repeatedly invalidate the shadow as its thumb is moved. For performance reasons, the ideal solution is to allow invalidation of the shadow only in a specific rect (in the case of the slider, that of its thumb, in both its former position and its latter position)."
    email: boredzo@gmail.com
    modified: "2011-08-28T05:51:14.078388Z"
    number: "5005999"
    number_intvalue: 5005999
    originated: '&{NULL_VALUE}'
    parent_number: '&{NULL_VALUE}'
    product: '&{NULL_VALUE}'
    product_version: '&{NULL_VALUE}'
    reproducible: '&{NULL_VALUE}'
    resolved: '&{NULL_VALUE}'
    status: Open
    title: Slider does not invalidate a non-opaque window's shadow when it is moved
