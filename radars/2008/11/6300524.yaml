apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "6300524"
    labels:
        datastore_id: "219"
data:
    classification: '&{NULL_VALUE}'
    created: "2008-11-16T09:17:27.421497Z"
    description: "Summary:\r\nNSTask has setters and getters for file descriptors 0, 1 and 2. We would appreciate an API for setting NSPipes or NSFileHandles for any file descriptor, for example for inter-process communication through pipes without interfering with the standard input/output of the child tool.\r\n\r\nDetail:\r\nThis is NSTask's current API in respect to file descriptors:\r\n\r\n// set standard I/O channels; may be either an NSFileHandle or an NSPipe\r\n- (void)setStandardInput:(id)input;\r\n- (void)setStandardOutput:(id)output;\r\n- (void)setStandardError:(id)error;\r\n\r\n// get standard I/O channels; could be either an NSFileHandle or an NSPipe\r\n- (id)standardInput;\r\n- (id)standardOutput;\r\n- (id)standardError;\r\n\r\nUpon -[NSTask launch], after the fork but before the execve, NSTask seems to close all open file descriptors, even pipes. While making some sense for the general case, this behavior is undocumented and interferes with code that would have worked with a standard fork+exec.\r\n\r\nRequested feature:\r\nIn addition to the above API, or as a replacement, we would like to see the following API, or something like it:\r\n-(void)setFileHandle:(NSFileHandle*)fh forDescriptor:(int)descr;\r\n-(NSFileHandle*)fileHandleForDescriptor:(int)descr;\r\n\r\nThis would prevent the NSTask from closing this file handle in the child."
    email: joachimb@gmail.com
    modified: "2011-08-28T05:49:33.806706Z"
    number: "6300524"
    number_intvalue: 6300524
    originated: '&{NULL_VALUE}'
    parent_number: '&{NULL_VALUE}'
    product: '&{NULL_VALUE}'
    product_version: '&{NULL_VALUE}'
    reproducible: '&{NULL_VALUE}'
    resolved: '&{NULL_VALUE}'
    status: Open
    title: NSTask needs API to set/get pipes/file handles at any file descriptor
