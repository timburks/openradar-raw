apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: "5762270"
    labels:
        datastore_id: "15"
data:
    classification: '&{NULL_VALUE}'
    created: "2008-11-16T08:47:55.885252Z"
    description: "Summary:\r\nAttempting to set track artwork by sending a JPEG through an AppleEvent results in an error -116 (memSCErr). This sounds much more like an internal system error than it does anything else.\r\n\r\nSteps to reproduce:\r\n1. Play a track in iTunes.\r\n2. Run the attached \"Set JPEG as art\" script.\r\n\r\nExpected results:\r\nEither:\r\n* an \"iTunes couldn't set....\" error dialog\r\n* it working\r\n\r\nActual results:\r\nerror -116\r\n\r\nRegression:\r\nOnly tested under Leopard/x86.\r\n\r\nNotes:\r\n'ae.txt' contains a log of the AppleEvents sent, with the contents of the JPEG removed.\r\nRun jpeg-test.sh to regenerate it.\r\n\r\nThe syntax for setting track artwork is suspiciously weird-looking, but seems to work for other people. However, they report that you have to use a PICT file with the first 512 bytes removed, which sounds kind of broken.\r\n\r\nI tried \"(theJpeg as picture)\" in the script, but it only reports that AppleScript can't coerce JPEG pictures into pictures.\r\n\r\n--\r\n\r\nset fd to (open for access (choose file with prompt \"Choose a JPEG:\"))\r\nset theJpeg to (read fd as JPEG picture)\r\ntell application \"iTunes\"\r\n\tset the data of the front artwork of the current track to theJpeg\r\nend tell\r\n\r\n--\r\n\r\n#!/bin/sh\r\n\r\nexport AEDebug=1\r\nexport AEDebugSends=1\r\nexport AEDebugReceives=1\r\nexport AEDebugVerbose=1\r\n\r\n./Set\\ JPEG\\ as\\ art.app > ae.txt 2>&1"
    email: astrange@gmail.com
    modified: "2011-08-28T05:50:35.092593Z"
    number: "5762270"
    number_intvalue: 5762270
    originated: '&{NULL_VALUE}'
    parent_number: "4837996"
    product: '&{NULL_VALUE}'
    product_version: '&{NULL_VALUE}'
    reproducible: '&{NULL_VALUE}'
    resolved: '&{NULL_VALUE}'
    status: Duplicate/4837996
    title: Error -116 when setting iTunes track artwork with JPEGs through AppleScript
