apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB9217524
    labels:
        datastore_id: "5034197525725184"
data:
    classification: Incorrect/Unexpected Behavior
    created: "2021-06-28T18:51:20.818713Z"
    description: "This used to work correctly right after the WWDC announcement of SK2, but it stopped working at one point. \r\nFWIW it stopped working before the method got renamed (it used to be request(with:)). \r\n\r\nI have tried the method using the SKDemo app (updating the methods to their new names after beta 2) https://developer.apple.com/documentation/storekit/in-app_purchase/implementing_a_store_in_your_app_using_the_storekit_api.\r\n\r\nIâ€™ve also tried this with my own testing app. In both cases, I tried with StoreKit Config files, and in my own app I also tried without the config file. \r\n\r\nHowever, SKProductsRequest still works correctly for the same app, for the same product identifiers. \r\nThis is currently blocking me from even testing out StoreKit 2, since this method is the basis for most of the API. \r\n\r\nExpected behavior: \r\nproducts(for:) would return products for existing product ids. \r\n\r\nActual: \r\nproducts(for:) always returns an empty set. \r\n\r\n\r\nI spotted this in the logs: \r\n\r\n```\r\n[StoreKit:0df2] Failed to decode Product:\r\ntypeMismatch(for: [StoreKit.Product.Key.attributes, StoreKit.Product.Key.description, StoreKit.Product.Key.standard], expected: Swift.String)\r\n```"
    email: andy@revenuecat.com
    modified: "2021-06-28T18:51:20.818859Z"
    number: FB9217524
    number_intvalue: 9217524
    originated: June 28, 2021, 3:48PM
    parent_number: '&{NULL_VALUE}'
    product: StoreKit
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: Product.products(for:) always returns empty results
