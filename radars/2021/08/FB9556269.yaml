apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB9556269
    labels:
        datastore_id: "5031082634248192"
data:
    classification: Suggestion
    created: "2021-08-24T06:39:05.092748Z"
    description: "iOS 13 introduced the compositional layout API. One major feature of this API is the possibility to have sections scrolling orthogonally and independently. This is a great way to build layouts which were previously only possible by nesting collections views into other scrollable views (e.g. a table view).\r\n\r\nOne downside of this approach, though, is that you do not get access to the underlying orthogonal scroll views for further customization. On narrow layouts (iPhone, iPad split screen) it might be namely useful to increase the deceleration rate of such scroll views horizontally so that navigation between items is made more convenient by gently swiping from item to item, especially when snapping at item boundaries. Sometimes you might also want to make horizontal scroll views always bounce, even if all items horizontally fit, or to have the scroll view indicator visible.\r\n\r\nSuch customization would require an improvement of the existing compositional layout API. I am not sure that providing an underlying access to each collection view orthogonal scroll view directly (as a `UIScrollView`) would be a good idea as it breaks encapsulation. It might be better to:\r\n\r\n- Identify the properties of `UIScrollView` which should be customizable for a compositional layout orthogonal section (e.g. `decelerationRate`, `indicatorStyle`, `alwaysBounceHorizontal`, etc.).\r\n- Provide them as new customization properties on `NSCollectionLayoutSection`, maybe through a dedicated `NSCollectionLayoutOrthogonalSectionConfiguration`\x1C which applies only when `UICollectionLayoutSectionOrthogonalScrollingBehavior` is different from `.none`. This would make each section configurable separately as well, as the desired behavior might be different between sections.\r\n\r\nThank you very much in advance for considering this improvement, which would make the compositional layout even more flexible."
    email: defagos@gmail.com
    modified: "2021-08-24T06:39:05.092898Z"
    number: FB9556269
    number_intvalue: 9556269
    originated: Aug 24, 2021
    parent_number: '&{NULL_VALUE}'
    product: UIKit
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: 'Compositional layout API: Orthogonally scrollable sections should be customizable (deceleration rate, bouncing, scroll indicators)'
