apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB9026259
    labels:
        datastore_id: "4941356204032000"
data:
    classification: Incorrect/Unexpected Behavior
    created: "2021-03-02T23:27:45.600768Z"
    description: "Please describe the issue:\r\n\r\nSPM supports both of these formats for dependencies:\r\n\r\n.package(url: \"https://github.com/daltoniam/Starscream.git\", .upToNextMinor(from: \"3.1.1\"))\r\n.package(url: \"https://github.com/daltoniam/Starscream\", .upToNextMajor(from: “3.1.0”))\r\n\r\nNotice that one is using a trailing “.git” and one isn’t. When I depend my app on two dependencies, and they each in turn depend on a 3rd dependency - but specified with different URLs, dependency resolution fails with an error like: “Missing package product 'Starscream’”\r\n\r\nThis error does not seem to occur when adding these dependencies to a project directly through Xcode. But it does when adding them to your own package via a Package.swift.\r\n\r\n\r\nPlease list the steps you took to reproduce the issue:\r\n\r\n1. Open Xcode and create a new package: File -> New -> Swift Package...\r\n2. You can leave name MyLibrary. Save it somewhere.\r\n3. Open the Package.swift inside of the new MyLibrary package.\r\n4. Add the following platforms section below the name lines\r\n\r\nplatforms: [\r\n    .iOS(.v14),\r\n    .macOS(.v11)\r\n],\r\n\r\n\r\n5. Add the following 2 lines to the dependencies section. Note I am using exact versions so this should continue to work consistently.\r\n\r\n.package(name: \"Apollo\", url: \"https://github.com/apollographql/apollo-ios.git\", .exact(\"0.41.0\")),\r\n.package(name: \"AbsintheSocketTransport\", url: \"https://github.com/aj-foster/absinthe-socket-transport.git\", .exact(\"0.0.1\")),\r\n\r\n\r\n6. Add the two products to the dependencies section of the MyLibrary target. See attached project for what your final Package.swift should look like.\r\n\r\n.product(name: \"Apollo\", package: \"Apollo\"),\r\n.product(name: \"AbsintheSocketTransport\", package: \"AbsintheSocketTransport\"),\r\n\r\n\r\n7. Try to build the MyLibrary target. For Mac or iOS. They both will fail with the error: “Missing package product 'Starscream’”\r\n\r\n\r\nWhat did you expect to happen?\r\n\r\nApollo depends on Starscream with .upToNextMinor(from: \"3.1.1\") \r\nabsinthe-socket-transport depends on SwiftPheonixClient 1.3.0 which depends on Starscream with .upToNextMajor(from: \"3.1.0\")\r\n\r\nI would expect Xcode to understand that it can use Starscream 3.1.1 and use it, compiling without errors.\r\n\r\n\r\nWhat actually happened?\r\n\r\nDependency resolution kinda seems to complete, but compiling fails with the error:\r\n\r\nMissing package product 'Starscream’”\r\n\r\nStarscream 3.1.1 does seem to be cloned into the checkouts folder in derived data, but Xcode isn’t using it for some reason. When I fork Apollo and change it to use the “.git” suffix on the Starscream dependency, then things work as expected."
    email: crayment16@gmail.com
    modified: "2021-03-02T23:27:45.600934Z"
    number: FB9026259
    number_intvalue: 9026259
    originated: March 2, 2021
    parent_number: '&{NULL_VALUE}'
    product: Swift Compiler
    product_version: ""
    reproducible: ""
    resolved: ""
    status: Open
    title: SPM Package resolution doesn't handle different URLs to the same dependency
