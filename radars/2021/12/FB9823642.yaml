apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB9823642
    labels:
        datastore_id: "4962409294856192"
data:
    classification: Bug
    created: "2021-12-27T16:50:53.673893Z"
    description: "Given this trivial code:\r\n\r\nstruct Container {\r\n    let closure: (Int) -> Void\r\n}\r\n\r\nlet container = Container { param in\r\n    print(\"\\(param)\")\r\n}\r\n\r\nOne can assume calling container.closure(42) will print out 42, which is true.\r\n\r\nHowever, if this same closure is retrieved from the container's Mirror:\r\n\r\nlet mirror = Mirror(reflecting: container)\r\nlet closure = mirror.children\r\n    .first(where: { $0.label == \"closure\" })!\r\n    .value as! ((Int) -> Void)\r\n\r\n... then calling closure(42) distorts the parameter's value, and it prints out 6166589480.\r\n\r\nThe same thing happens if you use String instead of Int, and I assume with other types too.\r\nIf I pass a reference to an object, expectedly that reference gets messed up too and I get EXC_BAD_ACCESS when trying to access the object."
    email: a.naumov91@gmail.com
    modified: "2021-12-27T16:50:53.674179Z"
    number: FB9823642
    number_intvalue: 9823642
    originated: 12.27.21
    parent_number: '&{NULL_VALUE}'
    product: Swift Standard Library
    product_version: ""
    reproducible: Always
    resolved: ""
    status: ""
    title: Closure obtained from reflection cannot properly address input parameters
