apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB9818366
    labels:
        datastore_id: "5006201888702464"
data:
    classification: ""
    created: "2021-12-22T17:33:59.955027Z"
    description: "Problem:\r\n\r\nSwiftUI doesn't respect the hit-testing preferences of the UIViews inside UIViewRepresentables.\r\n\r\nTwitter thread of me complaining about this problem: https://twitter.com/mattxcurtis/status/1473543903232118787\r\n\r\nUIViews have several ways they can react to hit-testing, primarily:\r\n\r\n- UIView.isUserInteractionEnabled\r\n- UIView.point(inside:event:)\r\n- UIView.hitTest(_:event:)\r\n\r\nWhile UIViewRepresentable will let you embed a UIView in SwiftUI content, SwiftUI completely ignores the inner UIView's hit-testing preferences, and instead treats the entire region of space the UIViewRepresentable takes up as a fully hit-testable area, which means the UIViewRepresentable blocks all touches to any SwiftUI content below it.\r\n\r\nSteps to reproduce:\r\n\r\nThe attached project demonstrates this issue with a UIViewRepresentable that creates a UIView that has isUserInteractionEnabled set to false. The UIViewRepresentable still blocks touches to the SwiftUI content below it.\r\n\r\nLink to the project attached to the original radar on Github: https://github.com/matt-curtis/UIViewRepresentable-hitTest-bug-demonstration\r\n\r\nExpected behavior:\r\n\r\nSwiftUI should be take into account and respect the hit-testing preferences of the UIView content it lets you embed. Not taking this hit-testing into account makes it much harder to integrate UIKit content with SwiftUI content.\r\n\r\nWorkarounds:\r\n\r\nUsing SwiftUI's contentShape, or allowsHitTesting, can give you some ability to mitigate this problem, but they are no substitute for the flexibility of UIKit's built-in methods."
    email: matt.curtis.biz@gmail.com
    modified: "2021-12-22T17:58:08.296232Z"
    number: FB9818366
    number_intvalue: 9818366
    originated: 12/22/2021
    parent_number: '&{NULL_VALUE}'
    product: SwiftUI
    product_version: "15.4"
    reproducible: ""
    resolved: ""
    status: Open
    title: SwiftUI ignores UIView.isUserInteractionEnabled and other UIKit hit-testing methods
