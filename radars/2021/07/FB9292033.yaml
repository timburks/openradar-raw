apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB9292033
    labels:
        datastore_id: "5029516145590272"
data:
    classification: Incorrect/Unexpected Behavior
    created: "2021-07-08T18:50:43.555488Z"
    description: "Background: Google Chrome presents both banner-style and alert-style notifications. The alert-style notifications are delivered through a specific helper .app nested within Google Chrome.app. For the purposes of this bug report, I’m working with the Google Chrome Canary, our nightly build, so I will refer to it as Google Chrome[ Canary], as an indication that I’m using the canary but the bug will manifest equally even in the ordinary stable version of Chrome. The two sources of notifications are, in version 93.0.4568.0:\r\n\r\nGoogle Chrome[ Canary].app\r\nGoogle Chrome[ Canary].app/Contents/Frameworks/Google Chrome Framework.framework/Versions/93.0.4568.0/Helpers/Google Chrome Helper (Alerts).app\r\n\r\nAlerts produced by both of these .apps are ordinarily attributed in the Notification Center to the outermost .app, using its name (such as Google Chrome[ Canary]) and icon. This is correct and expected.\r\n\r\nUnder some circumstances, alerts produced by the inner Google Chrome Helper (Alerts).app are attributed to Google Chrome Helper (Alerts) rather than Google Chrome[ Canary], and instead of showing the proper icon, show a grayed-out version with a prohibitory sign superimposed. This is incorrect and unexpected.\r\n\r\nIt appears that this occurs when the first notification (or request for notification permission) from the inner Google Chrome Helper (Alerts) occurs before Launch Services has had an opportunity to fully register the entire Google Chrome[ Canary].app. This is most likely to occur following a fresh installation of Chrome, as Chrome currently requests notification permission fairly early during startup, and this request may race Launch Services database registration of the entire .app bundle.\r\n\r\nSteps to reproduce:\r\n\r\nRun these commands to revoke any notification approvals for Chrome, and to reset the Launch Services database.\r\n\r\n% defaults delete com.apple.ncprefs\r\n% killall -TERM usernoted\r\n% /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill\r\n\r\nThen, launch Chrome. For this test, I am using Google Chrome Canary, from https://www.google.com/chrome/canary/, installed in /Applications. For this test, it’s not relevant that Chrome has already been installed and that it’s saved data in ~/Library/{Application Support,Caches,Preferences}.\r\n\r\nExpected behavior:\r\n\r\nChrome should start, and because notification permission had been revoked, the OS should show two notifications requesting this permission. One is associated with banners, and the other with alerts. Both of these notifications should attribute “Google Chrome[ Canary]” and should use that product’s proper icon, not grayed out, and without any prohibitory sign superimposed. Assuming permission to notify is granted notifications subsequently raised by Chrome will also be attributed properly to “Google Chrome[ Canary]” and will use the proper icon.\r\n\r\nObserved behavior:\r\n\r\nOn occasion, Chrome starts, and the OS shows two notifications requesting permission for Chrome to notify. The notification associated with banners will be displayed correctly. The notification associated with alerts will be attributed to “Google Chrome Helper (Alerts)” instead of “Google Chrome[ Canary]”, and that notification’s icon will be grayed out with a prohibitory sign superimposed. Assuming permission to issue alert-type notifications is granted, alert-type notifications subsequently raised by Chrome will also be attributed to “Google Chrome Helper (Alerts)” and will use the wrong icon. The attached screen shot (https://bugs.chromium.org/p/chromium/issues/attachment?aid=509974&signed_aid=Ti45WLNnadOVzQjDd775NA==) shows a demonstration of this problem.\r\n\r\n(Note: to test notifications raised by Chrome, it is possible to use https://tests.rknoll.at/. The site must be granted permission to notify from within Chrome when visited. With the “Req. interaction” checkbox checked, Chrome will raise an alert-type notification when “Display the notification” is checked.)\r\n\r\nThe incorrect attribution persists as long as NotificationCenter (/System/Library/CoreServices/NotificationCenter.app) remains running. “killall -TERM NotificationCenter” causes the notifications to be dismissed, and assuming a fairly immediate restart (as is typical), they will be redisplayed correctly: those that had the wrong icon and attribution will be corrected on NotificationCenter relaunch, assuming the LaunchServices database is correct at that time. This is effective both for notifications offered by Chrome and the OS-provided notifications requesting permission to notify. Accordingly, this is also self-healing upon reboot (or re-login): attribution returns to the proper .app, and the correct icon is displayed, after a reboot.\r\n\r\nAs the bug involves a race against Launch Services registration, I have found that certain conditions alter the likelihood of experiencing it. It is more likely to occur with the universal (x86_64-and-arm64) version of Chrome that we ship to arm64 Macs, likely because it’s heavier than the x86_64-only version that we ship to x86_64 Macs, causing registration to take longer. Although it’s possible to trigger the bug on a Mac of any CPU architecture, using the universal version on x86_64 seems to produce a higher likelihood of reproduction than using the x86_64-only version.\r\n\r\nI have experienced this bug on:\r\n\r\nmacOS 12.0db2 21A5268h on arm64\r\nmacOS 11.4 20F71 on x86_64\r\nmacOS 12.0db2 21A5268h on an x86_64 virtual machine\r\nmacOS 11.4 20F71 on an x86_64 virtual machine\r\n\r\nOriginally reported at https://crbug.com/1227370."
    email: mark@chromium.org
    modified: "2021-07-08T18:50:43.555651Z"
    number: FB9292033
    number_intvalue: 9292033
    originated: "2021-07-08"
    parent_number: '&{NULL_VALUE}'
    product: macOS/Notification Center
    product_version: 11.4 20F71, 12.0db2 21A5268h
    reproducible: Sometimes
    resolved: ""
    status: Open
    title: '[Chrome] Notification Center can attribute notifications to incorrect application when applications are nested'
