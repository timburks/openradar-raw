apiVersion: openapi/v1alpha1
kind: Radar
metadata:
    name: FB8936914
    labels:
        datastore_id: "4934006307028992"
data:
    classification: Suggestion
    created: "2021-01-22T14:02:28.291648Z"
    description: "Hello,\r\n\r\nI've been working with system extensions on macOS Catalina / Big Sur (Endpoint Security extensions to be precise) and I think there should be a non-intrusive way of determining whether or not a system extension has been approved by the user. You can of course use an activation OSSystemExtensionRequest and determine through the OSSystemExtensionRequestDelegate whether the user needs to approve it (a 'requestNeedsUserApproval:' message is passed) or if the extension has been loaded into the system (a 'request:didFinishWithResult:' message is passed). That's great but the major drawback is that making such a request when the extension is not loaded also starts the action of loading the system extension: The user is shown a system popup window and the 'Allow' request shows up in System Preferences > Security & Privacy.\r\n\r\nI think being able to check this is very useful. Say, for instance, you have an app with optional features, one of which requires the activation of a system extension. If we could check the load status of that system extension, we could display to the user a proper UI that can either:\r\n- suggest that it could be activated and, if/when they choose to do so, start the loading process and guide the user;\r\n- show to the user that it is already approved and working;\r\n\r\nThere are some ways to achieve this that I've thought about, but they seem to be hacks rather than a proper way of doing things:\r\n1) Trying to parse the output of 'systemextensionsctl list'. It seems problematic since an extension can appear multiple times in here (based on succesive activations / deactivations) and also since the output isn't particularly documented.\r\n2) Opening an NSXPCListener from inside the system extension and determining the activation status of the extension by whether or not a process can connect to this.\r\n3) Attempting to look for a TeamId.com.mybundle.identifier daemon process either through something like SMCopyAllJobDictionaries (now deprecated) or by parsing the output of a 'launchctl' command, such as 'sudo launchctl list TeamId.com.mybundle.identifier 2>&1 | grep PID'.\r\n\r\nMy suggestion is to add support in OSSystemExtensionRequest for checking the activation status of a system extension."
    email: burcea.bogdan.madalin@gmail.com
    modified: "2021-01-22T14:02:28.29194Z"
    number: FB8936914
    number_intvalue: 8936914
    originated: 11-Dec-2020
    parent_number: '&{NULL_VALUE}'
    product: SystemExtensions Framework
    product_version: macOS 10.15.4 and up
    reproducible: Yes
    resolved: No
    status: Open
    title: Method for checking activation status of an [Endpoint Security] system extension.
